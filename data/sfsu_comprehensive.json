[
  {
    "source": "https://cs.sfsu.edu/",
    "category": "CS Department",
    "title": "Welcome | Department of Computer Science",
    "content": "Welcome\nResearch\nOur faculty and students are engaged in projects and research in many areas of Computer Science. Major areas of focus include Computing for Life Sciences, Soft Computing and Decision Support Systems, Software Engineering and Systems, Human Computer Interaction and more.\nExplore CS Research\nGraduate Program\nCS Department offers a Master of Science (MS) degree. Faculty and students are engaged in innovative research projects, many funded by grants from government or industry such as NSF and NIH, IBM Research, Microsoft, Amazon Web Services, Emulex, Claritics.\nExplore CS Graduate Programs\nUndergraduate Program\nWe are committed to providing the opportunity to master the Computer Science discipline to students from all backgrounds. Our program combines strong fundamentals, project- and team- oriented activities, and soft skills, leading to a well-rounded professional education.\nExplore CS Undergraduate Programs\nCS @ SF State Highlights\nWe Are Hiring!\nSan Francisco State University's Computer Science Department in the College of Science and Engineering offers an exciting opportunity for a tenure-track Assistant Professor position beginning August 2026. We seek a colleague whose teaching and research interests include Cybersecurity, Machine Learning/Generative AI, and/or Quantum Computing although candidates with research interests in other areas are also welcome to apply. We are especially interested in qualified candidates with a demonstrated commitment -- through their research, teaching, and service -- to the excellence of our academic program and community.\nFor best consideration, please apply by 1/31/2026.\nApply Here.\nStudent Spotlight - Diversity and Equity\nSF State Science Coding Programs Boost Biotech Diversity\nGrants impact SF State’s computer science diversity efforts with new certification programs and scholarships. The importance of diversity and equity in computer science is important to the CS Department and faculty members' efforts have recently received recognition from both academia and the biotech industry.\nReview Diversity Grant Efforts\nStudent Spotlight - Graduate Certificates Options\nEthical Artificial Intelligence & Software Engineering\nCS Department announces two new Graduate Certificates in Ethical Artificial Intelligence and Software Engineering. Learn about the certificates, the eligibility processing and how to apply.\nView Grad Certificates Options\nNews\nSFSU is first CSU campus to join IBM Quantum Network\nIBM quantum resources open doors for hands-on learning and workforce readiness\nSan Francisco State University is the first C…\nCIDER Lab Wins First Prize at Kumo AI Hackathon\nOn August 20, 2025, the Kumo AI Hackathon took place in San Francisco. The CIDER Lab students Binrong Zhu, Guiran Liu, and Y…\nAnnouncement of Two New Grants Awarded From NSF\nGrant 1\nCollaborative Research: CISE Core Small: NeTS: Intelligent Reflecting Surface Assisted Physical Layer Security Enhan…\nMore News\nMore events coming soon!\nMore Upcoming Events",
    "url": "https://cs.sfsu.edu/"
  },
  {
    "source": "https://cs.sfsu.edu/news",
    "category": "CS Department",
    "title": "News Listing | Department of Computer Science",
    "content": "News Listing\nSeptember 25, 2025\nSFSU is first CSU campus to join IBM Quantum Network\nIBM quantum resources open doors for hands-on learning and workforce readiness\nSan Francisco State University is the first C…\nSeptember 11, 2025\nCIDER Lab Wins First Prize at Kumo AI Hackathon\nOn August 20, 2025, the Kumo AI Hackathon took place in San Francisco. The CIDER Lab students Binrong Zhu, Guiran Liu, and Y…\nAugust 28, 2025\nAnnouncement of Two New Grants Awarded From NSF\nGrant 1\nCollaborative Research: CISE Core Small: NeTS: Intelligent Reflecting Surface Assisted Physical Layer Security Enhan…\nAugust 26, 2025\nProfessor Jozo Dujmovic authors new AI book from Springer Nature\nWe are pleased to announce that CS Professor Jozo Dujmovic’s new AI book -- Graded Logic: Modeling Human Commonsense Reasoni…\nAugust 01, 2025\nNew Undergraduate Certificate in Generative Artificial Intelligence: Technology, Applications, and Ethics\nThe Department of Computer Science is proud to announce the launch of a new Undergraduate Certificate in Generative Artifici…\nFebruary 17, 2025\nProfessor Dragutin Petkovic presented a keynote speech at IEEE CCWC Conference in Las Vegas January 8, 2025 on \"GenAI and Education\"\nProfessor Dragutin Petkovic delivered a keynote speech on January 8, 2025, at the IEEE Computing and Communication Workshop…\nDecember 02, 2024\nNew Department of Defense, Energy grants prepare SFSU students for industry jobs\nThe grants expand research opportunities in engineering, robotics and quantum computing\nTechnology is constantly evolving, w…\nOctober 07, 2024\nInstructor Joseph Hui Featured on CBS News for Commitment to Helping Youth\nJoseph Hui, an instructor here at SFSU has been featured on CBS News for turning his passion for bikes into a mission to sup…\nSeptember 25, 2024\nBethel, Huang Awarded U.S. Department of Energy Research Grant in Quantum Computing\nThe U.S. Department of Energy (DOE) Office of Advanced Scientific Computing Research recently awarded a $250,000, five-year…\nJuly 09, 2024\nSan Francisco State University Lecturer Duc Ta Earns Prestigious Teaching Award\nSFSU Recognizes Excellence in Teaching with Award to CS Lecturer\nSan Francisco State University's Computer Science Departmen…\nJuly 09, 2024\nSan Francisco State Honors Computer Science Graduates at 2024 Ceremony\nSFSU Celebrates its Newest Class of Graduates\nSan Francisco State University's Computer Science Department hosted a Gradua…\nApril 15, 2024\nIn-person hackathon makes triumphant return to campus\nSF Hacks was a nonstop weekend filled with ‘hacking,’ friendly competition, networking, karaoke and Bob Ross\nWhat is a hacka…\nMarch 04, 2024\nKulkarni Lab Receives Grant from Smith-Kettlewell Eye Research Institute\nFebruary 27, 2024\nAI-STAARS Program Awards Scholarships to 20 Computer Science Freshman\nAI-STAARS stands for Artificial Intelligence Scholarships that Improve Academic Achievement, Retention, and Career Success.…\nFebruary 27, 2024\nComputer Science, Biology, and Psychology Faculty Receive a Renewal Award from Genentech Inc.\nAnagha Kulkarni (CS), Ilmi Yoon (CS), Pleuni Pennings (Biology), and Shasta Ihorn (Psychology) have received a renewal award…\nFebruary 19, 2024\nComputer Science Researchers Receive U.S. Department of Energy Grant\nDecember 04, 2023\nSF State program prepares participants to view AI through an ethical lens\nThe Ethical AI certificate provides a foundation in the computer science, philosophy and business of ethical AI\nU.S. Preside…\nNovember 15, 2023\nCISCO @ SFSU\nOver 100 SFSU Computer Science students indicated interest in attending a professional development workshop hosted by CISCO…\nNovember 03, 2023\nCISCO Meraki Campus Visit\n40 SFSU Computer Science students had the opportunity to visit the CISCO Merkai Campus in downtown San Francisco. In collabo…\nSeptember 29, 2023\nFall 2023 Engineering and Computer Science Career Fair\nThis year’s Engineering and Computer Science Career Fair took place on September 29, 2023, in the Annex. This event was host…\nSeptember 26, 2023\nOpen Faculty Position in CS Department\nSan Francisco State University, Department of Computer Science offers an exciting opportunity for two tenure-track Assistant…\nSeptember 22, 2023\nCS Department College Tour\nThe Computer Science Academy at Oakland Technical High School coordinated a campus visit with several of our majors to learn…\nAugust 31, 2023\nInaugural Meeting of SFSU’s ACM CS Research Special Interest Group\nIn conjunction with the CS ACM student chapter and its Treasurer and former president, Mark Kim, Professors Daniel Huang and…\nMay 28, 2023\nCS Department Graduation Celebration 2023\nTo celebrate the achievements of our Computer Science students, the department held a Graduation Celebration for all CS unde…\nMay 28, 2023\nProf. Daniel Huang Recipient 2023 Petkovic Family Teaching Excellence Award\nProf. Daniel Huang of the SFSU Computer Science Department is the recipient of the 2023 Petkovic Family Teaching Excellence…\nMay 15, 2023\nEthical AI Certificate Presentation Awarded at the AAAI Symposium (2023)\nComputer science professor Dragutin Petkovic, alongside philosophy professor Carlos Montemayor and business management profe…\nMay 08, 2023\nLeaping Into the World of Computer Science with the help of Google’s CSRMP\nThe CS Department would like to congratulate SFSUs own Purva Zinjarde, on their acceptance into the Google CS Research Mento…\nJune 01, 2022\nBiotech Certificate Students get Insider Peek into Industry Jobs\nThe gSTAR program is only one year old, but the SF State-Genentech collab is already impacting students, faculty and industr…\nDecember 16, 2020\nSF State Science Coding Programs Boost Biotech Diversity\nGrants impact SF State’s computer science diversity efforts with new certification programs and scholarships\nDespite the San…\nAugust 28, 2018\nBuild the Diverse, Multidisciplinary Computer Science Workforce of the Future\nDeveloping a Computing Application Minor and an Inclusive Learning Environment to Build the Diverse, Multidisciplinary Compu…",
    "url": "https://cs.sfsu.edu/news"
  },
  {
    "source": "https://cs.sfsu.edu/events",
    "category": "CS Department",
    "title": "Events | Department of Computer Science",
    "content": "Events\nFilter by Year\n2025\n2024\n2023\n2025\nMay\n07\nRevealing Hidden Stories: Co-Designing the Thámien Ohlone Augmented Reality Tour\nWed, May 07, 02:00 pm\nSEC 210\nApr\n09\nStanford Cybersecurity: CERT, Clinics, and Competitions\nWed, April 09, 02:00 pm\nSEC 210\nApr\n01\nThe Elusive Quest for AGI: Science or Speculation?\nTue, April 01, 05:00 pm\nSEC 210\nMar\n11\nClimate Change: From Hot Air to Environmental Justice\nTue, March 11, 06:00 pm\nLIB 121\nMar\n07\nAI Entrepreneurship\nFri, March 07, 02:00 pm\nSEC 210\nMar\n03\nDeploy AI at the Edge to Bridge the Information Gap: Efficiency and Security\nMon, March 03, 02:00 pm\nSEC 210\nFeb\n26\nGamification and Playful Design: Exploring the Design Space for Business, Teaching, and Sports\nWed, February 26, 03:00 pm\nSEC 210\nFeb\n19\nAn Intelligent Vocational Storytelling Virtual Reality System for Augmenting Work Performance\nWed, February 19, 02:00 pm\nSEC 210\nFeb\n12\nHow can we Decarbonize the Power Grid and meet AI’s Exploding Power Demands?\nWed, February 12, 02:00 pm\nSEC 210\nFeb\n05\nAn Introduction to Programming Quantum Computers\nWed, February 05, 05:00 pm\nSEC 210\n2024\nDec\n04\nByzantine-Resilient Reinforcement Learning for Multi-UAV Systems\nWed, December 04, 05:00 pm\nSEC 210\nNov\n21\nBeyond the Lens: Detecting Bias through Eye-Tracking Measurements and Computer Vision Techniques\nThu, November 21, 11:00 am\nLIB 286\nNov\n19\nMachine Learning and Artificial Intelligence in Healthcare: Infectious Diseases Case Study and Broader Implications\nTue, November 19, 05:30 pm\nLIB 286\nNov\n18\nHuman-Centered Assistive Robots: From Understanding Commands to Detecting Cognitive Fatigue\nMon, November 18, 04:00 pm\nLIB 286\nNov\n13\nProfessional Decision Support Systems Based on Graded Logic\nWed, November 13, 04:00 pm\nSEC 210\nOct\n29\nGenomics and Deep-Sea Microbiology: Computational Innovations in Biological Research\nTue, October 29, 06:00 pm\nSEC 210\nOct\n15\nFrom Compression to Transformation: Efficient Deep Learning on Mobile Devices and LLMs in Education\nTue, October 15, 04:00 pm\nSEC 210\nOct\n10\nSan Francisco State University Graduate Certificate in Ethical AI – Overview and Early Experiences\nThu, October 10, 05:01 pm\nSEC 210\nSep\n19\nQuantum Computing: What is it, exactly?\nThu, September 19, 06:00 pm\nSEC 210\nSep\n11\nOverview of the Computer Science Graduate Program\nWed, September 11, 06:00 pm\nSEC 210\nFeb\n22\nGraduate Seminar: Secure Distributed Machine Learning with Multi Aggregators in Edge Computing\nThu, February 22, 01:00 pm\nZOOM\nFeb\n21\nGraduate Seminar: Safe and Reliable AI\nWed, February 21, 01:00 pm\nZOOM\nFeb\n20\nGraduate Seminar: Developing Robots for Dynamic, Safety-Critical Environments\nTue, February 20, 01:00 pm\nZOOM\nFeb\n15\nGraduate Seminar: Towards Analyzing Online Communities of Problematic Information:  A Computational Approach\nThu, February 15, 01:00 pm\nZOOM\nFeb\n14\nGraduate Seminar: Global Investigation of Network Connection Tampering\nWed, February 14, 12:30 pm\nZOOM\nFeb\n12\nGraduate Seminar: Iterative Join-Graph Propagation\nMon, February 12, 01:00 pm\nZOOM\nFeb\n08\nGraduate Seminar: Beyond Reality: Crafting the Future of Workforce Training with AI-Driven Immersive Storytelling\nThu, February 08, 01:00 pm\nZOOM\n2023\nNov\n29\nGraduate Seminar: SWIG: Modern Applications\nWed, November 29, 06:00 pm\nThornton Hall 326\nNov\n15\nGraduate Seminar: Computational Approaches to Understanding Perception and the Brain\nWed, November 15, 05:00 pm\nHensill Hall 439\nNov\n08\nGraduate Seminar: Graded Logic for AI Applications\nWed, November 08, 11:00 am\nThornton Hall 331\nNov\n02\nGraduate Seminar: AI-Driven Advancements in Battery Materials and Alzheimer's Biomarker Detection\nThu, November 02, 04:00 pm\nThornton Hall Blakeslee Room\nNov\n01\nGraduate Seminar: Making Physical Models of Maps on Surfaces\nWed, November 01, 06:30 pm\nThornton Hall 331\nOct\n31\nGraduate Seminar: Application of Mathematical Modeling and Machine Learning for Optimizing Network Design and Operation\nTue, October 31, 01:00 pm\nZoom\nOct\n25\nGraduate Seminar: Learning After Graduation\nWed, October 25, 05:00 pm\nHensil Hall 439\nOct\n19\nGraduate Seminar: Coders Wanted: Computational Opportunities in the Aquatic and Biological Sciences\nThu, October 19, 03:45 pm\nThornton Hall 331\nOct\n11\nGraduate Seminar: Towards On-Device Intelligence Through Deep Learning Compression\nWed, October 11, 03:30 pm\nThornton Hall 428\nSep\n14\nGraduate Seminar: What is Quantum Computing and Why Would You Care?\nThu, September 14, 05:15 pm\nThornton Hall 331\nSep\n14\nCS Research Special Interest Group\nThu, September 14, 02:30 pm\nHensil Hall 803\nSep\n13\nUnlock Your Future: Join Our Seminar on Landing Your First Software Engineer Job\nWed, September 13, 11:00 am\nLIB 121\nJan\n03\nPacific Symposium on Biocomputing (PSB) 2023\nTue, January 03, 09:00 am\nFairmont Orchid: The Big Island of Hawaii",
    "url": "https://cs.sfsu.edu/events"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/",
    "category": "Course Catalog",
    "title": "Computer Science | San Francisco State University Bulletin",
    "content": "Computer Science\nCollege of Science and Engineering\nDean: Dr. Carmen Domingo\nDepartment of Computer Science\nTH 906\nPhone: (415) 338-1008\nEmail:\ncsgrad@sfsu.edu\nWebsite:\nhttp://cs.sfsu.edu\nChair: Arno Puder\nGraduate Coordinator: Yang\nGraduate Admissions: Okada\nUndergraduate Advisors: AlJarrah, Dujmovic, Fazli, Humayoun, Kulkarni, Singh, Song, Yue\nProgram Scope\nThe primary mission of the Department of Computer Science is to prepare students for careers as software professionals and graduate studies in computer science and related fields. The department offers a broad curriculum covering the major areas of the computing discipline, integrated with soft skills such as teamwork and written/oral communication; students also gain experience working on group projects. Students are exposed to the fundamentals of computing architecture and computing theory, and focus their studies on the areas of software and systems development. Faculty work directly with students to help them develop the skills and knowledge of computing professionals.\nDepartment faculty are committed to teaching excellence. They remain current in the rapidly changing field of computing technology through continuing research and publications, direct consultation with local industries, and seminar programs that bring top researchers and industry leaders to campus to speak on current developments in the field. The Supervised Industrial Research Program, Practicum option, and other mechanisms provide opportunities for graduate students to complement their academic learning with real-world experience.\nThe department has an additional commitment to sharing its knowledge and skills with the rest of the University community, with local schools, and with community-based organizations in the Bay Area.\nThe Bachelor of Science program stresses a basic foundation in mathematics and physics, and a thorough study of the fundamentals of the discipline: software development, computer architecture, operating systems, programming languages, algorithms, and the theoretical foundations of computer science. A wide variety of elective courses such as mobile development, web/internet applications, bioinformatics, database systems, artificial intelligence, computer graphics, game development, and software engineering allow students to specialize in selected areas. Ethical and social issues of computing are discussed throughout the curriculum. Senior courses include group projects to better prepare students for future job markets. Courses are updated or added regularly to provide necessary training in the latest software technologies.\nThe Master of Science in Computer Science prepares students for a wide variety of careers in computing or related industries as well as for advanced study toward Ph.D. degrees. Our program combines a solid and practical curriculum with high-quality research and project-based activities. In addition to a general core covering the breadth of the computing discipline, students may focus on software engineering in globally distributed environments, computing applications for biotechnology and the life sciences, data mining/big data, and business applications.\nOur faculty maintain active publication records, with significant funding from government agencies (NSF, NIH, Department of Labor, etc.) and industry (Genentech, Microsoft, IBM, Arista Networks, Mozilla, etc.). Students actively engage in research projects, write papers, attend conferences, and participate in funding proposals. SF State’s Center for Computing for Life Sciences and several specialized laboratories provide research and project focus, as well as opportunities to collaborate with faculty and students from other SF State departments and industry. A new Entrepreneurship Program and Developers Prize supports the development of student projects into business or non-profit ventures.\nComputing Facilities\nCentral Facilities\nA network of Mac, Linux, and PC servers supported by SF State Information Technology Services\nA Linux server (unixlab) supported by SF State Information Technology Services, used for Computer Science courses\nWorkstation labs in the SF State J. Paul Leonard Library and around campus\nGeneral Undergraduate Computing Facilities\nIntel servers (Windows and Linux)\nWorkstation laboratories with Mac, Windows, and Linux desktops\nSpecialized Centers, Laboratories, and Computing Resources\nCenter for Computing for Life Sciences (including Amazon cloud servers and 40-node DELL cluster)\nMultimedia and Visualization Laboratory\nBiocomputing and Media Research Group\nBiomedical Image and Data Analysis Lab\nVirtual Computing: VMware GSX Server, Microsoft VirtualPC Server\nHigh-Performance Computing server with NVIDIA Tesla and Titan GPUs\nCareer Alternatives\nMobile application developer\nWeb and internet application developer\nGame developer\nBioinformatics Developer\nData science/data mining developer\nSoftware Engineer\nQuality assurance engineer\nManager of software development teams\nSystems programmer/administrator\nComputer network specialist\nSystem security and/or performance manager\nApplication software designer\nDatabase designer/programmer/administrator\nProgrammer in scientific or business applications\nProfessor\nJozo J. Dujmović (1994),\nProfessor in Computer Science\n. Ph.D. University of Belgrade.\nAnagha K. Kulkarni (2013),\nProfessor in Computer Science\n. Ph.D. Carnegie Mellon University.\nKazunori Okada (2006),\nProfessor in Computer Science\n. Ph.D. University Southern California.\nDragutin Petkovic (2003),\nProfessor in Computer Science\n. Ph.D. University of California, Irvine.\nArno Puder (2008),\nProfessor in Computer Science\n. Ph.D. University of Frankfurt, Germany.\nHui Yang (2006),\nProfessor in Computer Science\n. Ph.D. Ohio State University.\nIlmi  Yoon (2000),\nProfessor in Computer Science\n. Ph.D. University of Southern California.\nAssistant Professor\nAbeer Aljarrah (2018),\nAssistant Professor in Computer Science\n. Ph.D. University of North Carolina at Charlotte.\nSanika  Doolani (2024),\nAssistant Professor in Computer Science\n. Ph.D. University of Texas at Arlington.\nSara El Alaoui (2024),\nAssistant Professor in Computer Science\n. Ph.D. University of Nebraska-Lincoln.\nDaniel E. Huang (2021),\nAssistant Professor in Computer Science\n. Ph.D. Harvard University.\nShahrukh Humayoun (2019),\nAssistant Professor in Computer Science\n. Ph.D. Sapienza University of Rome.\nTimothy Sun (2020),\nAssistant Professor in Computer Science\n. Ph.D. Columbia University.\nJingyi Wang (2019),\nAssistant Professor in Computer Science\n. Ph.D. University of Houston.\nLecturers\nBhaskar, Erwin, Esselmann, Gibson, Hasan, Jones, Kalinin, Kang, Kriese, Mehta, Mogos, Ortiz-Costa, Parra, Phyo, Pico, Pinera, Roberts, Scott, Sikder, Souza, Ta, Tomasevich, Tuttle, Wall\nMajor\nBachelor of Science in Computer Science\nMinor\nMinor in Computer Science\nMinor in Computing Applications\nCertificate\nCertificate in Data Science and Machine Learning for Biotechnology\nMasters\nMaster of Science in Computer Science\nMaster of Science in Data Science and Artificial Intelligence\nCertificates\nGraduate Certificate in Software Engineering\nGraduate Certificate in Ethical Artificial Intelligence\nExplanation of Course Descriptions, Symbols, and Terms\nCSC 101  Introduction to Computing (Units: 3)\nA comprehensive introduction to computing and programming. No prior programming experience is required. Explore the use of computing in everyday life and its impact on our society, and apply foundational ideas of computing to frame a problem and devise a solution using Java programming language.\nCSC 110  Computational Thinking and Quantitative Reasoning (Units: 3)\nPrerequisites: Category I or II placement for QR/Math, or satisfactory completion of ELM requirement, or MATH 70 or ESM 70 with a grade of C or better. Students with Category III or IV placement for QR/Math or students who have not passed MATH 70 or ESM 70 with a C or better must concurrently enroll in\nMATH 111\n.\nBasic building blocks of programming and computational thinking practices including analyzing the effects of computation, creating computational artifacts, using abstractions and models, analyzing problems and artifacts, communicating processes and results, and working effectively in teams. Mathematical models and information retrieval from real-world datasets will be used as vehicles to practice programming and computation thinking.\n(Note: For this course to satisfy General Education, students must earn a grade of C- or CR or higher.)\nCourse Attributes:\n2: MATH/Quantitative Reason\nB4: Math/QR\nCSC 215  Intermediate Computer Programming (Units: 4)\nPrerequisite:\nCSC 101\nwith a grade of C or better.\nDesign, implementation, testing, debugging, maintenance, and documentation of Java programs. Algorithms, programming concepts, and data types in Java. Concepts of object-oriented programming. Numerical and non-numerical problems. Hands-on exercises in programming, and the use of basic software development tools.\nCSC 220  Data Structures (Units: 3)\nPrerequisite: CSC 210 or\nCSC 215\nwith a grade of C or better.\nLinear and non-linear data structures in Java, including lists, stacks, queues, trees, tables, and graphs. Recursion, iteration over collections, Big O notation, and hash tables.\nCSC 221  Data Structure Lab (Unit: 1)\nPrerequisites: CSC 210 or\nCSC 215\n; concurrent enrollment in\nCSC 220\n.\nTraining on the principles of object-oriented programming, data structures (such as stacks, queues, lists, trees, sets, HashMaps, etc.), implementation, and usage in solving real-life problems, recursion, and algorithm analysis. Activity. (CR/NC grading only)\nCSC 230  Discrete Mathematical Structures for Computer Science (Units: 3)\nPrerequisites: CSC 210 or\nCSC 215\n, and\nMATH 227\n(may be taken concurrently) with grades of C or better.\nReview of set algebra, relations and functions, permutations, propositional logic, proof techniques, introduction to graph theory, and infinite sets, and their applications to computer science.\nCSC 256  Machine Structures (Units: 3)\nPrerequisite:\nCSC 230\nwith a grade of C or better.\nDigital logic circuits, data representation, assembly language programming, subroutine linkage, machine language encoding, interrupt and exception handling, memory system concepts, and CPU organization and performance.\nCSC 300GW  Ethics, Communication, and Tools for Software Development - GWAR (Units: 3)\nPrerequisites: Restricted to upper-division Computer Science majors and minors; GE Area 1A/A2; CSC 210 or\nCSC 215\n.\nPrivacy, security, legal, and ethical issues in Software development. Communication relevant to SW development (e.g., reports, contracts, requirements, documentation, collaboration, e-mail, presentations). Study and use of basic tools for SW development and collaboration. (ABC/NC grading only)\nCourse Attributes:\nGraduation Writing Assessment\nCSC 306  An Interdisciplinary Approach to Computer Programming (Units: 3)\nPrerequisites: Restricted to Biology, Chemistry, and Biochemistry majors and Certificate in Data Science and Machine Learning for Biotechnology Professionals students; upper-division standing; or permission of the instructor.\nBasics of programming for interdisciplinary problem-solving, using Python.Topics include basic building blocks of programming (variables, control statements, loops, function, abstraction, and more) and problem-solving approaches relevant to problems in the natural sciences.\nCSC 307  An Interdisciplinary Approach to Web Programming (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nBasics of WWW engineering relevant to studies in interdisciplinary problem-solving. Topics include the basics of developing web and database applications, HTML, PHP, Python, SQL, and MySQL database.\nCSC 309  Computer Programming (Units: 3)\nPrerequisite:\nMATH 226\nor permission of the instructor.\nProcedural programming for scientific applications.  Good programming practices and basic numerical and nonnumerical algorithms for scientists and engineers.\nCSC 310  Computer Programming Lab (Unit: 1)\nPrerequisite: Concurrent enrollment in\nCSC 309\nis recommended.\nExercises in Python programming and use of basic software development tools.\nCSC 311  Data Structures for Data Science Application Development (Units: 3)\nPrerequisite:\nCSC 306\n* or equivalent.\nFocuses on learning about and utilizing data structures and algorithms effectively for developing data science applications. Utilizes Python and Jupyter Notebook. [Formerly CSC 219]\nCSC 317  Introduction to Web Software Development (Units: 3)\nPrerequisite:\nCSC 220\nor permission of the instructor.\nIntroduction to topics in UNIX and creating web pages including reading and processing user input submitted through web pages, client side and server side programming, connecting a web page to a database, and building an e-commerce site or Internet Application.\nCSC 340  Programming Methodology (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\nwith grades of C or better.\nAdvanced data structures and algorithms for manipulation in C++ with an emphasis on design and implementation, practical applications, and algorithms for sorting, searching, and graphs.\nCSC 408  Machine Learning and Data Science for Personalized Medicine (Units: 3)\nPrerequisite:\nCSC 220\n* or\nCSC 311\n* or equivalent; a college-level biology course; or permission of the instructor.\nExploration of the concepts and tools needed to analyze, interpret, and reason from genomic datasets to help medical professionals better treat their patients. Diseases often affect patients differently depending on their genetic background. To make personalized medicine a reality, it is necessary to leverage the data from genomic datasets. Genomic data science applies machine learning and data science to the genome to better diagnose and treat patients. [Formerly CSC 508]\nCSC 411  Intermediate Machine Learning for Interdisciplinary Data Scientists (Units: 3)\nPrerequisite:\nCSC 220\nor\nCSC 311\nor equivalent; a college-level biology course; or permission of the instructor.\nIntermediate machine learning concepts and tools. Focus on application development, linear model, deep neural network and transfer learning using Python, Tensorflow, and Keras. [Formerly CSC 308]\nCSC 412  Advanced Software Lab (Unit: 1)\nPrerequisites:\nCSC 220\n; concurrent enrollment in\nCSC 340\nrecommended.\nHands-on exercises in advanced programming, software development tools, and web technologies. Students are encouraged to bring their laptops. Activity. May be repeated for a total of 2 units. (Plus-minus letter grade only)\nCSC 413  Software Development (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 317\nwith grades of C or better.\nModern software applications. Object-oriented techniques: encapsulation, inheritance, and polymorphism as a mechanism for data design and problem solution. Software design, debugging, testing, and UI design. Software maintenance. Software development tools. Extra fee required. (Plus-minus letter grade only)\nCSC 415  Operating System Principles (Units: 3)\nPrerequisites:\nCSC 256\n,\nCSC 340\n*,\nMATH 324\n, and\nPHYS 230\nwith grades of C or better or graduate standing*.\nOperating system concepts: concurrent processes, basic synchronization techniques, deadlock, memory management, file systems, security, networks, and distributed processing. Extra fee required.\nCSC 509  Data Science and Machine Learning for Medical Image Analysis (Units: 3)\nPrerequisite:\nCSC 411\n(may be taken concurrently).\nExploration of the application of state-of-the-art deep learning models to medical image analysis: the task of identifying objects such as tissue, bone within an image. Discussion of topics central to deep learning-based image analysis, and practical application of these concepts in three hands-on case studies.\nCSC 510  Analysis of Algorithms I (Units: 3)\nPrerequisites:\nCSC 340\n* and\nMATH 324\n* with grades of C or better.\nNotions of main algorithm design methods. Measures of algorithm complexity in space and time. Algorithms of classic problems including sorting and scheduling and complexity analysis of such algorithms. (Plus/minus ABC/NC, CR/NC allowed)\nCSC 520  Theory of Computing (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\n;\nMATH 225\nor\nMATH 325\nwith grades of C or better.\nExamination of automata, formal languages, and the notion of computability. Discussion of sequential machines as language acceptors and context-free and context-sensitive grammars. Exploration of recursive functions, universal Turing machines, and unsolvable problems.\nCSC 600  Programming Paradigms and Languages (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 510\n* with grades of C or better or graduate-level standing*.\nConcepts for high-level programming languages. Procedural, logic, functional, and object-oriented programming paradigms. Comparative study of several languages and an introduction to grammars and parsing techniques. Extra fee required.\nCSC 601  Data Science and Machine Learning for Biotechnology Seminar Series (Unit: 1)\nPrerequisite:\nCSC 408\n* or\nCSC 411\n* or\nCSC 509\n*.\nFeaturing scientists in related areas from Genentech or other biotechnology industry or academia, explore a broad view of the topics on Drug design, modeling to predict drug performance, or new drug approval processes. (CR/NC grading only)\nCSC 602  Interview Preparation for Data Science and Machine Learning for Biotechnology Opportunities (Units: 2)\nPrerequisite:\nCSC 408\nor\nCSC 411\nor\nCSC 509\n.\nPreparation for interviews for data science-related internships and full-time positions in industry. Emphasis on oral and written communication common in coding interviews for problem-solving. Development of interview skills such as how to communicate about technical aspects, describe a problem, and articulate issues. Practice of key problem-solving strategies specific to technical/coding interviews in Biotechnology. (CR/NC grading only)\nCSC 615  Embedded Linux Systems and Physical Computing (Units: 3)\nPrerequisite:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nExploration of embedded Linux programming in C, threads and synchronization, resource limits, working with sensors and motors, programming various communication protocols, and building a physical computing device. Extra fee required. (Plus-minus letter grade only)\nCSC 620  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 621  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 630  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students.\nPrerequisites for\nCSC 630\n:\nCSC 413\n* and either\nMATH 225\n* or\nMATH 325\n* with grades of C or better; a GPA of 3.0 or better; or permission of the instructor.\nGraphics system design and GPU pipeline architecture and Generative AI on graphics. Overview of device-independent graphic systems such as OpenGL, 2- & 3-dimensional viewing pipelines, hidden line and surface removal algorithms, raster graphics techniques, and color space models. Topics on generative AI for graphics such as StyleGAN are covered. Course fee required. (Plus-minus letter grade only)\n(\nCSC 830\n/\nCSC 630\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCourse Attributes:\nCSC 630\n/830\nCSC 631  Multiplayer Game Development (Units: 3)\nPrerequisite for\nCSC 831\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 631\n: Upper-division standing;\nCSC 413\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer graphics and network characteristics of multiplayer games.  Design and development of a game as a team project.\n(\nCSC 831\n/\nCSC 631\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 641  Computer Performance Evaluation (Units: 3)\nPrerequisite for\nCSC 841\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 641\n: Upper-division standing;\nCSC 415\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer performance analysis problems related to system design, selection, and tuning. Modeling using stochastic and operational queuing models. Workload characterization, design, and performance measurement methods. Design of simulation models for computer systems.  Extra fee required. (Plus-minus letter grade only)\n(\nCSC 841\n/\nCSC 641\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 642  Human-Computer Interaction (Units: 3)\nPrerequisite for\nCSC 842\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisite for\nCSC 642\n: Upper-division standing;\nCSC 413\n* with a grade of C or better or permission of the instructor.\nThe design, implementation, and evaluation of human-computer interfaces. Topics include interface devices, interface metaphors, interaction styles, user-centered design, testing, and quality assessment. Extra fee required.\n(\nCSC 842\n/\nCSC 642\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 645  Computer Networks (Units: 3)\nPrerequisites: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nComputer network design, evaluation, and testing. Computer network standards and implementation. Hardware and software design and compatibility issues. Extra fee required.\nCSC 647  Introduction to Quantum Computing and Quantum Information Science (Units: 3)\nPrerequisite for\nCSC 747\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 647\n: Upper-division standing;\nCSC 415\n* and either\nMATH 225\n* or\nMATH 325\n* with a grade of C or better; CSC 308,\nCSC 309\n, and\nCSC 656\nrecommended; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to quantum computing and quantum information science. Comparison of classical and quantum computing architectures and organization. Quantum algorithm design and implementation on circuit-based and annealing quantum platforms. Program execution and performance analysis on quantum platform simulators and actual quantum hardware, subject to availability. Survey of research topics in quantum computing ranging from algorithms (e.g., Grover's Search) and their application to problems in quantum cryptography, quantum machine learning, and hybrid classical/quantum algorithms.\n(\nCSC 647\n/\nCSC 747\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 648  Software Engineering (Units: 3)\nPrerequisites for\nCSC 848\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 648\n: Upper-division standing;\nCSC 317\n* and\nCSC 413\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nPractical methods and tools for SW engineering including organizational teamwork.\n(\nCSC 848\n/\nCSC 648\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 651  System Administration (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 415\n* with grades of C or better.\nUser administration. Operating system installation, tuning, and control. Network administration. Security management. Performance tuning and management. Extra fee required. (ABC/NC grading only)\nCSC 652  Introduction to Security and Data Privacy (Units: 3)\nPrerequisite for\nCSC 852\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 652\n:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nIntroduction to fundamental concepts in cybersecurity, cryptography, and data privacy. Practice different privacy mechanisms in databases and present applications to a wide range of data analysis tasks. Extra fee required.\n(\nCSC 852\n/\nCSC 652\n[formerly CSC 650] is a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 653  Network Security (Units: 3)\nPrerequisite for\nCSC 853\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 653\n: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nIntroduction to the fundamental concepts of computer network security as well as standard security mechanisms and protocols.\n(\nCSC 853\n/\nCSC 653\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 656  Computer Organization (Units: 3)\nPrerequisite:\nCSC 415\n* (may be taken concurrently) or permission of the instructor.\nInstruction set design. Pipelined datapath and control. Cache and memory system design. Input and output subsystems. Parallel processing. Software and hardware interactions. Extra fee required.\nCSC 657  Bioinformatics Computing (Units: 3)\nPrerequisite: Upper-division or graduate standing in a science program or permission of the instructor.\nA broad range of topics in computational biology as practiced in the life science industry and leading research organizations. Provides computational background required to participate in R&D. Extra fee required.\n(\nCSC 857\n/\nCSC 657\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 659  AI Explainability and Ethics (Units: 3)\nPrerequisites for\nCSC 659\n: Restricted to upper-division students;\nCSC 413\nwith C or better; GPA of 3.0 or better; or permission of the instructor.\nPrerequisite for\nCSC 859\n: Graduate standing  or permission of the instructor.\nOverview of AI and GenAI technologies, their usage (including prompt engineering), and methods for their accuracy evaluations and optimization. Analysis of AI/GenAI limitations like hallucinations, bias, and errors. Overview of AI/GenAI explainability. Definitions, best practices and tools for auditing AI/GenAI for ethics and trustworthiness. Implementation of full AI pipeline and trustworthiness audit of selected AI application. (Plus-minus letter grade RP only)\n(\nCSC 859\n/\nCSC 659\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 664  Multimedia Systems (Units: 3)\nPrerequisite for\nCSC 864\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 664\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nComprehensive topics in multimedia such as basics of image and video processing, compression, multimedia databases, standard, synchronization, formats in the perspective of systems, and algorithms. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 864\n/\nCSC 664\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 665  Artificial Intelligence (Units: 3)\nPrerequisite for\nCSC 865\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 665\n: Restricted to upper-division standing or\nCSC 413\n* with a grade of C or better or permission of the instructor.\nOverview of algorithms and approaches to artificial intelligence. Study of fundamental concepts needed to attain human-level intelligence in computer systems, and gain experience in working with these concepts through assignments and programming exercises. Topics include problem-solving methods, heuristic search, game playing, agent architectures, machine learning, and various topics selected from knowledge representation, symbolic reasoning, computational models of virtual humans, neural networks, and genetic algorithms. Extra fee required.\n(\nCSC 665\n/\nCSC 865\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 667  Internet Application Design and Development (Units: 3)\nPrerequisite for\nCSC 867\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 667\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nFundamental technologies on which the World Wide Web is based. Extra fee required.\n(\nCSC 867\n/\nCSC 667\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 668  Advanced Object Oriented Software Design and Development (Units: 3)\nPrerequisite for\nCSC 868\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 668\n: Senior standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nObject-oriented analysis and design utilizing UML, design patterns, frameworks, and toolkits. Agile software design processes. Development of a mid-size programming project working in teams. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 868\n/\nCSC 668\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 671  Deep Learning (Units: 3)\nPrerequisite for\nCSC 871\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 671\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\nor\nMATH 325\nwith a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nExploration of the major technology trends that drive Deep Learning. Discussion of concepts and technologies to build, train, and apply fully connected deep neural networks. Focus on understanding the key parameters in a neural network's architecture and learning how Deep Learning actually works. (Plus-minus letter grade only)\n(\nCSC 871\n/\nCSC 671\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 675  Introduction to Database Systems (Units: 3)\nPrerequisite for\nCSC 775\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 675\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nRelational query languages. Semantic data models. Logical and physical database design. Privacy issues. Implementation techniques (catalogs, query optimization, concurrency control, security, and integrity enforcement). Extra fee required.\n(\nCSC 775\n/\nCSC 675\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 676  Soft Computing and Decision Support Systems (Units: 3)\nPrerequisite for\nCSC 876\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 676\n: Upper-division standing; GPA of 3.0 or better; or permission of the instructor.\nDevelopment of software systems for decision support including applications of soft computing. Topics include fuzzy sets, fuzzy logic, fuzzy systems, fuzzy decision-making, fuzzy controllers, approximate reasoning, possibility theory, rough sets, graded evaluation logic, logic aggregation operators, information fusion models, decision engineering methods, computing with words, perceptual computing, granular computing, and the LSP method for evaluation and optimization of complex systems. (Plus-minus letter grade only)\n(\nCSC 876\n/\nCSC 676\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 680  Application Development for Mobile Devices (Units: 3)\nPrerequisite for\nCSC 780\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 680\n: Restricted to senior Computer Science majors;\nCSC 415\n* with a grade of C or better; 3.0 GPA or higher; or permission of the instructor.\nIntroduction to, and comparison of, different popular mobile application frameworks. Conceptual and hands-on experience in writing mobile applications using native and cross-platform tools. (Plus-minus letter grade only)\n(\nCSC 780\n/\nCSC 680\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 685  Instructional Methods in Computer Science Teaching (Unit: 1)\nPrerequisite:\nCSC 215\nwith a grade of C or better.\nResearch-based pedagogical strategies and principles of teaching and learning in STEM. Seminar for students in their first Learning Assistant (LA) position or other interest in STEM teaching and learning.\nCSC 686  Experiences in Computer Science Teaching (Unit: 1)\nPrerequisite:\nCSC 215\nwith a grade of C or better.\nActivity practicum for students who are Learning Assistants (LAs) in STEM courses. Under the supervision of a STEM course instructor, LAs participate in an active, inclusive learning community in a section of a STEM course. LAs meet with the course instructor to review upcoming activities. May be repeated for a total of 2 units.\nCSC 688  AI Entrepreneurship (Units: 3)\nPrerequisite:\nCSC 317\nor equivalent.\nExploration of practical methods and tools for AI entrepreneurship. Knowledge and skills to integrate artificial intelligence into business ventures. Basics of AI technologies, market research, product-market fit development.\nCSC 690  Interactive Multimedia Application Development (Units: 3)\nPrerequisite:\nCSC 340\n* with a grade of C or better or permission of the instructor.\nBasics of multimedia data formats and algorithms to build applications using non-standard interfaces such as game controllers and multi-touch surfaces. (Plus-minus letter grade only)\nCSC 694  Cooperative Education: Computer Science (Units: 1-3)\nPrerequisite: Permission of the instructor.\nProjects in a business, government, or industrial position of at least one semester's duration. May be repeated for a total of 3 units. (This course is not eligible for certification for enrollment with the VA.)\nCSC 697  Senior Project in Computer Science (Units: 3)\nPrerequisites:\nCSC 415\nand\nCSC 510\n, or\nCSC 648\n; or permission of the instructor.\nCulminating experience in individual design, implementation, and professional documentation of a software product under the close supervision of a faculty member. (Plus-minus letter grade only)\nCSC 698  Topics in Computing (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nCurrent topics in computer hardware and software technologies. Topics to be specified in the Class Schedule. May be repeated for a total of 9 units when topics vary.\nTopics:\nInteractive Multimedia Development\nAugmented Reality Software Systems\nResearch Topics in Computing Applications\nAdvanced Topics in Computing Applications\nApplications of Parallel Computations\nReal-Time Cross-Platform Application Development\nPrinciples of Information Security and Privacy\nSoftware Design, Development, and Pedagogy\nInformation Visualization: Tools and Techniques\nGenerative AI\nCSC 699  Independent Study (Units: 1-3)\nPrerequisites: Permission of the department and instructor. An approved study proposal must be on file by the time of registration.\nLibrary and laboratory research and development projects. A final report must be approved by the instructor and filed with the department. May be repeated for a total of 9 units. (Plus-minus letter grade only)\nCSC 720  Advanced Operating Systems (Units: 3)\nPrerequisite: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nAnalysis of scheduling and memory management algorithms and the use of concurrent languages for systems development and distributed systems. Design and implementation of major components of an operating system. Extra fee required.\nCSC 746  High-Performance Computing (Units: 3)\nPrerequisite: Restricted graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrinciples and current practices in high-performance computing. Basics of multiprocessor systems such as clusters and graphics processors. Message-passing and shared memory-based software development. Cloud computing.\nCSC 747  Introduction to Quantum Computing and Quantum Information Science (Units: 3)\nPrerequisite for\nCSC 747\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 647\n: Upper-division standing;\nCSC 415\n* and either\nMATH 225\n* or\nMATH 325\n* with a grade of C or better; CSC 308,\nCSC 309\n, and\nCSC 656\nrecommended; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to quantum computing and quantum information science. Comparison of classical and quantum computing architectures and organization. Quantum algorithm design and implementation on circuit-based and annealing quantum platforms. Program execution and performance analysis on quantum platform simulators and actual quantum hardware, subject to availability. Survey of research topics in quantum computing ranging from algorithms (e.g., Grover's Search) and their application to problems in quantum cryptography, quantum machine learning, and hybrid classical/quantum algorithms.\n(\nCSC 647\n/\nCSC 747\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 775  Introduction to Database Systems (Units: 3)\nPrerequisite for\nCSC 775\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 675\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nRelational query languages. Semantic data models. Logical and physical database design. Privacy issues. Implementation techniques (catalogs, query optimization, concurrency control, security, and integrity enforcement). Extra fee required.\n(\nCSC 775\n/\nCSC 675\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 780  Application Development for Mobile Devices (Units: 3)\nPrerequisite for\nCSC 780\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 680\n: Restricted to senior Computer Science majors;\nCSC 415\n* with a grade of C or better; 3.0 GPA or higher; or permission of the instructor.\nIntroduction to, and comparison of, different popular mobile application frameworks. Conceptual and hands-on experience in writing mobile applications using native and cross-platform tools. (Plus-minus letter grade only)\n(\nCSC 780\n/\nCSC 680\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 805  Data Visualization: Concepts, Tools, Techniques, and Paradigms (Units: 3)\nPrerequisites: Restricted to graduate Computer Science students. Senior undergraduate Computer Science majors may enroll with the permission of the instructor.\nConcepts, techniques, algorithms, and technologies for creating effective and efficient visual data representations and visual analytic tools based on principles from computer graphics, HCI, visual art, perceptual psychology, and cognitive science to enhance the understanding and communication of complex and multi-dimensional data. (Plus-minus letter grade only)\nCSC 810  Analysis of Algorithms II (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nReview major design strategies and theory of NP-Completeness. Approximation algorithms. Online Algorithms. Parallel and distributed algorithms. Algorithms for specific areas of interest. Extra fee required.\nCSC 820  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 821  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 825  Advanced Automata Theory (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nAdvanced topics in theoretical computer science and their application to a broad range of areas including bioinformatics, compilers, data and image compression, natural language processing, networking, and web applications. Extra fee required. (Plus-minus letter grade only)\nCSC 830  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students.\nPrerequisites for\nCSC 630\n:\nCSC 413\n* and either\nMATH 225\n* or\nMATH 325\n* with grades of C or better; a GPA of 3.0 or better; or permission of the instructor.\nGraphics system design and GPU pipeline architecture and Generative AI on graphics. Overview of device-independent graphic systems such as OpenGL, 2- & 3-dimensional viewing pipelines, hidden line and surface removal algorithms, raster graphics techniques, and color space models. Topics on generative AI for graphics such as StyleGAN are covered. Course fee required. (Plus-minus letter grade only)\n(\nCSC 830\n/\nCSC 630\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCourse Attributes:\nCSC 630\n/830\nCSC 831  Multiplayer Game Development (Units: 3)\nPrerequisite for\nCSC 831\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 631\n: Upper-division standing;\nCSC 413\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer graphics and network characteristics of multiplayer games.  Design and development of a game as a team project.\n(\nCSC 831\n/\nCSC 631\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 841  Computer Performance Evaluation (Units: 3)\nPrerequisite for\nCSC 841\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 641\n: Upper-division standing;\nCSC 415\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer performance analysis problems related to system design, selection, and tuning. Modeling using stochastic and operational queuing models. Workload characterization, design, and performance measurement methods. Design of simulation models for computer systems.  Extra fee required. (Plus-minus letter grade only)\n(\nCSC 841\n/\nCSC 641\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 842  Human-Computer Interaction (Units: 3)\nPrerequisite for\nCSC 842\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisite for\nCSC 642\n: Upper-division standing;\nCSC 413\n* with a grade of C or better or permission of the instructor.\nThe design, implementation, and evaluation of human-computer interfaces. Topics include interface devices, interface metaphors, interaction styles, user-centered design, testing, and quality assessment. Extra fee required.\n(\nCSC 842\n/\nCSC 642\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 845  Advanced Computer Networks (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nDesign and implementation of networking protocols and technologies in wireless and mobile networks. Introduction to emerging design, algorithms, protocols, and applications in wireless and mobile networks.  Extra fee required.\nCSC 847  Cloud and Distributed Computing: Concepts and Applications (Units: 3)\nPrerequisites: Restricted to senior and graduate Computer Science and Data Science, Artificial Intelligence, or graduate certificate in Software Engineering students; permission of the instructor.\nInfrastructure, platform, and software as a service. Includes enabling techniques behind cloud computing including virtualization, multi-tenancy, and service-oriented architecture. Cloud storage options such as NoSQL databases, emerging technologies such as containers and Kubernetes, parallel and distributed computing platforms including MapReduce and Apache Sparc, and hands-on experience on public clouds such as the Amazon Cloud and Google Cloud. (Plus-minus letter grade only)\nCSC 848  Software Engineering (Units: 3)\nPrerequisites for\nCSC 848\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 648\n: Upper-division standing;\nCSC 317\n* and\nCSC 413\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nPractical methods and tools for SW engineering including organizational teamwork.\n(\nCSC 848\n/\nCSC 648\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 852  Introduction to Security and Data Privacy (Units: 3)\nPrerequisite for\nCSC 852\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 652\n:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nIntroduction to fundamental concepts in cybersecurity, cryptography, and data privacy. Practice different privacy mechanisms in databases and present applications to a wide range of data analysis tasks. Extra fee required.\n(\nCSC 852\n/\nCSC 652\n[formerly CSC 650] is a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 853  Network Security (Units: 3)\nPrerequisite for\nCSC 853\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 653\n: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nIntroduction to the fundamental concepts of computer network security as well as standard security mechanisms and protocols.\n(\nCSC 853\n/\nCSC 653\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 857  Bioinformatics Computing (Units: 3)\nPrerequisite: Upper-division or graduate standing in a science program or permission of the instructor.\nA broad range of topics in computational biology as practiced in the life science industry and leading research organizations. Provides computational background required to participate in R&D. Extra fee required.\n(\nCSC 857\n/\nCSC 657\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 859  AI Explainability and Ethics (Units: 3)\nPrerequisites for\nCSC 659\n: Restricted to upper-division students;\nCSC 413\nwith C or better; GPA of 3.0 or better; or permission of the instructor.\nPrerequisite for\nCSC 859\n: Graduate standing  or permission of the instructor.\nOverview of AI and GenAI technologies, their usage (including prompt engineering), and methods for their accuracy evaluations and optimization. Analysis of AI/GenAI limitations like hallucinations, bias, and errors. Overview of A",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/",
    "category": "Course Catalog",
    "title": "Bachelor of Science in Computer Science | San Francisco State University Bulletin",
    "content": "Bachelor of Science in Computer Science\nStudents intending to enter this program at the freshman level should have completed two years of algebra and one semester of trigonometry in high school. One year each of high school geometry and physics, as well as basic knowledge of computer organization and programming, are very desirable.\nAll lower division courses (course numbers below 300) included among the degree requirements are available at many community colleges in California; students intending to enter the program upon transferring to San Francisco State University from a community college should take as many of those courses there as possible.\nStudents should plan their program of study in the major with the help of a departmental advisor as soon as possible so that the correct sequence of courses is taken and a set of\nfour electives\nis chosen. It is also suggested that students consult with an advisor before selecting courses to meet the General Education requirements. (See program overview for acceptable science electives.)\nSeveral endowed scholarship funds offer\nannual\nawards\nto computer science\nmajors\nwho\nshow\nscholarly accomplishment and\ndemonstrate\nfinancial need. An Entrepreneurship Program and Developers Prize, funded by our alumni, encourage and support innovation and entrepreneurship among students.\nProgram Learning Outcomes\nStudents will be able to design, develop, document, and test software using current techniques.\nStudents will understand the fundamentals of computer architecture and computing theory.\nStudents will be able to solve problems working in group settings.\nStudents will demonstrate the ability to give presentations and write technical reports.\nStudents will demonstrate an understanding of the importance of social and ethical issues related to the profession.\nComputer Science (B.S.)\n74 units\nCR/NC grades are not accepted in courses for the Computer Science major.\nGrades of C or better are required for\nCSC 510\nand\nCSC 648\n.\nMathematics and Physics (22 units)\nCourse List\nCode\nTitle\nUnits\nMATH 225\nIntroduction to Linear Algebra\n3\nMATH 226\nCalculus I\n4\nMATH 227\nCalculus II\n4\nMATH 324\nProbability and Statistics with Computing\n3\nPHYS 220\nGeneral Physics with Calculus I\n3\nPHYS 222\nGeneral Physics with Calculus I Laboratory\n1\nPHYS 230\nGeneral Physics with Calculus II\n3\nPHYS 232\nGeneral Physics with Calculus II Laboratory\n1\nCore Computer Science Requirements (28 units)\nCourse List\nCode\nTitle\nUnits\nCSC 101\nIntroduction to Computing\n3\nCSC 215\nIntermediate Computer Programming\n4\nCSC 220\nData Structures\n3\nCSC 230\nDiscrete Mathematical Structures for Computer Science\n3\nCSC 256\nMachine Structures\n3\nCSC 300GW\nEthics, Communication, and Tools for Software Development - GWAR\n3\nCSC 317\nIntroduction to Web Software Development\n3\nCSC 340\nProgramming Methodology\n3\nCSC 413\nSoftware Development\n3\nAdvanced Computer Science Requirements (9 units)\nCourse List\nCode\nTitle\nUnits\nCSC 415\nOperating System Principles\n3\nCSC 510\nAnalysis of Algorithms I\n3\nCSC 648\nSoftware Engineering\n3\nElectives (15 units)\nAll students must complete five 3-unit senior electives.  At least 12 units must be CSC courses.  In addition to the courses listed below, any 600-level CSC course, with the exception of\nCSC 601\n,\nCSC 602\n,\nCSC 648\n, and\nCSC 694\ncan be used as an elective.  The department also allows one CSC graduate course to be used as a senior elective (700-level or higher, and non-paired excluding\nCSC 895\n,\nCSC 898\n,\nCSC 897\n,\nCSC 899\n).  Exceptions must be approved in advance by a senior advisor.\nCourse List\nCode\nTitle\nUnits\nCSC 520\nTheory of Computing\n3\nCSC 600\nProgramming Paradigms and Languages\n3\nCSC 615\nEmbedded Linux Systems and Physical Computing\n3\nCSC 620\nNatural Language Technologies\n3\nCSC 621\nBiomedical Imaging and Analysis\n3\nCSC 630\nComputer Graphics Systems Design\n3\nCSC 631\nMultiplayer Game Development\n3\nCSC 641\nComputer Performance Evaluation\n3\nCSC 642\nHuman-Computer Interaction\n3\nCSC 645\nComputer Networks\n3\nCSC 647\nIntroduction to Quantum Computing and Quantum Information Science\n3\nCSC 651\nSystem Administration\n3\nCSC 652\nIntroduction to Security and Data Privacy\n3\nCSC 656\nComputer Organization\n3\nCSC 657\nBioinformatics Computing\n3\nCSC 664\nMultimedia Systems\n3\nCSC 665\nArtificial Intelligence\n3\nCSC 667\nInternet Application Design and Development\n3\nCSC 668\nAdvanced Object Oriented Software Design and Development\n3\nCSC 671\nDeep Learning\n3\nCSC 675\nIntroduction to Database Systems\n3\nCSC 676\nSoft Computing and Decision Support Systems\n3\nCSC 680\nApplication Development for Mobile Devices\n3\nCSC 690\nInteractive Multimedia Application Development\n3\nCSC 698\nTopics in Computing\n3\nCSC 699\nIndependent Study\n1-3\nMATH 400\nNumerical Analysis\n3\nMATH 425\nApplied and Computational Linear Algebra\n3\nMATH 448\nIntroduction to Statistical Learning and Data Mining\n3\nGeneral Education Requirements\nGeneral Education Requirements\nRequirement\nCourse Level\nUnits\nArea Designation\nEnglish Composition\nLD\n3\n1A\nCritical Thinking\nLD\n3\n1B\nOral Communication\nLD\n3\n1C\nMathematical Concepts and Quantitative Reasoning\nLD\n3\n2\nArts\nLD\n3\n3A\nHumanities\nLD\n3\n3B\nSocial and Behavioral Sciences\nLD\n6\n4\nPhysical Science\nLD\n3\n5A\nBiological Science\nLD\n3\n5B\nLaboratory\nLD\n1\n5C\nEthnic Studies\nLD or UD\n3\n6\nScience\nor\nMath/Quantitative Reasoning\nUD\n3\n5UD\nor\n2UD\nArts or Humanities\nUD\n3\n3UD\nSocial and Behavioral Sciences\nUD\n3\n4UD\nSF State Studies\nCourses certified as meeting the SF State Studies requirements may be upper or lower division in General Education (GE), a major or minor, or an elective.\nAmerican Ethnic and Racial Minorities\nLD or UD\n3\nAERM\nEnvironmental Sustainability and Climate Action\nLD or UD\n3\nES\nGlobal Perspectives\nLD or UD\n3\nGP\nSocial Justice\nLD or UD\n3\nSJ\nNote: LD = Lower-Division; UD = Upper-Division.\nFirst-Time Student Roadmap (4 Year)\nThe roadmaps presented in this Bulletin are intended as suggested plans of study and do not replace meeting with an advisor. For a more personalized roadmap, please use the\nDegree Planner\ntool found in your\nStudent Center\n.\nStudents should use their\nPathway/Category\nto determine which roadmap to follow. For directions on how to view your Pathway/Category, visit\nhow to find your pathway\n. Questions? Contact\nGator Smart Start.\nFirst-Time Student Roadmap – QR Pathway 1/2\nFirst-Time Student Roadmap – QR Pathway 3/4\nTransfer Student Roadmap (2 Year)\nFor students with an AS-T in\nComputer Science\n.\nCOMP ADT Roadmap\nThis degree program is an approved pathway (“similar” major) for students earning the ADT in Computer Science\nCalifornia legislation SB 1440 (2009) mandated the creation of the Associate Degree for Transfer (ADT) to be awarded by the California Community Colleges. Two types of ADTs are awarded: Associate in Arts for Transfer (AA-T) and Associate in Science for Transfer (AS-T).\nNote: no specific degree is required for admission as an upper-division student. However, the ADT includes specific guarantees related to admission and graduation and is designed to clarify the transfer process and strengthen lower-division preparation for the major.\nAn ADT totals 60 units and in most cases includes completion of all lower-division General Education requirements and at least 18 units in a specific major. (The Biology, Chemistry, and Environmental Science AS-T degrees defer 3 units in lower-division GE area 3 and 3 units in lower-division GE area 4 until after transfer.) Students pursuing an ADT are guaranteed admission to the CSU if minimum eligibility requirements are met, though not necessarily to the CSU campus of primary choice.\nUpon verification that the ADT has been awarded prior to matriculation at SF State, students are guaranteed B.A. or B.S. completion in 60 units if pursuing a “similar” major after transfer. Determinations about “similar” majors at SF State are made by faculty in the discipline.\nDegree completion in 60 units cannot be guaranteed when a student simultaneously pursues an additional major, a minor, certificate, or credential.\nA sample advising roadmap for students who have earned an ADT and continue in a \"similar\" major at SF State is available on the Roadmaps tab on the degree requirements page for the major. The roadmap displays:\nHow many lower-division units required for the major have been completed upon entry based on the award of a specific ADT;\nWhich lower-division requirements are considered complete upon entry based on the award of a specific ADT;\nHow to complete the remaining 60 units for the degree in four semesters.\nStudents who have earned an ADT should seek advising in the major department during the first semester of attendance.\nGeneral Advising Information for Transfer Students\nBefore transfer, complete as many lower-division requirements or electives for this major as possible.\nThe following courses are not required for admission but are required for graduation. Students are strongly encouraged to complete these units before transfer; doing so will provide more flexibility in course selection after transfer.\na course in U.S. History\na course in U.S. & California Government\nFor information about satisfying the requirements described in (1) and (2) above at a California Community College (CCC), please visit\nhttp://www.assist.org\n. Check any geographically accessible CCCs; sometimes, options include more than one college. Use ASSIST to determine:\nWhich courses at a CCC satisfy any lower-division major requirements for this major;\nWhich courses at a CCC satisfy CSU GE, US History, and US & CA Government requirements.\nRemedial courses are not transferable and do not apply to the minimum 60 semester units/90 quarter units required for admission.\nAdditional units for courses that are repeated do not apply to the minimum 60 units required for upper-division transfer (for example, if a course was not passed on the first attempt or was taken to earn a better grade).\nBefore leaving the last California Community College of attendance, obtain a summary of completion of lower-division General Education units (IGETC or CSU GE Breadth). This is often referred to as a GE certification worksheet. SF State does not require delivery of this certification to Admissions, but students should retain this document for verifying degree progress after transfer.\nCredit for Advanced Placement, International Baccalaureate, or College-Level Examination Program courses: AP/IB/CLEP credit is not automatically transferred from the previous institution. Units are transferred only when an official score report is delivered to SF State. Credit is based on the academic year during which exams were taken. Refer to the University Bulletin in effect during the year of AP/IB/CLEP examination(s) for details regarding the award of credit for AP/IB/CLEP.\nStudents pursuing majors in science, technology, engineering, and mathematics (STEM) disciplines often defer 6-9 units of lower-division General Education in Areas C and D until after transfer to focus on preparation courses for the major. This advice does not apply to students pursuing associate degree completion before transfer.\nTransferring From Institutions Other Than CCCs or CSUs\nReview SF State's lower-division General Education requirements. Note that, as described below, the four basic skills courses required for admission meet GE Areas 1A/A2, 1B/A3, 1C/A1, and 2/B4 in the SF State GE pattern. Courses that fulfill the remaining areas of SF State’s lower-division GE pattern are available at most two-year and four-year colleges and universities.\nOf the four required basic skills courses, a course in critical thinking (1B/A3) may not be widely offered outside the CCC and CSU systems. Students should attempt to identify and take an appropriate course no later than the term of application to the CSU. To review more information about the 1B/A3 requirement, please visit\nbulletin.sfsu.edu/undergraduate-education/general-education/lower-division/#AAEL\n.\nWaiting until after transfer to take a single course at SF State that meets both US and CA/local government requirements may be an appropriate option, particularly if transferring from outside of California.",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/ms-computer-science/",
    "category": "Course Catalog",
    "title": "Master of Science in Computer Science | San Francisco State University Bulletin",
    "content": "Master of Science in Computer Science\nProgram Description\nAll students share breadth requirements in the areas of computing foundations, computer systems, and software development. Students focusing on different areas then differ in the choice of courses that provide depth in the chosen area and the work done for the culminating experience. Students are expected to decide on a focus area prior to enrollment in the second semester. Integrated into the curriculum are significant team and project experiences. There are two options for the mandatory culminating experience, the master’s thesis or the applied research project.\nThe grading method CR/NC is allowed only for\nCSC 895\nor\nCSC 898\n. All other courses listed on the Advancement to Candidacy (ATC) form must be a letter grade.\nProgram Learning Outcomes\nStudents will demonstrate a breadth of knowledge in Computer Science, as exemplified in the areas of systems, theory, and software development.\nStudents will demonstrate the ability to conduct a research or applied Computer Science project, requiring writing and presentation skills which exemplify scholarly style in Computer Science.\nElective Requirements\nAll students are required to include elective credits in their program. Electives include:\nAll upper-division or graduate courses offered by the Computer Science Department, including breadth requirement courses and\nCSC 897\nand\nCSC 899\n.\nCSC 893\nmay not count as an elective course.\nCourses from other programs such as biology, engineering, business, or mathematics may be accepted with the approval of the graduate advisor and culminating experience supervisor.\nNote:\nA maximum of 6 units of upper-division courses (numbered below 700) may be applied to the degree with the consent of the course instructor and graduate advisor.\nGraduate Seminar Requirement\nIn addition to curricular requirements, prior to enrolling in\nCSC 895\n/\nCSC 898\n, all graduate students are required to attend the Department Graduate Seminar series during one semester of their studies. These weekly seminars explore current topics in computer science research and assist students with choosing a topic for the culminating experience. Details for meeting this requirement may be found in the\nGraduate Studies Policy section\n.\nPracticum\nThis 1-3 unit option is chosen by students who wish to enhance their master’s degree by completing an industrial practicum. After finding the job in the local industry, the student will submit a research proposal to the department’s supervisor (normally the department chair) that describes the expected work and learning outcome. The department’s supervisor must approve the proposal before the student begins the research. Once approved, the student will enroll in 1 unit of\nCSC 893\n. At the conclusion of the work experience, the student must file a written report outlining the research and work experience. The report is submitted to the department’s supervisor. Students may repeat\nCSC 893\nfor a maximum of 3 units. The total number of units for the degree for students who complete the\nCSC 893\npracticum option will be 33 units. It is recommended that this option be pursued only during the summer.\nNote:\nCSC 893\nallows international students to obtain permission to work off-campus for the duration of the course.\nAdmission to Program\nAdmission to the graduate program in Computer Science is a two-step process that should be completed simultaneously:\nApply to San Francisco State University:\nComplete the on-line CSU Mentor application. Follow all other requirements for admission to the University by accessing\nwww.sfsu.edu/~gradstdy/\n.\nApply to the Department of Computer Science graduate program:\nFull details can be found at\nhttps://cs.sfsu.edu/grads/prospective-graduates\nWe encourage students with four-year degrees other than Computer Science to apply to our program as conditional applicants. Please check the link in Step 2 above for details.\nFinancial Assistance\nGraduate assistantships are occasionally available for qualified master's students. These opportunities include participating in funded research projects, assisting with the management of departmental and university computer laboratories as well as lecturer positions for beginning undergraduate computer science courses. Frequently, there are internship opportunities available for work at local companies. International students should address all questions related to their visa status and eligibility for practical training (off-campus work) to the\nOffice of International Programs\n.\nWritten English Proficiency Requirement\nLevel One\nComputer science students admitted to the M.S. program are required to satisfy English Level One prior to the end of their first year of study at SF State. Level One is satisfied by obtaining either a score of 4 or better on the GRE Analytical Writing Exam or a passing grade in\nSCI 614\n.\nSCI 614\nis strongly recommended for all students who wish to develop their skills in professional writing.\nLevel Two\nThe second level of proficiency in written English must be demonstrated before graduation. At this time, the student must demonstrate writing skills that exemplify scholarly style in computer science. This is demonstrated by the master's thesis or the research project report.\nPolicy on Enrollment While Conducting Directed Research\nPursuant to Policy F89-165 adopted by the Academic Senate in 1989, the Computer Science Department has adopted the policy that all graduate students who are working with a research advisor (above and beyond general advising during office hours) and/or having his/her thesis or project reviewed, must enroll in at least 1 unit of\nCSC 895\n,\nCSC 897\n,\nCSC 898\n, or\nCSC 899\n. Registered students will have priority for departmental computing resources.\nComputer Science (M.S.)\n– 30 units minimum\nCore Requirements (9 units)\nComputing Foundations (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 810\nAnalysis of Algorithms II\n3\nCSC 825\nAdvanced Automata Theory\n3\nComputer Systems (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 720\nAdvanced Operating Systems\n3\nCSC 746\nHigh-Performance Computing\n3\nCSC 845\nAdvanced Computer Networks\n3\nSoftware Development (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 780\nApplication Development for Mobile Devices\n3\nCSC 831\nMultiplayer Game Development\n3\nCSC 848\nSoftware Engineering\n3\nCSC 868\nAdvanced Object Oriented Software Design and Development\n3\nGeneral Requirement (9 units)\nThree 3-unit courses drawn from any 700-800 level Computer Science courses not used to meet a core or elective requirement. 700-800 level courses paired with 600 level courses require an advisor’s approval.\nCSC 899\nmay not count towards this requirement.\nElectives (6 units)\nTwo upper-division/graduate 3-unit electives selected on advisement.\nPracticum Option (0-3 units)\nUp to 3 units of\nCSC 893\nSupervised Industrial Research\non advisement.\nCulminating Experience (6 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 897\nResearch\n3\nCSC 899\nIndependent Study\n3\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 895\nApplied Research Project\n3\nCSC 898\nMaster's Thesis\n3",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/ms-computer-science/"
  },
  {
    "source": "https://bulletin.sfsu.edu/courses/csc/",
    "category": "Course Catalog",
    "title": "Computer Science (CSC) | San Francisco State University Bulletin",
    "content": "Computer Science (CSC)\nExplanation of Course Descriptions, Symbols, and Terms\nCSC 101  Introduction to Computing (Units: 3)\nA comprehensive introduction to computing and programming. No prior programming experience is required. Explore the use of computing in everyday life and its impact on our society, and apply foundational ideas of computing to frame a problem and devise a solution using Java programming language.\nCSC 110  Computational Thinking and Quantitative Reasoning (Units: 3)\nPrerequisites: Category I or II placement for QR/Math, or satisfactory completion of ELM requirement, or MATH 70 or ESM 70 with a grade of C or better. Students with Category III or IV placement for QR/Math or students who have not passed MATH 70 or ESM 70 with a C or better must concurrently enroll in\nMATH 111\n.\nBasic building blocks of programming and computational thinking practices including analyzing the effects of computation, creating computational artifacts, using abstractions and models, analyzing problems and artifacts, communicating processes and results, and working effectively in teams. Mathematical models and information retrieval from real-world datasets will be used as vehicles to practice programming and computation thinking.\n(Note: For this course to satisfy General Education, students must earn a grade of C- or CR or higher.)\nCourse Attributes:\n2: MATH/Quantitative Reason\nB4: Math/QR\nCSC 215  Intermediate Computer Programming (Units: 4)\nPrerequisite:\nCSC 101\nwith a grade of C or better.\nDesign, implementation, testing, debugging, maintenance, and documentation of Java programs. Algorithms, programming concepts, and data types in Java. Concepts of object-oriented programming. Numerical and non-numerical problems. Hands-on exercises in programming, and the use of basic software development tools.\nCSC 220  Data Structures (Units: 3)\nPrerequisite: CSC 210 or\nCSC 215\nwith a grade of C or better.\nLinear and non-linear data structures in Java, including lists, stacks, queues, trees, tables, and graphs. Recursion, iteration over collections, Big O notation, and hash tables.\nCSC 221  Data Structure Lab (Unit: 1)\nPrerequisites: CSC 210 or\nCSC 215\n; concurrent enrollment in\nCSC 220\n.\nTraining on the principles of object-oriented programming, data structures (such as stacks, queues, lists, trees, sets, HashMaps, etc.), implementation, and usage in solving real-life problems, recursion, and algorithm analysis. Activity. (CR/NC grading only)\nCSC 230  Discrete Mathematical Structures for Computer Science (Units: 3)\nPrerequisites: CSC 210 or\nCSC 215\n, and\nMATH 227\n(may be taken concurrently) with grades of C or better.\nReview of set algebra, relations and functions, permutations, propositional logic, proof techniques, introduction to graph theory, and infinite sets, and their applications to computer science.\nCSC 256  Machine Structures (Units: 3)\nPrerequisite:\nCSC 230\nwith a grade of C or better.\nDigital logic circuits, data representation, assembly language programming, subroutine linkage, machine language encoding, interrupt and exception handling, memory system concepts, and CPU organization and performance.\nCSC 300GW  Ethics, Communication, and Tools for Software Development - GWAR (Units: 3)\nPrerequisites: Restricted to upper-division Computer Science majors and minors; GE Area 1A/A2; CSC 210 or\nCSC 215\n.\nPrivacy, security, legal, and ethical issues in Software development. Communication relevant to SW development (e.g., reports, contracts, requirements, documentation, collaboration, e-mail, presentations). Study and use of basic tools for SW development and collaboration. (ABC/NC grading only)\nCourse Attributes:\nGraduation Writing Assessment\nCSC 306  An Interdisciplinary Approach to Computer Programming (Units: 3)\nPrerequisites: Restricted to Biology, Chemistry, and Biochemistry majors and Certificate in Data Science and Machine Learning for Biotechnology Professionals students; upper-division standing; or permission of the instructor.\nBasics of programming for interdisciplinary problem-solving, using Python.Topics include basic building blocks of programming (variables, control statements, loops, function, abstraction, and more) and problem-solving approaches relevant to problems in the natural sciences.\nCSC 307  An Interdisciplinary Approach to Web Programming (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nBasics of WWW engineering relevant to studies in interdisciplinary problem-solving. Topics include the basics of developing web and database applications, HTML, PHP, Python, SQL, and MySQL database.\nCSC 309  Computer Programming (Units: 3)\nPrerequisite:\nMATH 226\nor permission of the instructor.\nProcedural programming for scientific applications.  Good programming practices and basic numerical and nonnumerical algorithms for scientists and engineers.\nCSC 310  Computer Programming Lab (Unit: 1)\nPrerequisite: Concurrent enrollment in\nCSC 309\nis recommended.\nExercises in Python programming and use of basic software development tools.\nCSC 311  Data Structures for Data Science Application Development (Units: 3)\nPrerequisite:\nCSC 306\n* or equivalent.\nFocuses on learning about and utilizing data structures and algorithms effectively for developing data science applications. Utilizes Python and Jupyter Notebook. [Formerly CSC 219]\nCSC 317  Introduction to Web Software Development (Units: 3)\nPrerequisite:\nCSC 220\nor permission of the instructor.\nIntroduction to topics in UNIX and creating web pages including reading and processing user input submitted through web pages, client side and server side programming, connecting a web page to a database, and building an e-commerce site or Internet Application.\nCSC 340  Programming Methodology (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\nwith grades of C or better.\nAdvanced data structures and algorithms for manipulation in C++ with an emphasis on design and implementation, practical applications, and algorithms for sorting, searching, and graphs.\nCSC 408  Machine Learning and Data Science for Personalized Medicine (Units: 3)\nPrerequisite:\nCSC 220\n* or\nCSC 311\n* or equivalent; a college-level biology course; or permission of the instructor.\nExploration of the concepts and tools needed to analyze, interpret, and reason from genomic datasets to help medical professionals better treat their patients. Diseases often affect patients differently depending on their genetic background. To make personalized medicine a reality, it is necessary to leverage the data from genomic datasets. Genomic data science applies machine learning and data science to the genome to better diagnose and treat patients. [Formerly CSC 508]\nCSC 411  Intermediate Machine Learning for Interdisciplinary Data Scientists (Units: 3)\nPrerequisite:\nCSC 220\nor\nCSC 311\nor equivalent; a college-level biology course; or permission of the instructor.\nIntermediate machine learning concepts and tools. Focus on application development, linear model, deep neural network and transfer learning using Python, Tensorflow, and Keras. [Formerly CSC 308]\nCSC 412  Advanced Software Lab (Unit: 1)\nPrerequisites:\nCSC 220\n; concurrent enrollment in\nCSC 340\nrecommended.\nHands-on exercises in advanced programming, software development tools, and web technologies. Students are encouraged to bring their laptops. Activity. May be repeated for a total of 2 units. (Plus-minus letter grade only)\nCSC 413  Software Development (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 317\nwith grades of C or better.\nModern software applications. Object-oriented techniques: encapsulation, inheritance, and polymorphism as a mechanism for data design and problem solution. Software design, debugging, testing, and UI design. Software maintenance. Software development tools. Extra fee required. (Plus-minus letter grade only)\nCSC 415  Operating System Principles (Units: 3)\nPrerequisites:\nCSC 256\n,\nCSC 340\n*,\nMATH 324\n, and\nPHYS 230\nwith grades of C or better or graduate standing*.\nOperating system concepts: concurrent processes, basic synchronization techniques, deadlock, memory management, file systems, security, networks, and distributed processing. Extra fee required.\nCSC 509  Data Science and Machine Learning for Medical Image Analysis (Units: 3)\nPrerequisite:\nCSC 411\n(may be taken concurrently).\nExploration of the application of state-of-the-art deep learning models to medical image analysis: the task of identifying objects such as tissue, bone within an image. Discussion of topics central to deep learning-based image analysis, and practical application of these concepts in three hands-on case studies.\nCSC 510  Analysis of Algorithms I (Units: 3)\nPrerequisites:\nCSC 340\n* and\nMATH 324\n* with grades of C or better.\nNotions of main algorithm design methods. Measures of algorithm complexity in space and time. Algorithms of classic problems including sorting and scheduling and complexity analysis of such algorithms. (Plus/minus ABC/NC, CR/NC allowed)\nCSC 520  Theory of Computing (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\n;\nMATH 225\nor\nMATH 325\nwith grades of C or better.\nExamination of automata, formal languages, and the notion of computability. Discussion of sequential machines as language acceptors and context-free and context-sensitive grammars. Exploration of recursive functions, universal Turing machines, and unsolvable problems.\nCSC 600  Programming Paradigms and Languages (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 510\n* with grades of C or better or graduate-level standing*.\nConcepts for high-level programming languages. Procedural, logic, functional, and object-oriented programming paradigms. Comparative study of several languages and an introduction to grammars and parsing techniques. Extra fee required.\nCSC 601  Data Science and Machine Learning for Biotechnology Seminar Series (Unit: 1)\nPrerequisite:\nCSC 408\n* or\nCSC 411\n* or\nCSC 509\n*.\nFeaturing scientists in related areas from Genentech or other biotechnology industry or academia, explore a broad view of the topics on Drug design, modeling to predict drug performance, or new drug approval processes. (CR/NC grading only)\nCSC 602  Interview Preparation for Data Science and Machine Learning for Biotechnology Opportunities (Units: 2)\nPrerequisite:\nCSC 408\nor\nCSC 411\nor\nCSC 509\n.\nPreparation for interviews for data science-related internships and full-time positions in industry. Emphasis on oral and written communication common in coding interviews for problem-solving. Development of interview skills such as how to communicate about technical aspects, describe a problem, and articulate issues. Practice of key problem-solving strategies specific to technical/coding interviews in Biotechnology. (CR/NC grading only)\nCSC 615  Embedded Linux Systems and Physical Computing (Units: 3)\nPrerequisite:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nExploration of embedded Linux programming in C, threads and synchronization, resource limits, working with sensors and motors, programming various communication protocols, and building a physical computing device. Extra fee required. (Plus-minus letter grade only)\nCSC 620  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 621  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 630  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students.\nPrerequisites for\nCSC 630\n:\nCSC 413\n* and either\nMATH 225\n* or\nMATH 325\n* with grades of C or better; a GPA of 3.0 or better; or permission of the instructor.\nGraphics system design and GPU pipeline architecture and Generative AI on graphics. Overview of device-independent graphic systems such as OpenGL, 2- & 3-dimensional viewing pipelines, hidden line and surface removal algorithms, raster graphics techniques, and color space models. Topics on generative AI for graphics such as StyleGAN are covered. Course fee required. (Plus-minus letter grade only)\n(\nCSC 830\n/\nCSC 630\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCourse Attributes:\nCSC 630\n/830\nCSC 631  Multiplayer Game Development (Units: 3)\nPrerequisite for\nCSC 831\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 631\n: Upper-division standing;\nCSC 413\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer graphics and network characteristics of multiplayer games.  Design and development of a game as a team project.\n(\nCSC 831\n/\nCSC 631\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 641  Computer Performance Evaluation (Units: 3)\nPrerequisite for\nCSC 841\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 641\n: Upper-division standing;\nCSC 415\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer performance analysis problems related to system design, selection, and tuning. Modeling using stochastic and operational queuing models. Workload characterization, design, and performance measurement methods. Design of simulation models for computer systems.  Extra fee required. (Plus-minus letter grade only)\n(\nCSC 841\n/\nCSC 641\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 642  Human-Computer Interaction (Units: 3)\nPrerequisite for\nCSC 842\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisite for\nCSC 642\n: Upper-division standing;\nCSC 413\n* with a grade of C or better or permission of the instructor.\nThe design, implementation, and evaluation of human-computer interfaces. Topics include interface devices, interface metaphors, interaction styles, user-centered design, testing, and quality assessment. Extra fee required.\n(\nCSC 842\n/\nCSC 642\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 645  Computer Networks (Units: 3)\nPrerequisites: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nComputer network design, evaluation, and testing. Computer network standards and implementation. Hardware and software design and compatibility issues. Extra fee required.\nCSC 647  Introduction to Quantum Computing and Quantum Information Science (Units: 3)\nPrerequisite for\nCSC 747\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 647\n: Upper-division standing;\nCSC 415\n* and either\nMATH 225\n* or\nMATH 325\n* with a grade of C or better; CSC 308,\nCSC 309\n, and\nCSC 656\nrecommended; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to quantum computing and quantum information science. Comparison of classical and quantum computing architectures and organization. Quantum algorithm design and implementation on circuit-based and annealing quantum platforms. Program execution and performance analysis on quantum platform simulators and actual quantum hardware, subject to availability. Survey of research topics in quantum computing ranging from algorithms (e.g., Grover's Search) and their application to problems in quantum cryptography, quantum machine learning, and hybrid classical/quantum algorithms.\n(\nCSC 647\n/\nCSC 747\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 648  Software Engineering (Units: 3)\nPrerequisites for\nCSC 848\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 648\n: Upper-division standing;\nCSC 317\n* and\nCSC 413\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nPractical methods and tools for SW engineering including organizational teamwork.\n(\nCSC 848\n/\nCSC 648\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 651  System Administration (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 415\n* with grades of C or better.\nUser administration. Operating system installation, tuning, and control. Network administration. Security management. Performance tuning and management. Extra fee required. (ABC/NC grading only)\nCSC 652  Introduction to Security and Data Privacy (Units: 3)\nPrerequisite for\nCSC 852\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 652\n:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nIntroduction to fundamental concepts in cybersecurity, cryptography, and data privacy. Practice different privacy mechanisms in databases and present applications to a wide range of data analysis tasks. Extra fee required.\n(\nCSC 852\n/\nCSC 652\n[formerly CSC 650] is a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 653  Network Security (Units: 3)\nPrerequisite for\nCSC 853\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 653\n: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nIntroduction to the fundamental concepts of computer network security as well as standard security mechanisms and protocols.\n(\nCSC 853\n/\nCSC 653\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 656  Computer Organization (Units: 3)\nPrerequisite:\nCSC 415\n* (may be taken concurrently) or permission of the instructor.\nInstruction set design. Pipelined datapath and control. Cache and memory system design. Input and output subsystems. Parallel processing. Software and hardware interactions. Extra fee required.\nCSC 657  Bioinformatics Computing (Units: 3)\nPrerequisite: Upper-division or graduate standing in a science program or permission of the instructor.\nA broad range of topics in computational biology as practiced in the life science industry and leading research organizations. Provides computational background required to participate in R&D. Extra fee required.\n(\nCSC 857\n/\nCSC 657\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 659  AI Explainability and Ethics (Units: 3)\nPrerequisites for\nCSC 659\n: Restricted to upper-division students;\nCSC 413\nwith C or better; GPA of 3.0 or better; or permission of the instructor.\nPrerequisite for\nCSC 859\n: Graduate standing  or permission of the instructor.\nOverview of AI and GenAI technologies, their usage (including prompt engineering), and methods for their accuracy evaluations and optimization. Analysis of AI/GenAI limitations like hallucinations, bias, and errors. Overview of AI/GenAI explainability. Definitions, best practices and tools for auditing AI/GenAI for ethics and trustworthiness. Implementation of full AI pipeline and trustworthiness audit of selected AI application. (Plus-minus letter grade RP only)\n(\nCSC 859\n/\nCSC 659\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 664  Multimedia Systems (Units: 3)\nPrerequisite for\nCSC 864\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 664\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nComprehensive topics in multimedia such as basics of image and video processing, compression, multimedia databases, standard, synchronization, formats in the perspective of systems, and algorithms. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 864\n/\nCSC 664\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 665  Artificial Intelligence (Units: 3)\nPrerequisite for\nCSC 865\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 665\n: Restricted to upper-division standing or\nCSC 413\n* with a grade of C or better or permission of the instructor.\nOverview of algorithms and approaches to artificial intelligence. Study of fundamental concepts needed to attain human-level intelligence in computer systems, and gain experience in working with these concepts through assignments and programming exercises. Topics include problem-solving methods, heuristic search, game playing, agent architectures, machine learning, and various topics selected from knowledge representation, symbolic reasoning, computational models of virtual humans, neural networks, and genetic algorithms. Extra fee required.\n(\nCSC 665\n/\nCSC 865\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 667  Internet Application Design and Development (Units: 3)\nPrerequisite for\nCSC 867\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 667\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nFundamental technologies on which the World Wide Web is based. Extra fee required.\n(\nCSC 867\n/\nCSC 667\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 668  Advanced Object Oriented Software Design and Development (Units: 3)\nPrerequisite for\nCSC 868\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 668\n: Senior standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nObject-oriented analysis and design utilizing UML, design patterns, frameworks, and toolkits. Agile software design processes. Development of a mid-size programming project working in teams. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 868\n/\nCSC 668\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 671  Deep Learning (Units: 3)\nPrerequisite for\nCSC 871\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 671\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\nor\nMATH 325\nwith a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nExploration of the major technology trends that drive Deep Learning. Discussion of concepts and technologies to build, train, and apply fully connected deep neural networks. Focus on understanding the key parameters in a neural network's architecture and learning how Deep Learning actually works. (Plus-minus letter grade only)\n(\nCSC 871\n/\nCSC 671\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 675  Introduction to Database Systems (Units: 3)\nPrerequisite for\nCSC 775\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 675\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nRelational query languages. Semantic data models. Logical and physical database design. Privacy issues. Implementation techniques (catalogs, query optimization, concurrency control, security, and integrity enforcement). Extra fee required.\n(\nCSC 775\n/\nCSC 675\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 676  Soft Computing and Decision Support Systems (Units: 3)\nPrerequisite for\nCSC 876\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 676\n: Upper-division standing; GPA of 3.0 or better; or permission of the instructor.\nDevelopment of software systems for decision support including applications of soft computing. Topics include fuzzy sets, fuzzy logic, fuzzy systems, fuzzy decision-making, fuzzy controllers, approximate reasoning, possibility theory, rough sets, graded evaluation logic, logic aggregation operators, information fusion models, decision engineering methods, computing with words, perceptual computing, granular computing, and the LSP method for evaluation and optimization of complex systems. (Plus-minus letter grade only)\n(\nCSC 876\n/\nCSC 676\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 680  Application Development for Mobile Devices (Units: 3)\nPrerequisite for\nCSC 780\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 680\n: Restricted to senior Computer Science majors;\nCSC 415\n* with a grade of C or better; 3.0 GPA or higher; or permission of the instructor.\nIntroduction to, and comparison of, different popular mobile application frameworks. Conceptual and hands-on experience in writing mobile applications using native and cross-platform tools. (Plus-minus letter grade only)\n(\nCSC 780\n/\nCSC 680\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 685  Instructional Methods in Computer Science Teaching (Unit: 1)\nPrerequisite:\nCSC 215\nwith a grade of C or better.\nResearch-based pedagogical strategies and principles of teaching and learning in STEM. Seminar for students in their first Learning Assistant (LA) position or other interest in STEM teaching and learning.\nCSC 686  Experiences in Computer Science Teaching (Unit: 1)\nPrerequisite:\nCSC 215\nwith a grade of C or better.\nActivity practicum for students who are Learning Assistants (LAs) in STEM courses. Under the supervision of a STEM course instructor, LAs participate in an active, inclusive learning community in a section of a STEM course. LAs meet with the course instructor to review upcoming activities. May be repeated for a total of 2 units.\nCSC 688  AI Entrepreneurship (Units: 3)\nPrerequisite:\nCSC 317\nor equivalent.\nExploration of practical methods and tools for AI entrepreneurship. Knowledge and skills to integrate artificial intelligence into business ventures. Basics of AI technologies, market research, product-market fit development.\nCSC 690  Interactive Multimedia Application Development (Units: 3)\nPrerequisite:\nCSC 340\n* with a grade of C or better or permission of the instructor.\nBasics of multimedia data formats and algorithms to build applications using non-standard interfaces such as game controllers and multi-touch surfaces. (Plus-minus letter grade only)\nCSC 694  Cooperative Education: Computer Science (Units: 1-3)\nPrerequisite: Permission of the instructor.\nProjects in a business, government, or industrial position of at least one semester's duration. May be repeated for a total of 3 units. (This course is not eligible for certification for enrollment with the VA.)\nCSC 697  Senior Project in Computer Science (Units: 3)\nPrerequisites:\nCSC 415\nand\nCSC 510\n, or\nCSC 648\n; or permission of the instructor.\nCulminating experience in individual design, implementation, and professional documentation of a software product under the close supervision of a faculty member. (Plus-minus letter grade only)\nCSC 698  Topics in Computing (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nCurrent topics in computer hardware and software technologies. Topics to be specified in the Class Schedule. May be repeated for a total of 9 units when topics vary.\nTopics:\nInteractive Multimedia Development\nAugmented Reality Software Systems\nResearch Topics in Computing Applications\nAdvanced Topics in Computing Applications\nApplications of Parallel Computations\nReal-Time Cross-Platform Application Development\nPrinciples of Information Security and Privacy\nSoftware Design, Development, and Pedagogy\nInformation Visualization: Tools and Techniques\nGenerative AI\nCSC 699  Independent Study (Units: 1-3)\nPrerequisites: Permission of the department and instructor. An approved study proposal must be on file by the time of registration.\nLibrary and laboratory research and development projects. A final report must be approved by the instructor and filed with the department. May be repeated for a total of 9 units. (Plus-minus letter grade only)\nCSC 720  Advanced Operating Systems (Units: 3)\nPrerequisite: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nAnalysis of scheduling and memory management algorithms and the use of concurrent languages for systems development and distributed systems. Design and implementation of major components of an operating system. Extra fee required.\nCSC 746  High-Performance Computing (Units: 3)\nPrerequisite: Restricted graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrinciples and current practices in high-performance computing. Basics of multiprocessor systems such as clusters and graphics processors. Message-passing and shared memory-based software development. Cloud computing.\nCSC 747  Introduction to Quantum Computing and Quantum Information Science (Units: 3)\nPrerequisite for\nCSC 747\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 647\n: Upper-division standing;\nCSC 415\n* and either\nMATH 225\n* or\nMATH 325\n* with a grade of C or better; CSC 308,\nCSC 309\n, and\nCSC 656\nrecommended; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to quantum computing and quantum information science. Comparison of classical and quantum computing architectures and organization. Quantum algorithm design and implementation on circuit-based and annealing quantum platforms. Program execution and performance analysis on quantum platform simulators and actual quantum hardware, subject to availability. Survey of research topics in quantum computing ranging from algorithms (e.g., Grover's Search) and their application to problems in quantum cryptography, quantum machine learning, and hybrid classical/quantum algorithms.\n(\nCSC 647\n/\nCSC 747\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 775  Introduction to Database Systems (Units: 3)\nPrerequisite for\nCSC 775\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 675\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nRelational query languages. Semantic data models. Logical and physical database design. Privacy issues. Implementation techniques (catalogs, query optimization, concurrency control, security, and integrity enforcement). Extra fee required.\n(\nCSC 775\n/\nCSC 675\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 780  Application Development for Mobile Devices (Units: 3)\nPrerequisite for\nCSC 780\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 680\n: Restricted to senior Computer Science majors;\nCSC 415\n* with a grade of C or better; 3.0 GPA or higher; or permission of the instructor.\nIntroduction to, and comparison of, different popular mobile application frameworks. Conceptual and hands-on experience in writing mobile applications using native and cross-platform tools. (Plus-minus letter grade only)\n(\nCSC 780\n/\nCSC 680\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 805  Data Visualization: Concepts, Tools, Techniques, and Paradigms (Units: 3)\nPrerequisites: Restricted to graduate Computer Science students. Senior undergraduate Computer Science majors may enroll with the permission of the instructor.\nConcepts, techniques, algorithms, and technologies for creating effective and efficient visual data representations and visual analytic tools based on principles from computer graphics, HCI, visual art, perceptual psychology, and cognitive science to enhance the understanding and communication of complex and multi-dimensional data. (Plus-minus letter grade only)\nCSC 810  Analysis of Algorithms II (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nReview major design strategies and theory of NP-Completeness. Approximation algorithms. Online Algorithms. Parallel and distributed algorithms. Algorithms for specific areas of interest. Extra fee required.\nCSC 820  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 821  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 825  Advanced Automata Theory (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nAdvanced topics in theoretical computer science and their application to a broad range of areas including bioinformatics, compilers, data and image compression, natural language processing, networking, and web applications. Extra fee required. (Plus-minus letter grade only)\nCSC 830  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students.\nPrerequisites for\nCSC 630\n:\nCSC 413\n* and either\nMATH 225\n* or\nMATH 325\n* with grades of C or better; a GPA of 3.0 or better; or permission of the instructor.\nGraphics system design and GPU pipeline architecture and Generative AI on graphics. Overview of device-independent graphic systems such as OpenGL, 2- & 3-dimensional viewing pipelines, hidden line and surface removal algorithms, raster graphics techniques, and color space models. Topics on generative AI for graphics such as StyleGAN are covered. Course fee required. (Plus-minus letter grade only)\n(\nCSC 830\n/\nCSC 630\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCourse Attributes:\nCSC 630\n/830\nCSC 831  Multiplayer Game Development (Units: 3)\nPrerequisite for\nCSC 831\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 631\n: Upper-division standing;\nCSC 413\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer graphics and network characteristics of multiplayer games.  Design and development of a game as a team project.\n(\nCSC 831\n/\nCSC 631\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 841  Computer Performance Evaluation (Units: 3)\nPrerequisite for\nCSC 841\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 641\n: Upper-division standing;\nCSC 415\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer performance analysis problems related to system design, selection, and tuning. Modeling using stochastic and operational queuing models. Workload characterization, design, and performance measurement methods. Design of simulation models for computer systems.  Extra fee required. (Plus-minus letter grade only)\n(\nCSC 841\n/\nCSC 641\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 842  Human-Computer Interaction (Units: 3)\nPrerequisite for\nCSC 842\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisite for\nCSC 642\n: Upper-division standing;\nCSC 413\n* with a grade of C or better or permission of the instructor.\nThe design, implementation, and evaluation of human-computer interfaces. Topics include interface devices, interface metaphors, interaction styles, user-centered design, testing, and quality assessment. Extra fee required.\n(\nCSC 842\n/\nCSC 642\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 845  Advanced Computer Networks (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nDesign and implementation of networking protocols and technologies in wireless and mobile networks. Introduction to emerging design, algorithms, protocols, and applications in wireless and mobile networks.  Extra fee required.\nCSC 847  Cloud and Distributed Computing: Concepts and Applications (Units: 3)\nPrerequisites: Restricted to senior and graduate Computer Science and Data Science, Artificial Intelligence, or graduate certificate in Software Engineering students; permission of the instructor.\nInfrastructure, platform, and software as a service. Includes enabling techniques behind cloud computing including virtualization, multi-tenancy, and service-oriented architecture. Cloud storage options such as NoSQL databases, emerging technologies such as containers and Kubernetes, parallel and distributed computing platforms including MapReduce and Apache Sparc, and hands-on experience on public clouds such as the Amazon Cloud and Google Cloud. (Plus-minus letter grade only)\nCSC 848  Software Engineering (Units: 3)\nPrerequisites for\nCSC 848\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 648\n: Upper-division standing;\nCSC 317\n* and\nCSC 413\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nPractical methods and tools for SW engineering including organizational teamwork.\n(\nCSC 848\n/\nCSC 648\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 852  Introduction to Security and Data Privacy (Units: 3)\nPrerequisite for\nCSC 852\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 652\n:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nIntroduction to fundamental concepts in cybersecurity, cryptography, and data privacy. Practice different privacy mechanisms in databases and present applications to a wide range of data analysis tasks. Extra fee required.\n(\nCSC 852\n/\nCSC 652\n[formerly CSC 650] is a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 853  Network Security (Units: 3)\nPrerequisite for\nCSC 853\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 653\n: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nIntroduction to the fundamental concepts of computer network security as well as standard security mechanisms and protocols.\n(\nCSC 853\n/\nCSC 653\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 857  Bioinformatics Computing (Units: 3)\nPrerequisite: Upper-division or graduate standing in a science program or permission of the instructor.\nA broad range of topics in computational biology as practiced in the life science industry and leading research organizations. Provides computational background required to participate in R&D. Extra fee required.\n(\nCSC 857\n/\nCSC 657\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 859  AI Explainability and Ethics (Units: 3)\nPrerequisites for\nCSC 659\n: Restricted to upper-division students;\nCSC 413\nwith C or better; GPA of 3.0 or better; or permission of the instructor.\nPrerequisite for\nCSC 859\n: Graduate standing  or permission of the instructor.\nOverview of AI and GenAI technologies, their usage (including prompt engineering), and methods for their accuracy evaluations and optimization. Analysis of AI/GenAI limitations like hallucinations, bias, and errors. Overview of AI/GenAI explainability. Definitions, best practices and tools for auditing AI/GenAI for ethics and trustworthiness. Implementation of full AI pipeline and trustworthiness audit of selected AI application. (Plus-minus letter grade RP only)\n(\nCSC 859\n/\nCSC 659\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 864  Multimedia Systems (Units: 3)\nPrerequisite for\nCSC 864\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 664\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nComprehensive topics in multimedia such as basics of image and video processing, compression, multimedia databases, standard, synchronization, formats in the perspective of systems, and algorithms. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 864\n/\nCSC 664\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 865  Artificial Intelligence (Units: 3)\nPrerequisite for\nCSC 865\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 665\n: Restricted to upper-division standing or\nCSC 413\n* with a grade of C or better or permission of the instructor.\nOverview of algorithms and approaches to artificial intelligence. Study of fundamental concepts needed to attain human-level intelligence in computer systems, and gain experience in working with these concepts through assignments and programming exercises. Topics include problem-solving methods, heuristic search, game playing, agent architectures, machine learning, and various topics selected from knowledge representation, symbolic reasoning, computational models of virtual humans, neural networks, and genetic algorithms. Extra fee required.\n(\nCSC 665\n/\nCSC 865\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 867  Internet Application Design and Development (Units: 3)\nPrerequisite for\nCSC 867\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 667\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nFundamental technologies on which the World Wide Web is based. Extra fee required.\n(\nCSC 867\n/\nCSC 667\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 868  Advanced Object Oriented Software Design and Development (Units: 3)\nPrerequisite for\nCSC 868\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 668\n: Senior standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nObject-oriented analysis and design utilizing UML, design patterns, frameworks, and toolkits. Agile software design processes. Development of a mid-size programming project working in teams. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 868\n/\nCSC 668\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 869  Data Mining (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nKnowledge discovery process, basic data mining concepts, key mining algorithms, and data mining in practical domains such as bioinformatics. (Plus-minus letter grade only)\nCSC 871  Deep Learning (Units: 3)\nPrerequisite for\nCSC 871\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 671\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\nor\nMATH 325\nwith a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nExploration of the major technology trends that drive Deep Learning. Discussion of concepts and technologies to build, train, and apply fully connected deep neural networks. Focus on understanding the key parameters in a neural network's architecture and learning how Deep Learning actually works. (Plus-minus letter grade only)\n(\nCSC 871\n/\nCSC 671\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 872  Pattern Analysis and Machine Intelligence (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nFoundation of pattern analysis and machine intelligence. Artificial intelligence: agent, logic, and search. Machine learning: Bayesian classification. Neural network: simulated annealing. Imaging: image segmentation and object recognition. (Plus-minus letter grade only)\nCSC 874  Topics in Big Data Analysis (Units: 3)\nPrerequisite: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nIntroduction to current topics in data sciences and big data analysis. (Plus-minus letter grade only)\nCSC 876  Soft Computing and Decision Support Systems (Units: 3)\nPrerequisite for\nCSC 876\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 676\n: Upper-division standing; GPA of 3.0 or better; or permission of the instructor.\nDevelopment of software systems for decision support including applications of soft computing. Topics include fuzzy sets, fuzzy logic, fuzzy systems, fuzzy decision-making, fuzzy controllers, approximate reasoning, possibility theory, rough sets, graded evaluation logic, logic aggregation operators, information fusion models, decision engineering methods, computing with words, perceptual computing, granular computing, and the LSP method for evaluation and optimization of complex systems. (Plus-minus letter grade only)\n(\nCSC 876\n/\nCSC 676\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 878  Big Data Platforms and Systems (Units: 3)\nPrerequisite: Restricted to graduate Computer Science students or permission of the instructor.\nExamination of Big Data's main characteristics. Introduction of and experimentation with common platforms and systems of the Big Data ecosystem on premises or in the cloud. Application of Big Data management systems such as NoSQL databases. Utilization of mainstream Big Data platforms such as Apache Hadoop and Apache Spark to address real-world big data problems. (Plus-minus letter grade only)\nCSC 890  Graduate Seminar (Units: 3)\nPrerequisite: Permission of the instructor or graduate advisor.\nExplore a variety of current advanced research trends in Computer Science. Topics to be specified in the Class Schedule. May be repeated for a total of 6 units when topics vary. (Plus-minus letter grade only)\nTopics:\nSelected Topics in Computing for Life Science\nHealth Informatics\nAdvanced Information Security and Privacy\nAdvanced Artificial Intelligence\nData Visualization\nBig Data and Cybersecurity\nSpecial Topics in Technology and Society\nSoftware Engineering and Industry Practices\nQuantum Computing\nTechnical Entrepreneurship\nMachine Learning fo",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 101",
    "category": "course",
    "title": "CSC 101 - Introduction to Computer Science",
    "content": "Course: CSC 101 - Introduction to Computer Science\n\nUnits: 3\n\nDescription: Introduction to fundamental concepts of computer science. Problem-solving techniques, algorithm development, and programming fundamentals.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 101\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 210",
    "category": "course",
    "title": "CSC 210 - Programming Principles",
    "content": "Course: CSC 210 - Programming Principles\n\nUnits: 3\n\nDescription: Object-oriented programming, data structures, algorithm design, and software development practices.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 210\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 220",
    "category": "course",
    "title": "CSC 220 - Data Structures",
    "content": "Course: CSC 220 - Data Structures\n\nUnits: 3\n\nDescription: Advanced data structures including linked lists, stacks, queues, trees, graphs, hash tables, and their implementations.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 220\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 230",
    "category": "course",
    "title": "CSC 230 - Discrete Mathematical Structures for Computer Science",
    "content": "Course: CSC 230 - Discrete Mathematical Structures for Computer Science\n\nUnits: 3\n\nDescription: Discrete mathematics for computer science including logic, sets, functions, relations, combinatorics, and graph theory.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 230\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 256",
    "category": "course",
    "title": "CSC 256 - Introduction to Algorithm Analysis and Design",
    "content": "Course: CSC 256 - Introduction to Algorithm Analysis and Design\n\nUnits: 3\n\nDescription: Algorithm design techniques, complexity analysis, sorting, searching, and algorithmic problem-solving.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 256\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 317",
    "category": "course",
    "title": "CSC 317 - Web Software Development",
    "content": "Course: CSC 317 - Web Software Development\n\nUnits: 3\n\nDescription: Full-stack web application development using modern frameworks, databases, and cloud technologies.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 317\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 340",
    "category": "course",
    "title": "CSC 340 - Programming Methodology",
    "content": "Course: CSC 340 - Programming Methodology\n\nUnits: 3\n\nDescription: Software development methodologies, design patterns, testing, version control, and team collaboration.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 340\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 413",
    "category": "course",
    "title": "CSC 413 - Software Development",
    "content": "Course: CSC 413 - Software Development\n\nUnits: 3\n\nDescription: Software engineering principles, agile methodologies, project management, and full-cycle development.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 413\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 415",
    "category": "course",
    "title": "CSC 415 - Operating Systems Principles",
    "content": "Course: CSC 415 - Operating Systems Principles\n\nUnits: 3\n\nDescription: Operating system concepts: processes, threads, scheduling, memory management, file systems, and synchronization.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 415\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 510",
    "category": "course",
    "title": "CSC 510 - Analysis of Algorithms I",
    "content": "Course: CSC 510 - Analysis of Algorithms I\n\nUnits: 3\n\nDescription: Advanced algorithm design and analysis, complexity theory, NP-completeness, and optimization techniques.\n\nDepartment: Computer Science\nLevel: Undergraduate\nCourse Code: CSC 510\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 600",
    "category": "course",
    "title": "CSC 600 - Advanced Topics in Computer Science",
    "content": "Course: CSC 600 - Advanced Topics in Computer Science\n\nUnits: 3\n\nDescription: Graduate-level seminar covering current research topics in computer science.\n\nDepartment: Computer Science\nLevel: Graduate\nCourse Code: CSC 600\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 645",
    "category": "course",
    "title": "CSC 645 - Computer Networks",
    "content": "Course: CSC 645 - Computer Networks\n\nUnits: 3\n\nDescription: Network protocols, architecture, TCP/IP, routing, network security, and distributed systems.\n\nDepartment: Computer Science\nLevel: Graduate\nCourse Code: CSC 645\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 667",
    "category": "course",
    "title": "CSC 667 - Advanced Database Management Systems",
    "content": "Course: CSC 667 - Advanced Database Management Systems\n\nUnits: 3\n\nDescription: Advanced database concepts, query optimization, transaction processing, distributed databases.\n\nDepartment: Computer Science\nLevel: Graduate\nCourse Code: CSC 667\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "Course Catalog - CSC 690",
    "category": "course",
    "title": "CSC 690 - Master's Project",
    "content": "Course: CSC 690 - Master's Project\n\nUnits: 3\n\nDescription: Individual research project under faculty supervision culminating in written report and presentation.\n\nDepartment: Computer Science\nLevel: Graduate\nCourse Code: CSC 690\n",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  },
  {
    "source": "https://cs.sfsu.edu/people",
    "category": "Faculty",
    "title": "People | Department of Computer Science",
    "content": "People\nLeadership & Staff\nAnagha Kulkarni\nProfessor\nAssociate Chair\nak@sfsu.edu\n(415) 338-2539\nArno Puder\nProfessor\nDepartment Chair, Undergraduate Advisor\narno@sfsu.edu\nYuki Huynh\nOffice Manager\nyukihuynh@sfsu.edu\nBriana Miranda\nAdministrative Support Coordinator\nbrianamiranda@sfsu.edu\nFaculty\nAkila de Silva\nAssistant Professor\ndesilva@sfsu.edu\nHui Yang\nProfessor\nhuiyang@sfsu.edu\n(415) 338-2221\nJingyi Wang\nAssociate Professor\nTransfer Advisor\njingyiwang@sfsu.edu\n(415) 405-2636\nJozo Dujmovic\nProfessor\njozo@sfsu.edu\n(415) 338-2207\nKaz Okada\nProfessor\nkazokada@sfsu.edu\n(415) 338-7687\nQun Wang\nAssistant Professor\nGraduate Advisor\nqunwang@sfsu.edu\nSanika Doolani\nAssistant Professor\nsanikadoolani@sfsu.edu\nSara El  Alaoui\nAssistant Professor\nselalaoui@sfsu.edu\nShah Rukh Humayoun\nAssociate Professor\nUndergraduate Advisor\nhumayoun@sfsu.edu\n(415) 338-2858\nTimothy Sun\nAssistant Professor\nGraduate Coordinator, Graduate Advisor\ntimothysun@sfsu.edu\nTracy Xuhui Chen\nAssistant Professor\ntracychen@sfsu.edu\nWes Bethel\nProfessor\newbethel@sfsu.edu\nZainab Agha\nAssistant Professor\nzainabagha@sfsu.edu\nAdjunct Faculty\nJulia Cluceru\nAdjunct Faculty\nRobert Mateescu\nAdjunct Faculty\nmateescu@sfsu.edu\nLecturers\nAbdur Sikder\nLecturer\nabdur@sfsu.edu\nAndrew Scott\nLecturer\nats@sfsu.edu\nAnthony Souza\nLecturer\najsouza@sfsu.edu\nBrian Parra\nLecturer\nbrianparra@sfsu.edu\nDaniel Tomasevich\nLecturer\ndtomas@sfsu.edu\n(415) 338-2168\nDuc Ta\nLecturer\ndta@sfsu.edu\nHenry Villar\nLecturer\njvillar@mail.sfsu.edu\nHugh Hui\nLecturer\nhhui@sfsu.edu\nIvan Corneillet\nLecturer\nivan@sfsu.edu\nJennifer Nelson\nLecturer\nkerekesj@sfsu.edu\nJohn Roberts\nLecturer\njrob@sfsu.edu\nJose Ortiz-Costa\nLecturer\njortizco@sfsu.edu\nJoseph Hui\nLecturer\njhui@sfsu.edu\nKimbrough Moore\nLecturer\namoore8@sfsu.edu\nMark Davis\nLecturer\nmarkkdavis@sfsu.edu\nMatt Pico\nLecturer\nmpico@sfsu.edu\nNina Mir\nLecturer\nnina@sfsu.edu\nRobert Bierman\nLecturer\nbierman@sfsu.edu\nFaculty On Leave\nIsabel Hyo Jung Song\nAssociate Professor\nUndergraduate Advisor\nhjsong@sfsu.edu\n(415) 338-7688\nEmeritus Faculty\nBarry Levine\nProfessor\nlevine@sfsu.edu\n(415) 338-1661\nDragutin Petkovic\nProfessor\nCoordinator for Graduate Certificates in AI Ethics & SW Engineering\npetkovic@sfsu.edu\n(415) 338-2261\nIlmi Yoon\nProfessor\nilmi@sfsu.edu\nJames Wong\nProfessor\njwong@sfsu.edu\nLawrence Kroll\nProfessor\nkroll@sfsu.edu\nRobert Douglas\nProfessor\nrdouglas@sfsu.edu\nWilliam Hsu\nProfessor\nwhsu@sfsu.edu\nGraduate Teaching Assistants\nJonathan  Jacobson\nGraduate Teaching Assistant\njacobsonj@sfsu.edu\nFall 2025 Instructional Student Assistants (ISAs)\nAbdillahi\nAbdoulfatah\nBavisetti\nSai\nBavisetty\nHemasri\nBaxter\nTyler\nBohlander\nTy\nDaghbashyan\nArman\nGade\nJaideep\nHalvadiya\nNaisarg\nKatturu\nSneha\nKidwai\nAlex\nLiu\nGuiran\nLiu\nYang\nMagar\nAishwarya\nFazl\nMohammad\nMoore\nConnor\nNarayan\nShivangi\nNhan\nElton\nPatel\nShail\nPatel\nMeet\nPisati\nAbhinaya\nPowell\nKayla\nSakanovic\nDenis\nShorb\nBenjamin\nShrivastava\nAtharva\nSuratia\nNishi\nTaneja\nNipun\nThompson\nMichael\nVats\nAnshaj\nWalawalkar\nAtharva\nYoung\nDeven\nZhu\nBinrong\nNote: ISAs do not have an office location or office hours.",
    "url": "https://cs.sfsu.edu/people"
  },
  {
    "source": "Faculty Directory",
    "category": "faculty",
    "title": "Dr. Ilmi Yoon",
    "content": "Faculty Member: Dr. Ilmi Yoon\n\nTitle: Professor & Department Chair\nEmail: iyoon@sfsu.edu\nOffice Location: Thornton Hall\n\nResearch Interests: Software Engineering, Mobile Computing, Computer Science Education\n\nDepartment: Computer Science\nSan Francisco State University\n",
    "url": "https://cs.sfsu.edu/people"
  },
  {
    "source": "Faculty Directory",
    "category": "faculty",
    "title": "Dr. Anagha Kulkarni",
    "content": "Faculty Member: Dr. Anagha Kulkarni\n\nTitle: Associate Professor\nEmail: anagha@sfsu.edu\nOffice Location: Thornton Hall\n\nResearch Interests: Artificial Intelligence, Machine Learning, Data Science\n\nDepartment: Computer Science\nSan Francisco State University\n",
    "url": "https://cs.sfsu.edu/people"
  },
  {
    "source": "Faculty Directory",
    "category": "faculty",
    "title": "Dr. Mike Murphy",
    "content": "Faculty Member: Dr. Mike Murphy\n\nTitle: Professor\nEmail: murphy@sfsu.edu\nOffice Location: Thornton Hall\n\nResearch Interests: Software Engineering, Web Development, Database Systems\n\nDepartment: Computer Science\nSan Francisco State University\n",
    "url": "https://cs.sfsu.edu/people"
  },
  {
    "source": "https://cs.sfsu.edu/resources",
    "category": "Student Resources",
    "title": "Graduate Forms | Department of Computer Science",
    "content": "Graduate Forms\nWaiver of College Regulations Petition\nIf you are submitting a\nWaiver of College Regulations Petition form\n, please follow the instructions below:\nSTEP 1: Student fills out the petition form electronically:\nhttps://registrar.sfsu.edu/file/waiver-college-regulations-petition-use…\nMake sure Course information is correct\n.\n(ex. Term/Year: Fall 2023, Prefix: CSC, Number: 510, Section: 02, Class No. 3216, Units: 3). Check Class No. on\nhttps://webapps.sfsu.edu/public/classservices/classsearch\nCheck only 1 box. If you need to submit multiple petitions, use different forms.\nSend form from your SFSU email to Instructor’s SFSU email for approval\nNote: you DO NOT have to sign the form if it is being sent from your official SFSU email account.\nPLEASE USE THIS PATTERN AS THE SUBJECT LINE FOR YOUR EMAIL:\nNAME – SFSU ID#\n(ex. John Doe - 912345678)\nSTEP 2: Instructor receives form and forwards approval to the CS Office\nForward approval with an “I approve” from the instructor’s official SFSU email to\ncs-dept@sfsu.edu\nNote: instructors DO NOT need to sign the form if it is being sent from their official SFSU email account.\nSTEP 3: Office checks if all the above is correct and then forwards to Department Chair\nPut * after ID# in email title for everything except “Repeat a course after maximum attempts or in excess of unit repeat limits”\nForward to Dept. Chair and cc student\nSTEP 4: Department Chair will forward approval to Registrar’s to process\nIf you do not complete all instructions in Step 1 correctly, the CS Office will reroute your petition form back to your email for you to correct.\nHas my petition been approved/processed?\nIf you have been cc'd in the email with approval from the Dept. Chair to the Registrar's, your form has been sent to the Registrar's to process your petition. If you have not, the office is most likely waiting on the Instructor to send their approval. The Registrars Office will provide updates to your petition to your SFSU email.\nWaiver of College Regulations Petition.pdf\n532.62 KB\nCSC 699-899 Independent Study\nIf you are submitting a\nPetition for Course by Independent Study 699-899 Form\n, please follow the instructions below:\nFaculty approval is required for CSC 699-899.\nStudents are encouraged to proactively reach out to CS faculty members with whom they have a prior connection, such as professors from classes where they have performed well.\nOnce a student and faculty member reach an agreement to pursue CSC 699-899, a formal\nPetition for Course by Independent Study\nform must be completed. This form serves to document a shared understanding of the student's learning objectives, project scope, and grading criteria. CSC 699-899 counts as a Computer Science elective.\nSTEP 1:\nThe student downloads the form, reaches an agreement with a faculty supervisor as to content\nSTEP 2:\nThe student then completes and signs the form and emails it to the faculty supervisor\nSTEP 3:\nThe faculty supervisor then signs the form and sends it to the CS Department Chair\nSTEP 4:\nThe CS Department Chair signs the form and sends it to the CS Department Office staff\nSTEP 5:\nThe CS Department staff will retain a copy, and then forward the final signed copies to the student and faculty supervisor\nSTEP 6:\nThe faculty supervisor then issues a permission number to the student to enroll in the course\nPetition for Course by Independent Study 699-899.pdf\n219.23 KB\nAll Graduate Forms\nCS Course Equivalency Form.docx\n26.63 KB\nCS Prerequisite Approval Form .pdf\n287.6 KB\nCS Graduate Four Unit Exemption.docx\n12.53 KB\nCSC 893-694 Industrial Research.pdf\n71.42 KB\nChecklist for Students Enrolling in CSC 895-898.pdf\n65.04 KB\nLetter of Recommendation Release Form.pdf\n405.54 KB\nPetition for Course by Independent Study 699-899.pdf\n219.23 KB",
    "url": "https://cs.sfsu.edu/resources"
  },
  {
    "source": "https://cs.sfsu.edu/advising",
    "category": "Student Resources",
    "title": "Undergraduate Advising | Department of Computer Science",
    "content": "Undergraduate Advising\nProper and timely advising has been shown to significantly improve students' success and graduation rate. We summarize here our advising process and mandatory advising checkpoints. Please refer to the advising process described under these undergraduate, graduate and transfer advising section.\nAdvising\nStudent Advising Guidance\nComputer science students are strongly encouraged to adhere to the following student responsibilities:\nFollowing the appropriate advising process to their standing, as described under these Undergraduate and Graduate sections.\nReading\nall emails\nsent from the computer science office and faculty.\nSeeking advising for any mandatory advising checkpoints.\nSeeking advising whenever a need arises, in a timely manner with respect to any deadlines.\nUndergraduate Advising\nIt is important and beneficial to take the opportunity to schedule timely advising for assistance and achieving success. Students should plan their program of study in the major with the help of a departmental advisor as soon as possible in order that the correct sequence of courses is taken and a proper set of electives is chosen. Students are advised that CR/NC grades are\nnot\nacceptable in courses to be counted for the Computer Science major or minor programs. It is also suggested that students consult with an advisor before selecting courses to meet the General Education requirements.\nUse Navigator to Schedule your appointment.\nWilliam Hsu can be reached via email only until 10/5/2025 for advising needs:\nwhsu@sfsu.edu\n.\nSee Navigator Appointment Guide for Computer Science on how to schedule your appointment.\nPlease email\ncs-dept@sfsu.edu\nif you are unable to access Navigator.\nTransfer Advising\nAdvising Tips\nFor your appointment with your advisor, please bring the following documents (if available, online documents are ok):\nTranscripts\nList of all major related courses with course title, semester taken, college taken at, and grades obtained.\nIf possible, please bring course descriptions, syllabus, text book title, and any other related course materials.\nUse Navigator to Schedule your appointment.\nWilliam Hsu can be reached via email only until 10/5/2025 for advising needs:\nwhsu@sfsu.edu\n.\nSee Navigator Appointment Scheduler Quick Reference Guide on how to schedule your appointment.\nPlease email\ncs-dept@sfsu.edu\nif you are unable to access Navigator.\nGraduation Advising\nGraduation\nSee the\nRegistrar's Office's web page\nfor details on the graduation process. If your DPR shows something missing, please schedule an appointment with an Advisor. Make sure to complete your Senior Electives.\nSenior Electives\nAll CSC majors must complete five 3-unit senior electives. Students may choose 15 units from among the following courses:\nCSC 520: Theory of Computing\nCSC 600: Programming Paradigms and Languages\nCSC 615: UNIX Programming\nCSC 620: Natural Language Technologies\nCSC 621: Biomedical Imaging and Analysis\nCSC 630: Computer Graphics Systems Design\nCSC 631: Multiplayer Game Development\nCSC 641: Computer Performance Evaluation\nCSC 642: Human-Computer Interaction\nCSC 645: Computer Networks\nCSC 647: Introduction to Quantum Computing and Quantum Information Science\nCSC 649: Search Engines\nCSC 651: System Administration\nCSC 652: Introduction to Security and Data Privacy\nCSC 656: Computer Organization\nCSC 657: Bioinformatics Computing\nCSC 658: Programming Cafe\nCSC 664: Multimedia Systems\nCSC 665: Artificial Intelligence\nCSC 667: Internet Application Design and Development\nCSC 668: Advanced Object Oriented Software Design and Development\nCSC 671: Deep Learning\nCSC 675: Introduction to Database Systems\nCSC 676: Soft Computing and Decision Support Systems\nCSC 680: Application Development for Mobile Devices\nCSC 690: Interactive Multimedia Application Development\nCSC 698: Topics in Computing\nCSC 699: Independent Study\nMATH 400: Numerical Analysis\nMATH 425: Applied and Computational Linear Algebra\nMATH 448: Introduction to Statistical Learning and Data Mining\n*Most graduate CSC courses may also be used as senior electives.\n**You may only choose one of the listed MATH courses as a senior elective.\nStudents are advised to check their university and college regulations regarding academic standing requirements. It is occasionally possible to use a course taken in a different department or at another university to satisfy elective requirements. Any course substitutions must be approved in advance by a Senior Advisor.\nOutside of SF State Transfer Students\nOur program has been recently revised to streamline the course articulation for transfer, allowing more courses taken at community colleges or other schools to count towards your Computer Science Degree at SF State.\nTransferable Courses\nAll lower division courses (course numbers below 300) included among the degree requirements are available at many community colleges in California. Students intending to enter the program upon transferring to San Francisco State University from a community college should take as many of those courses there as possible.\nThe equivalents for the following Computer Science courses may be taken from approved universities and applied to your SF State CS Degree:\nCSC 101: Introduction to Computing\nCSC 215: Intermediate Computer Programming\nCSC 220: Data Structures\nCSC 230: Discrete Mathematics\nCSC 256: Machine Structures\nAdditionally, the following non-CS courses, required for completion of the program, may also be transferred from other institutions depending on their respective department's policies:\nMATH 226: Calculus I\nMATH 227: Calculus II\nPHYS 220/222: Physics I\nPHYS 230/232: Physics II\nBIOL 100: Introduction to Biology\nTo verify course equivalencies, please consult\nassist.org\n.\nQuickly look up articulation agreements for CS courses\nusing this tool\n.\nIf all lower-division major and GE requirements are satisfied, check out the\nSF State Bulletin's Roadmap for Transfer Students\n.\nExpected Programming Knowledge\nStudents who transfer to our program should have adequate Java experience. Students can attain adequate Java background by taking a course which should include topics as specified in the resources below:\nThe main Java tutorials website:\nOracle Java Tutorial Documentation web page.\nTopics Include:\nOracle Java Tutorial Documentation: Getting Started\n(Study All Topics)\nOracle Java Tutorial Documentation: Learning the Java Language\n(Study All Topics)\nOracle Java Tutorial Documentation: Essential Java Classes\n(Study Exceptions and Basic I/O)\nOracle Java Tutorial Documentation: Collections\n(Study Introduction and Interfaces)\nForms\nUndergraduate Forms\nIf you are submitting a\nWaiver of College Regulations Petition form\n, please follow the instructions below:\nSTEP 1: Student fills out the petition form electronically:\nhttps://registrar.sfsu.edu/sites/default/files/documents/collegewaiver_1.pdf\nMake sure Course information is correct\n.\n(ex. Term/Year: Fall 2023, Prefix: CSC, Number: 510, Section: 02, Class No. 3216, Units: 3). Check Class No. on\nhttps://webapps.sfsu.edu/public/classservices/classsearch\nCheck only 1 box. If you need to submit multiple petitions, use different forms.\nSend form from your SFSU email to Instructor’s SFSU email for approval\nNote: you DO NOT have to sign the form if it is being sent from your official SFSU email account.\nPLEASE USE THIS PATTERN AS THE SUBJECT LINE FOR YOUR EMAIL:\nNAME – SFSU ID#\n(ex. John Doe - 912345678)\nSTEP 2: Instructor receives form and forwards approval to the CS Office\nForward approval with an “I approve” from the instructor’s official SFSU email to\ncs-dept@sfsu.edu\nNote: instructors DO NOT need to sign the form if it is being sent from their official SFSU email account.\nSTEP 3: Office checks if all the above is correct and then forwards to Department Chair\nPut * after ID# in email title for everything except “Repeat a course after maximum attempts or in excess of unit repeat limits”\nForward to Dept. Chair and cc student\nSTEP 4: Department Chair will forward approval to Registrar’s to process\nIf you do not complete all instructions in Step 1 correctly, the CS Office will reroute your petition form back to your email for you to correct.\nHas my petition been approved/processed?\nIf you have been cc'd in the email with approval from the Dept. Chair to the Registrar's, your form has been sent to the Registrar's to process your petition. If you have not, the office is most likely waiting on the Instructor to send their approval. The Registrars Office will provide updates to your petition to your SFSU email.\nWaiver of College Regulations Petition.pdf\n532.62 KB\nComputer Science Department Transfer Equivalency Evaluation.pdf\n429.15 KB\nAcademic Bulletin Quick Links\nPrerequisite Courses\nRoadmap\nTransfer",
    "url": "https://cs.sfsu.edu/advising"
  }
]