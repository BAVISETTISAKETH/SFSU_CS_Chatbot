[
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/",
    "category": "Course Catalog",
    "title": "Computer Science | San Francisco State University Bulletin",
    "content": "Computer Science\nCollege of Science and Engineering\nDean: Dr. Carmen Domingo\nDepartment of Computer Science\nTH 906\nPhone: (415) 338-1008\nEmail:\ncsgrad@sfsu.edu\nWebsite:\nhttp://cs.sfsu.edu\nChair: Arno Puder\nGraduate Coordinator: Yang\nGraduate Admissions: Okada\nUndergraduate Advisors: AlJarrah, Dujmovic, Fazli, Humayoun, Kulkarni, Singh, Song, Yue\nProgram Scope\nThe primary mission of the Department of Computer Science is to prepare students for careers as software professionals and graduate studies in computer science and related fields. The department offers a broad curriculum covering the major areas of the computing discipline, integrated with soft skills such as teamwork and written/oral communication; students also gain experience working on group projects. Students are exposed to the fundamentals of computing architecture and computing theory, and focus their studies on the areas of software and systems development. Faculty work directly with students to help them develop the skills and knowledge of computing professionals.\nDepartment faculty are committed to teaching excellence. They remain current in the rapidly changing field of computing technology through continuing research and publications, direct consultation with local industries, and seminar programs that bring top researchers and industry leaders to campus to speak on current developments in the field. The Supervised Industrial Research Program, Practicum option, and other mechanisms provide opportunities for graduate students to complement their academic learning with real-world experience.\nThe department has an additional commitment to sharing its knowledge and skills with the rest of the University community, with local schools, and with community-based organizations in the Bay Area.\nThe Bachelor of Science program stresses a basic foundation in mathematics and physics, and a thorough study of the fundamentals of the discipline: software development, computer architecture, operating systems, programming languages, algorithms, and the theoretical foundations of computer science. A wide variety of elective courses such as mobile development, web/internet applications, bioinformatics, database systems, artificial intelligence, computer graphics, game development, and software engineering allow students to specialize in selected areas. Ethical and social issues of computing are discussed throughout the curriculum. Senior courses include group projects to better prepare students for future job markets. Courses are updated or added regularly to provide necessary training in the latest software technologies.\nThe Master of Science in Computer Science prepares students for a wide variety of careers in computing or related industries as well as for advanced study toward Ph.D. degrees. Our program combines a solid and practical curriculum with high-quality research and project-based activities. In addition to a general core covering the breadth of the computing discipline, students may focus on software engineering in globally distributed environments, computing applications for biotechnology and the life sciences, data mining/big data, and business applications.\nOur faculty maintain active publication records, with significant funding from government agencies (NSF, NIH, Department of Labor, etc.) and industry (Genentech, Microsoft, IBM, Arista Networks, Mozilla, etc.). Students actively engage in research projects, write papers, attend conferences, and participate in funding proposals. SF State’s Center for Computing for Life Sciences and several specialized laboratories provide research and project focus, as well as opportunities to collaborate with faculty and students from other SF State departments and industry. A new Entrepreneurship Program and Developers Prize supports the development of student projects into business or non-profit ventures.\nComputing Facilities\nCentral Facilities\nA network of Mac, Linux, and PC servers supported by SF State Information Technology Services\nA Linux server (unixlab) supported by SF State Information Technology Services, used for Computer Science courses\nWorkstation labs in the SF State J. Paul Leonard Library and around campus\nGeneral Undergraduate Computing Facilities\nIntel servers (Windows and Linux)\nWorkstation laboratories with Mac, Windows, and Linux desktops\nSpecialized Centers, Laboratories, and Computing Resources\nCenter for Computing for Life Sciences (including Amazon cloud servers and 40-node DELL cluster)\nMultimedia and Visualization Laboratory\nBiocomputing and Media Research Group\nBiomedical Image and Data Analysis Lab\nVirtual Computing: VMware GSX Server, Microsoft VirtualPC Server\nHigh-Performance Computing server with NVIDIA Tesla and Titan GPUs\nCareer Alternatives\nMobile application developer\nWeb and internet application developer\nGame developer\nBioinformatics Developer\nData science/data mining developer\nSoftware Engineer\nQuality assurance engineer\nManager of software development teams\nSystems programmer/administrator\nComputer network specialist\nSystem security and/or performance manager\nApplication software designer\nDatabase designer/programmer/administrator\nProgrammer in scientific or business applications\nProfessor\nJozo J. Dujmović (1994),\nProfessor in Computer Science\n. Ph.D. University of Belgrade.\nAnagha K. Kulkarni (2013),\nProfessor in Computer Science\n. Ph.D. Carnegie Mellon University.\nKazunori Okada (2006),\nProfessor in Computer Science\n. Ph.D. University Southern California.\nDragutin Petkovic (2003),\nProfessor in Computer Science\n. Ph.D. University of California, Irvine.\nArno Puder (2008),\nProfessor in Computer Science\n. Ph.D. University of Frankfurt, Germany.\nHui Yang (2006),\nProfessor in Computer Science\n. Ph.D. Ohio State University.\nIlmi  Yoon (2000),\nProfessor in Computer Science\n. Ph.D. University of Southern California.\nAssistant Professor\nAbeer Aljarrah (2018),\nAssistant Professor in Computer Science\n. Ph.D. University of North Carolina at Charlotte.\nSanika  Doolani (2024),\nAssistant Professor in Computer Science\n. Ph.D. University of Texas at Arlington.\nSara El Alaoui (2024),\nAssistant Professor in Computer Science\n. Ph.D. University of Nebraska-Lincoln.\nDaniel E. Huang (2021),\nAssistant Professor in Computer Science\n. Ph.D. Harvard University.\nShahrukh Humayoun (2019),\nAssistant Professor in Computer Science\n. Ph.D. Sapienza University of Rome.\nTimothy Sun (2020),\nAssistant Professor in Computer Science\n. Ph.D. Columbia University.\nJingyi Wang (2019),\nAssistant Professor in Computer Science\n. Ph.D. University of Houston.\nLecturers\nBhaskar, Erwin, Esselmann, Gibson, Hasan, Jones, Kalinin, Kang, Kriese, Mehta, Mogos, Ortiz-Costa, Parra, Phyo, Pico, Pinera, Roberts, Scott, Sikder, Souza, Ta, Tomasevich, Tuttle, Wall\nMajor\nBachelor of Science in Computer Science\nMinor\nMinor in Computer Science\nMinor in Computing Applications\nCertificate\nCertificate in Data Science and Machine Learning for Biotechnology\nMasters\nMaster of Science in Computer Science\nMaster of Science in Data Science and Artificial Intelligence\nCertificates\nGraduate Certificate in Software Engineering\nGraduate Certificate in Ethical Artificial Intelligence\nExplanation of Course Descriptions, Symbols, and Terms\nCSC 101  Introduction to Computing (Units: 3)\nA comprehensive introduction to computing and programming. No prior programming experience is required. Explore the use of computing in everyday life and its impact on our society, and apply foundational ideas of computing to frame a problem and devise a solution using Java programming language.\nCSC 110  Computational Thinking and Quantitative Reasoning (Units: 3)\nPrerequisites: Category I or II placement for QR/Math, or satisfactory completion of ELM requirement, or MATH 70 or ESM 70 with a grade of C or better. Students with Category III or IV placement for QR/Math or students who have not passed MATH 70 or ESM 70 with a C or better must concurrently enroll in\nMATH 111\n.\nBasic building blocks of programming and computational thinking practices including analyzing the effects of computation, creating computational artifacts, using abstractions and models, analyzing problems and artifacts, communicating processes and results, and working effectively in teams. Mathematical models and information retrieval from real-world datasets will be used as vehicles to practice programming and computation thinking.\n(Note: For this course to satisfy General Education, students must earn a grade of C- or CR or higher.)\nCourse Attributes:\n2: MATH/Quantitative Reason\nB4: Math/QR\nCSC 215  Intermediate Computer Programming (Units: 4)\nPrerequisite:\nCSC 101\nwith a grade of C or better.\nDesign, implementation, testing, debugging, maintenance, and documentation of Java programs. Algorithms, programming concepts, and data types in Java. Concepts of object-oriented programming. Numerical and non-numerical problems. Hands-on exercises in programming, and the use of basic software development tools.\nCSC 220  Data Structures (Units: 3)\nPrerequisite: CSC 210 or\nCSC 215\nwith a grade of C or better.\nLinear and non-linear data structures in Java, including lists, stacks, queues, trees, tables, and graphs. Recursion, iteration over collections, Big O notation, and hash tables.\nCSC 221  Data Structure Lab (Unit: 1)\nPrerequisites: CSC 210 or\nCSC 215\n; concurrent enrollment in\nCSC 220\n.\nTraining on the principles of object-oriented programming, data structures (such as stacks, queues, lists, trees, sets, HashMaps, etc.), implementation, and usage in solving real-life problems, recursion, and algorithm analysis. Activity. (CR/NC grading only)\nCSC 230  Discrete Mathematical Structures for Computer Science (Units: 3)\nPrerequisites: CSC 210 or\nCSC 215\n, and\nMATH 227\n(may be taken concurrently) with grades of C or better.\nReview of set algebra, relations and functions, permutations, propositional logic, proof techniques, introduction to graph theory, and infinite sets, and their applications to computer science.\nCSC 256  Machine Structures (Units: 3)\nPrerequisite:\nCSC 230\nwith a grade of C or better.\nDigital logic circuits, data representation, assembly language programming, subroutine linkage, machine language encoding, interrupt and exception handling, memory system concepts, and CPU organization and performance.\nCSC 300GW  Ethics, Communication, and Tools for Software Development - GWAR (Units: 3)\nPrerequisites: Restricted to upper-division Computer Science majors and minors; GE Area 1A/A2; CSC 210 or\nCSC 215\n.\nPrivacy, security, legal, and ethical issues in Software development. Communication relevant to SW development (e.g., reports, contracts, requirements, documentation, collaboration, e-mail, presentations). Study and use of basic tools for SW development and collaboration. (ABC/NC grading only)\nCourse Attributes:\nGraduation Writing Assessment\nCSC 306  An Interdisciplinary Approach to Computer Programming (Units: 3)\nPrerequisites: Restricted to Biology, Chemistry, and Biochemistry majors and Certificate in Data Science and Machine Learning for Biotechnology Professionals students; upper-division standing; or permission of the instructor.\nBasics of programming for interdisciplinary problem-solving, using Python.Topics include basic building blocks of programming (variables, control statements, loops, function, abstraction, and more) and problem-solving approaches relevant to problems in the natural sciences.\nCSC 307  An Interdisciplinary Approach to Web Programming (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nBasics of WWW engineering relevant to studies in interdisciplinary problem-solving. Topics include the basics of developing web and database applications, HTML, PHP, Python, SQL, and MySQL database.\nCSC 309  Computer Programming (Units: 3)\nPrerequisite:\nMATH 226\nor permission of the instructor.\nProcedural programming for scientific applications.  Good programming practices and basic numerical and nonnumerical algorithms for scientists and engineers.\nCSC 310  Computer Programming Lab (Unit: 1)\nPrerequisite: Concurrent enrollment in\nCSC 309\nis recommended.\nExercises in Python programming and use of basic software development tools.\nCSC 311  Data Structures for Data Science Application Development (Units: 3)\nPrerequisite:\nCSC 306\n* or equivalent.\nFocuses on learning about and utilizing data structures and algorithms effectively for developing data science applications. Utilizes Python and Jupyter Notebook. [Formerly CSC 219]\nCSC 317  Introduction to Web Software Development (Units: 3)\nPrerequisite:\nCSC 220\nor permission of the instructor.\nIntroduction to topics in UNIX and creating web pages including reading and processing user input submitted through web pages, client side and server side programming, connecting a web page to a database, and building an e-commerce site or Internet Application.\nCSC 340  Programming Methodology (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\nwith grades of C or better.\nAdvanced data structures and algorithms for manipulation in C++ with an emphasis on design and implementation, practical applications, and algorithms for sorting, searching, and graphs.\nCSC 408  Machine Learning and Data Science for Personalized Medicine (Units: 3)\nPrerequisite:\nCSC 220\n* or\nCSC 311\n* or equivalent; a college-level biology course; or permission of the instructor.\nExploration of the concepts and tools needed to analyze, interpret, and reason from genomic datasets to help medical professionals better treat their patients. Diseases often affect patients differently depending on their genetic background. To make personalized medicine a reality, it is necessary to leverage the data from genomic datasets. Genomic data science applies machine learning and data science to the genome to better diagnose and treat patients. [Formerly CSC 508]\nCSC 411  Intermediate Machine Learning for Interdisciplinary Data Scientists (Units: 3)\nPrerequisite:\nCSC 220\nor\nCSC 311\nor equivalent; a college-level biology course; or permission of the instructor.\nIntermediate machine learning concepts and tools. Focus on application development, linear model, deep neural network and transfer learning using Python, Tensorflow, and Keras. [Formerly CSC 308]\nCSC 412  Advanced Software Lab (Unit: 1)\nPrerequisites:\nCSC 220\n; concurrent enrollment in\nCSC 340\nrecommended.\nHands-on exercises in advanced programming, software development tools, and web technologies. Students are encouraged to bring their laptops. Activity. May be repeated for a total of 2 units. (Plus-minus letter grade only)\nCSC 413  Software Development (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 317\nwith grades of C or better.\nModern software applications. Object-oriented techniques: encapsulation, inheritance, and polymorphism as a mechanism for data design and problem solution. Software design, debugging, testing, and UI design. Software maintenance. Software development tools. Extra fee required. (Plus-minus letter grade only)\nCSC 415  Operating System Principles (Units: 3)\nPrerequisites:\nCSC 256\n,\nCSC 340\n*,\nMATH 324\n, and\nPHYS 230\nwith grades of C or better or graduate standing*.\nOperating system concepts: concurrent processes, basic synchronization techniques, deadlock, memory management, file systems, security, networks, and distributed processing. Extra fee required.\nCSC 509  Data Science and Machine Learning for Medical Image Analysis (Units: 3)\nPrerequisite:\nCSC 411\n(may be taken concurrently).\nExploration of the application of state-of-the-art deep learning models to medical image analysis: the task of identifying objects such as tissue, bone within an image. Discussion of topics central to deep learning-based image analysis, and practical application of these concepts in three hands-on case studies.\nCSC 510  Analysis of Algorithms I (Units: 3)\nPrerequisites:\nCSC 340\n* and\nMATH 324\n* with grades of C or better.\nNotions of main algorithm design methods. Measures of algorithm complexity in space and time. Algorithms of classic problems including sorting and scheduling and complexity analysis of such algorithms. (Plus/minus ABC/NC, CR/NC allowed)\nCSC 520  Theory of Computing (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\n;\nMATH 225\nor\nMATH 325\nwith grades of C or better.\nExamination of automata, formal languages, and the notion of computability. Discussion of sequential machines as language acceptors and context-free and context-sensitive grammars. Exploration of recursive functions, universal Turing machines, and unsolvable problems.\nCSC 600  Programming Paradigms and Languages (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 510\n* with grades of C or better or graduate-level standing*.\nConcepts for high-level programming languages. Procedural, logic, functional, and object-oriented programming paradigms. Comparative study of several languages and an introduction to grammars and parsing techniques. Extra fee required.\nCSC 601  Data Science and Machine Learning for Biotechnology Seminar Series (Unit: 1)\nPrerequisite:\nCSC 408\n* or\nCSC 411\n* or\nCSC 509\n*.\nFeaturing scientists in related areas from Genentech or other biotechnology industry or academia, explore a broad view of the topics on Drug design, modeling to predict drug performance, or new drug approval processes. (CR/NC grading only)\nCSC 602  Interview Preparation for Data Science and Machine Learning for Biotechnology Opportunities (Units: 2)\nPrerequisite:\nCSC 408\nor\nCSC 411\nor\nCSC 509\n.\nPreparation for interviews for data science-related internships and full-time positions in industry. Emphasis on oral and written communication common in coding interviews for problem-solving. Development of interview skills such as how to communicate about technical aspects, describe a problem, and articulate issues. Practice of key problem-solving strategies specific to technical/coding interviews in Biotechnology. (CR/NC grading only)\nCSC 615  Embedded Linux Systems and Physical Computing (Units: 3)\nPrerequisite:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nExploration of embedded Linux programming in C, threads and synchronization, resource limits, working with sensors and motors, programming various communication protocols, and building a physical computing device. Extra fee required. (Plus-minus letter grade only)\nCSC 620  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 621  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 630  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students.\nPrerequisites for\nCSC 630\n:\nCSC 413\n* and either\nMATH 225\n* or\nMATH 325\n* with grades of C or better; a GPA of 3.0 or better; or permission of the instructor.\nGraphics system design and GPU pipeline architecture and Generative AI on graphics. Overview of device-independent graphic systems such as OpenGL, 2- & 3-dimensional viewing pipelines, hidden line and surface removal algorithms, raster graphics techniques, and color space models. Topics on generative AI for graphics such as StyleGAN are covered. Course fee required. (Plus-minus letter grade only)\n(\nCSC 830\n/\nCSC 630\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCourse Attributes:\nCSC 630\n/830\nCSC 631  Multiplayer Game Development (Units: 3)\nPrerequisite for\nCSC 831\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 631\n: Upper-division standing;\nCSC 413\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer graphics and network characteristics of multiplayer games.  Design and development of a game as a team project.\n(\nCSC 831\n/\nCSC 631\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 641  Computer Performance Evaluation (Units: 3)\nPrerequisite for\nCSC 841\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 641\n: Upper-division standing;\nCSC 415\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer performance analysis problems related to system design, selection, and tuning. Modeling using stochastic and operational queuing models. Workload characterization, design, and performance measurement methods. Design of simulation models for computer systems.  Extra fee required. (Plus-minus letter grade only)\n(\nCSC 841\n/\nCSC 641\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 642  Human-Computer Interaction (Units: 3)\nPrerequisite for\nCSC 842\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisite for\nCSC 642\n: Upper-division standing;\nCSC 413\n* with a grade of C or better or permission of the instructor.\nThe design, implementation, and evaluation of human-computer interfaces. Topics include interface devices, interface metaphors, interaction styles, user-centered design, testing, and quality assessment. Extra fee required.\n(\nCSC 842\n/\nCSC 642\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 645  Computer Networks (Units: 3)\nPrerequisites: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nComputer network design, evaluation, and testing. Computer network standards and implementation. Hardware and software design and compatibility issues. Extra fee required.\nCSC 647  Introduction to Quantum Computing and Quantum Information Science (Units: 3)\nPrerequisite for\nCSC 747\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 647\n: Upper-division standing;\nCSC 415\n* and either\nMATH 225\n* or\nMATH 325\n* with a grade of C or better; CSC 308,\nCSC 309\n, and\nCSC 656\nrecommended; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to quantum computing and quantum information science. Comparison of classical and quantum computing architectures and organization. Quantum algorithm design and implementation on circuit-based and annealing quantum platforms. Program execution and performance analysis on quantum platform simulators and actual quantum hardware, subject to availability. Survey of research topics in quantum computing ranging from algorithms (e.g., Grover's Search) and their application to problems in quantum cryptography, quantum machine learning, and hybrid classical/quantum algorithms.\n(\nCSC 647\n/\nCSC 747\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 648  Software Engineering (Units: 3)\nPrerequisites for\nCSC 848\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 648\n: Upper-division standing;\nCSC 317\n* and\nCSC 413\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nPractical methods and tools for SW engineering including organizational teamwork.\n(\nCSC 848\n/\nCSC 648\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 651  System Administration (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 415\n* with grades of C or better.\nUser administration. Operating system installation, tuning, and control. Network administration. Security management. Performance tuning and management. Extra fee required. (ABC/NC grading only)\nCSC 652  Introduction to Security and Data Privacy (Units: 3)\nPrerequisite for\nCSC 852\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 652\n:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nIntroduction to fundamental concepts in cybersecurity, cryptography, and data privacy. Practice different privacy mechanisms in databases and present applications to a wide range of data analysis tasks. Extra fee required.\n(\nCSC 852\n/\nCSC 652\n[formerly CSC 650] is a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 653  Network Security (Units: 3)\nPrerequisite for\nCSC 853\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 653\n: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nIntroduction to the fundamental concepts of computer network security as well as standard security mechanisms and protocols.\n(\nCSC 853\n/\nCSC 653\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 656  Computer Organization (Units: 3)\nPrerequisite:\nCSC 415\n* (may be taken concurrently) or permission of the instructor.\nInstruction set design. Pipelined datapath and control. Cache and memory system design. Input and output subsystems. Parallel processing. Software and hardware interactions. Extra fee required.\nCSC 657  Bioinformatics Computing (Units: 3)\nPrerequisite: Upper-division or graduate standing in a science program or permission of the instructor.\nA broad range of topics in computational biology as practiced in the life science industry and leading research organizations. Provides computational background required to participate in R&D. Extra fee required.\n(\nCSC 857\n/\nCSC 657\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 659  AI Explainability and Ethics (Units: 3)\nPrerequisites for\nCSC 659\n: Restricted to upper-division students;\nCSC 413\nwith C or better; GPA of 3.0 or better; or permission of the instructor.\nPrerequisite for\nCSC 859\n: Graduate standing  or permission of the instructor.\nOverview of AI and GenAI technologies, their usage (including prompt engineering), and methods for their accuracy evaluations and optimization. Analysis of AI/GenAI limitations like hallucinations, bias, and errors. Overview of AI/GenAI explainability. Definitions, best practices and tools for auditing AI/GenAI for ethics and trustworthiness. Implementation of full AI pipeline and trustworthiness audit of selected AI application. (Plus-minus letter grade RP only)\n(\nCSC 859\n/\nCSC 659\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 664  Multimedia Systems (Units: 3)\nPrerequisite for\nCSC 864\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 664\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nComprehensive topics in multimedia such as basics of image and video processing, compression, multimedia databases, standard, synchronization, formats in the perspective of systems, and algorithms. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 864\n/\nCSC 664\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 665  Artificial Intelligence (Units: 3)\nPrerequisite for\nCSC 865\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 665\n: Restricted to upper-division standing or\nCSC 413\n* with a grade of C or better or permission of the instructor.\nOverview of algorithms and approaches to artificial intelligence. Study of fundamental concepts needed to attain human-level intelligence in computer systems, and gain experience in working with these concepts through assignments and programming exercises. Topics include problem-solving methods, heuristic search, game playing, agent architectures, machine learning, and various topics selected from knowledge representation, symbolic reasoning, computational models of virtual humans, neural networks, and genetic algorithms. Extra fee required.\n(\nCSC 665\n/\nCSC 865\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 667  Internet Application Design and Development (Units: 3)\nPrerequisite for\nCSC 867\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 667\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nFundamental technologies on which the World Wide Web is based. Extra fee required.\n(\nCSC 867\n/\nCSC 667\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 668  Advanced Object Oriented Software Design and Development (Units: 3)\nPrerequisite for\nCSC 868\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 668\n: Senior standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nObject-oriented analysis and design utilizing UML, design patterns, frameworks, and toolkits. Agile software design processes. Development of a mid-size programming project working in teams. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 868\n/\nCSC 668\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 671  Deep Learning (Units: 3)\nPrerequisite for\nCSC 871\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 671\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\nor\nMATH 325\nwith a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nExploration of the major technology trends that drive Deep Learning. Discussion of concepts and technologies to build, train, and apply fully connected deep neural networks. Focus on understanding the key parameters in a neural network's architecture and learning how Deep Learning actually works. (Plus-minus letter grade only)\n(\nCSC 871\n/\nCSC 671\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 675  Introduction to Database Systems (Units: 3)\nPrerequisite for\nCSC 775\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 675\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nRelational query languages. Semantic data models. Logical and physical database design. Privacy issues. Implementation techniques (catalogs, query optimization, concurrency control, security, and integrity enforcement). Extra fee required.\n(\nCSC 775\n/\nCSC 675\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 676  Soft Computing and Decision Support Systems (Units: 3)\nPrerequisite for\nCSC 876\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 676\n: Upper-division standing; GPA of 3.0 or better; or permission of the instructor.\nDevelopment of software systems for decision support including applications of soft computing. Topics include fuzzy sets, fuzzy logic, fuzzy systems, fuzzy decision-making, fuzzy controllers, approximate reasoning, possibility theory, rough sets, graded evaluation logic, logic aggregation operators, information fusion models, decision engineering methods, computing with words, perceptual computing, granular computing, and the LSP method for evaluation and optimization of complex systems. (Plus-minus letter grade only)\n(\nCSC 876\n/\nCSC 676\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 680  Application Development for Mobile Devices (Units: 3)\nPrerequisite for\nCSC 780\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 680\n: Restricted to senior Computer Science majors;\nCSC 415\n* with a grade of C or better; 3.0 GPA or higher; or permission of the instructor.\nIntroduction to, and comparison of, different popular mobile application frameworks. Conceptual and hands-on experience in writing mobile applications using native and cross-platform tools. (Plus-minus letter grade only)\n(\nCSC 780\n/\nCSC 680\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 685  Instructional Methods in Computer Science Teaching (Unit: 1)\nPrerequisite:\nCSC 215\nwith a grade of C or better.\nResearch-based pedagogical strategies and principles of teaching and learning in STEM. Seminar for students in their first Learning Assistant (LA) position or other interest in STEM teaching and learning.\nCSC 686  Experiences in Computer Science Teaching (Unit: 1)\nPrerequisite:\nCSC 215\nwith a grade of C or better.\nActivity practicum for students who are Learning Assistants (LAs) in STEM courses. Under the supervision of a STEM course instructor, LAs participate in an active, inclusive learning community in a section of a STEM course. LAs meet with the course instructor to review upcoming activities. May be repeated for a total of 2 units.\nCSC 688  AI Entrepreneurship (Units: 3)\nPrerequisite:\nCSC 317\nor equivalent.\nExploration of practical methods and tools for AI entrepreneurship. Knowledge and skills to integrate artificial intelligence into business ventures. Basics of AI technologies, market research, product-market fit development.\nCSC 690  Interactive Multimedia Application Development (Units: 3)\nPrerequisite:\nCSC 340\n* with a grade of C or better or permission of the instructor.\nBasics of multimedia data formats and algorithms to build applications using non-standard interfaces such as game controllers and multi-touch surfaces. (Plus-minus letter grade only)\nCSC 694  Cooperative Education: Computer Science (Units: 1-3)\nPrerequisite: Permission of the instructor.\nProjects in a business, government, or industrial position of at least one semester's duration. May be repeated for a total of 3 units. (This course is not eligible for certification for enrollment with the VA.)\nCSC 697  Senior Project in Computer Science (Units: 3)\nPrerequisites:\nCSC 415\nand\nCSC 510\n, or\nCSC 648\n; or permission of the instructor.\nCulminating experience in individual design, implementation, and professional documentation of a software product under the close supervision of a faculty member. (Plus-minus letter grade only)\nCSC 698  Topics in Computing (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nCurrent topics in computer hardware and software technologies. Topics to be specified in the Class Schedule. May be repeated for a total of 9 units when topics vary.\nTopics:\nInteractive Multimedia Development\nAugmented Reality Software Systems\nResearch Topics in Computing Applications\nAdvanced Topics in Computing Applications\nApplications of Parallel Computations\nReal-Time Cross-Platform Application Development\nPrinciples of Information Security and Privacy\nSoftware Design, Development, and Pedagogy\nInformation Visualization: Tools and Techniques\nGenerative AI\nCSC 699  Independent Study (Units: 1-3)\nPrerequisites: Permission of the department and instructor. An approved study proposal must be on file by the time of registration.\nLibrary and laboratory research and development projects. A final report must be approved by the instructor and filed with the department. May be repeated for a total of 9 units. (Plus-minus letter grade only)\nCSC 720  Advanced Operating Systems (Units: 3)\nPrerequisite: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nAnalysis of scheduling and memory management algorithms and the use of concurrent languages for systems development and distributed systems. Design and implementation of major components of an operating system. Extra fee required.\nCSC 746  High-Performance Computing (Units: 3)\nPrerequisite: Restricted graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrinciples and current practices in high-performance computing. Basics of multiprocessor systems such as clusters and graphics processors. Message-passing and shared memory-based software development. Cloud computing.\nCSC 747  Introduction to Quantum Computing and Quantum Information Science (Units: 3)\nPrerequisite for\nCSC 747\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 647\n: Upper-division standing;\nCSC 415\n* and either\nMATH 225\n* or\nMATH 325\n* with a grade of C or better; CSC 308,\nCSC 309\n, and\nCSC 656\nrecommended; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to quantum computing and quantum information science. Comparison of classical and quantum computing architectures and organization. Quantum algorithm design and implementation on circuit-based and annealing quantum platforms. Program execution and performance analysis on quantum platform simulators and actual quantum hardware, subject to availability. Survey of research topics in quantum computing ranging from algorithms (e.g., Grover's Search) and their application to problems in quantum cryptography, quantum machine learning, and hybrid classical/quantum algorithms.\n(\nCSC 647\n/\nCSC 747\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 775  Introduction to Database Systems (Units: 3)\nPrerequisite for\nCSC 775\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 675\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nRelational query languages. Semantic data models. Logical and physical database design. Privacy issues. Implementation techniques (catalogs, query optimization, concurrency control, security, and integrity enforcement). Extra fee required.\n(\nCSC 775\n/\nCSC 675\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 780  Application Development for Mobile Devices (Units: 3)\nPrerequisite for\nCSC 780\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 680\n: Restricted to senior Computer Science majors;\nCSC 415\n* with a grade of C or better; 3.0 GPA or higher; or permission of the instructor.\nIntroduction to, and comparison of, different popular mobile application frameworks. Conceptual and hands-on experience in writing mobile applications using native and cross-platform tools. (Plus-minus letter grade only)\n(\nCSC 780\n/\nCSC 680\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 805  Data Visualization: Concepts, Tools, Techniques, and Paradigms (Units: 3)\nPrerequisites: Restricted to graduate Computer Science students. Senior undergraduate Computer Science majors may enroll with the permission of the instructor.\nConcepts, techniques, algorithms, and technologies for creating effective and efficient visual data representations and visual analytic tools based on principles from computer graphics, HCI, visual art, perceptual psychology, and cognitive science to enhance the understanding and communication of complex and multi-dimensional data. (Plus-minus letter grade only)\nCSC 810  Analysis of Algorithms II (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nReview major design strategies and theory of NP-Completeness. Approximation algorithms. Online Algorithms. Parallel and distributed algorithms. Algorithms for specific areas of interest. Extra fee required.\nCSC 820  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 821  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 825  Advanced Automata Theory (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nAdvanced topics in theoretical computer science and their application to a broad range of areas including bioinformatics, compilers, data and image compression, natural language processing, networking, and web applications. Extra fee required. (Plus-minus letter grade only)\nCSC 830  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students.\nPrerequisites for\nCSC 630\n:\nCSC 413\n* and either\nMATH 225\n* or\nMATH 325\n* with grades of C or better; a GPA of 3.0 or better; or permission of the instructor.\nGraphics system design and GPU pipeline architecture and Generative AI on graphics. Overview of device-independent graphic systems such as OpenGL, 2- & 3-dimensional viewing pipelines, hidden line and surface removal algorithms, raster graphics techniques, and color space models. Topics on generative AI for graphics such as StyleGAN are covered. Course fee required. (Plus-minus letter grade only)\n(\nCSC 830\n/\nCSC 630\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCourse Attributes:\nCSC 630\n/830\nCSC 831  Multiplayer Game Development (Units: 3)\nPrerequisite for\nCSC 831\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 631\n: Upper-division standing;\nCSC 413\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer graphics and network characteristics of multiplayer games.  Design and development of a game as a team project.\n(\nCSC 831\n/\nCSC 631\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 841  Computer Performance Evaluation (Units: 3)\nPrerequisite for\nCSC 841\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 641\n: Upper-division standing;\nCSC 415\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer performance analysis problems related to system design, selection, and tuning. Modeling using stochastic and operational queuing models. Workload characterization, design, and performance measurement methods. Design of simulation models for computer systems.  Extra fee required. (Plus-minus letter grade only)\n(\nCSC 841\n/\nCSC 641\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 842  Human-Computer Interaction (Units: 3)\nPrerequisite for\nCSC 842\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisite for\nCSC 642\n: Upper-division standing;\nCSC 413\n* with a grade of C or better or permission of the instructor.\nThe design, implementation, and evaluation of human-computer interfaces. Topics include interface devices, interface metaphors, interaction styles, user-centered design, testing, and quality assessment. Extra fee required.\n(\nCSC 842\n/\nCSC 642\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 845  Advanced Computer Networks (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nDesign and implementation of networking protocols and technologies in wireless and mobile networks. Introduction to emerging design, algorithms, protocols, and applications in wireless and mobile networks.  Extra fee required.\nCSC 847  Cloud and Distributed Computing: Concepts and Applications (Units: 3)\nPrerequisites: Restricted to senior and graduate Computer Science and Data Science, Artificial Intelligence, or graduate certificate in Software Engineering students; permission of the instructor.\nInfrastructure, platform, and software as a service. Includes enabling techniques behind cloud computing including virtualization, multi-tenancy, and service-oriented architecture. Cloud storage options such as NoSQL databases, emerging technologies such as containers and Kubernetes, parallel and distributed computing platforms including MapReduce and Apache Sparc, and hands-on experience on public clouds such as the Amazon Cloud and Google Cloud. (Plus-minus letter grade only)\nCSC 848  Software Engineering (Units: 3)\nPrerequisites for\nCSC 848\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 648\n: Upper-division standing;\nCSC 317\n* and\nCSC 413\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nPractical methods and tools for SW engineering including organizational teamwork.\n(\nCSC 848\n/\nCSC 648\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 852  Introduction to Security and Data Privacy (Units: 3)\nPrerequisite for\nCSC 852\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 652\n:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nIntroduction to fundamental concepts in cybersecurity, cryptography, and data privacy. Practice different privacy mechanisms in databases and present applications to a wide range of data analysis tasks. Extra fee required.\n(\nCSC 852\n/\nCSC 652\n[formerly CSC 650] is a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 853  Network Security (Units: 3)\nPrerequisite for\nCSC 853\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 653\n: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nIntroduction to the fundamental concepts of computer network security as well as standard security mechanisms and protocols.\n(\nCSC 853\n/\nCSC 653\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 857  Bioinformatics Computing (Units: 3)\nPrerequisite: Upper-division or graduate standing in a science program or permission of the instructor.\nA broad range of topics in computational biology as practiced in the life science industry and leading research organizations. Provides computational background required to participate in R&D. Extra fee required.\n(\nCSC 857\n/\nCSC 657\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 859  AI Explainability and Ethics (Units: 3)\nPrerequisites for\nCSC 659\n: Restricted to upper-division students;\nCSC 413\nwith C or better; GPA of 3.0 or better; or permission of the instructor.\nPrerequisite for\nCSC 859\n: Graduate standing  or permission of the instructor.\nOverview of AI and GenAI technologies, their usage (including prompt engineering), and methods for their accuracy evaluations and optimization. Analysis of AI/GenAI limitations like hallucinations, bias, and errors. Overview of A",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/",
    "category": "Course Catalog",
    "title": "Bachelor of Science in Computer Science | San Francisco State University Bulletin",
    "content": "Bachelor of Science in Computer Science\nStudents intending to enter this program at the freshman level should have completed two years of algebra and one semester of trigonometry in high school. One year each of high school geometry and physics, as well as basic knowledge of computer organization and programming, are very desirable.\nAll lower division courses (course numbers below 300) included among the degree requirements are available at many community colleges in California; students intending to enter the program upon transferring to San Francisco State University from a community college should take as many of those courses there as possible.\nStudents should plan their program of study in the major with the help of a departmental advisor as soon as possible so that the correct sequence of courses is taken and a set of\nfour electives\nis chosen. It is also suggested that students consult with an advisor before selecting courses to meet the General Education requirements. (See program overview for acceptable science electives.)\nSeveral endowed scholarship funds offer\nannual\nawards\nto computer science\nmajors\nwho\nshow\nscholarly accomplishment and\ndemonstrate\nfinancial need. An Entrepreneurship Program and Developers Prize, funded by our alumni, encourage and support innovation and entrepreneurship among students.\nProgram Learning Outcomes\nStudents will be able to design, develop, document, and test software using current techniques.\nStudents will understand the fundamentals of computer architecture and computing theory.\nStudents will be able to solve problems working in group settings.\nStudents will demonstrate the ability to give presentations and write technical reports.\nStudents will demonstrate an understanding of the importance of social and ethical issues related to the profession.\nComputer Science (B.S.)\n74 units\nCR/NC grades are not accepted in courses for the Computer Science major.\nGrades of C or better are required for\nCSC 510\nand\nCSC 648\n.\nMathematics and Physics (22 units)\nCourse List\nCode\nTitle\nUnits\nMATH 225\nIntroduction to Linear Algebra\n3\nMATH 226\nCalculus I\n4\nMATH 227\nCalculus II\n4\nMATH 324\nProbability and Statistics with Computing\n3\nPHYS 220\nGeneral Physics with Calculus I\n3\nPHYS 222\nGeneral Physics with Calculus I Laboratory\n1\nPHYS 230\nGeneral Physics with Calculus II\n3\nPHYS 232\nGeneral Physics with Calculus II Laboratory\n1\nCore Computer Science Requirements (28 units)\nCourse List\nCode\nTitle\nUnits\nCSC 101\nIntroduction to Computing\n3\nCSC 215\nIntermediate Computer Programming\n4\nCSC 220\nData Structures\n3\nCSC 230\nDiscrete Mathematical Structures for Computer Science\n3\nCSC 256\nMachine Structures\n3\nCSC 300GW\nEthics, Communication, and Tools for Software Development - GWAR\n3\nCSC 317\nIntroduction to Web Software Development\n3\nCSC 340\nProgramming Methodology\n3\nCSC 413\nSoftware Development\n3\nAdvanced Computer Science Requirements (9 units)\nCourse List\nCode\nTitle\nUnits\nCSC 415\nOperating System Principles\n3\nCSC 510\nAnalysis of Algorithms I\n3\nCSC 648\nSoftware Engineering\n3\nElectives (15 units)\nAll students must complete five 3-unit senior electives.  At least 12 units must be CSC courses.  In addition to the courses listed below, any 600-level CSC course, with the exception of\nCSC 601\n,\nCSC 602\n,\nCSC 648\n, and\nCSC 694\ncan be used as an elective.  The department also allows one CSC graduate course to be used as a senior elective (700-level or higher, and non-paired excluding\nCSC 895\n,\nCSC 898\n,\nCSC 897\n,\nCSC 899\n).  Exceptions must be approved in advance by a senior advisor.\nCourse List\nCode\nTitle\nUnits\nCSC 520\nTheory of Computing\n3\nCSC 600\nProgramming Paradigms and Languages\n3\nCSC 615\nEmbedded Linux Systems and Physical Computing\n3\nCSC 620\nNatural Language Technologies\n3\nCSC 621\nBiomedical Imaging and Analysis\n3\nCSC 630\nComputer Graphics Systems Design\n3\nCSC 631\nMultiplayer Game Development\n3\nCSC 641\nComputer Performance Evaluation\n3\nCSC 642\nHuman-Computer Interaction\n3\nCSC 645\nComputer Networks\n3\nCSC 647\nIntroduction to Quantum Computing and Quantum Information Science\n3\nCSC 651\nSystem Administration\n3\nCSC 652\nIntroduction to Security and Data Privacy\n3\nCSC 656\nComputer Organization\n3\nCSC 657\nBioinformatics Computing\n3\nCSC 664\nMultimedia Systems\n3\nCSC 665\nArtificial Intelligence\n3\nCSC 667\nInternet Application Design and Development\n3\nCSC 668\nAdvanced Object Oriented Software Design and Development\n3\nCSC 671\nDeep Learning\n3\nCSC 675\nIntroduction to Database Systems\n3\nCSC 676\nSoft Computing and Decision Support Systems\n3\nCSC 680\nApplication Development for Mobile Devices\n3\nCSC 690\nInteractive Multimedia Application Development\n3\nCSC 698\nTopics in Computing\n3\nCSC 699\nIndependent Study\n1-3\nMATH 400\nNumerical Analysis\n3\nMATH 425\nApplied and Computational Linear Algebra\n3\nMATH 448\nIntroduction to Statistical Learning and Data Mining\n3\nGeneral Education Requirements\nGeneral Education Requirements\nRequirement\nCourse Level\nUnits\nArea Designation\nEnglish Composition\nLD\n3\n1A\nCritical Thinking\nLD\n3\n1B\nOral Communication\nLD\n3\n1C\nMathematical Concepts and Quantitative Reasoning\nLD\n3\n2\nArts\nLD\n3\n3A\nHumanities\nLD\n3\n3B\nSocial and Behavioral Sciences\nLD\n6\n4\nPhysical Science\nLD\n3\n5A\nBiological Science\nLD\n3\n5B\nLaboratory\nLD\n1\n5C\nEthnic Studies\nLD or UD\n3\n6\nScience\nor\nMath/Quantitative Reasoning\nUD\n3\n5UD\nor\n2UD\nArts or Humanities\nUD\n3\n3UD\nSocial and Behavioral Sciences\nUD\n3\n4UD\nSF State Studies\nCourses certified as meeting the SF State Studies requirements may be upper or lower division in General Education (GE), a major or minor, or an elective.\nAmerican Ethnic and Racial Minorities\nLD or UD\n3\nAERM\nEnvironmental Sustainability and Climate Action\nLD or UD\n3\nES\nGlobal Perspectives\nLD or UD\n3\nGP\nSocial Justice\nLD or UD\n3\nSJ\nNote: LD = Lower-Division; UD = Upper-Division.\nFirst-Time Student Roadmap (4 Year)\nThe roadmaps presented in this Bulletin are intended as suggested plans of study and do not replace meeting with an advisor. For a more personalized roadmap, please use the\nDegree Planner\ntool found in your\nStudent Center\n.\nStudents should use their\nPathway/Category\nto determine which roadmap to follow. For directions on how to view your Pathway/Category, visit\nhow to find your pathway\n. Questions? Contact\nGator Smart Start.\nFirst-Time Student Roadmap – QR Pathway 1/2\nFirst-Time Student Roadmap – QR Pathway 3/4\nTransfer Student Roadmap (2 Year)\nFor students with an AS-T in\nComputer Science\n.\nCOMP ADT Roadmap\nThis degree program is an approved pathway (“similar” major) for students earning the ADT in Computer Science\nCalifornia legislation SB 1440 (2009) mandated the creation of the Associate Degree for Transfer (ADT) to be awarded by the California Community Colleges. Two types of ADTs are awarded: Associate in Arts for Transfer (AA-T) and Associate in Science for Transfer (AS-T).\nNote: no specific degree is required for admission as an upper-division student. However, the ADT includes specific guarantees related to admission and graduation and is designed to clarify the transfer process and strengthen lower-division preparation for the major.\nAn ADT totals 60 units and in most cases includes completion of all lower-division General Education requirements and at least 18 units in a specific major. (The Biology, Chemistry, and Environmental Science AS-T degrees defer 3 units in lower-division GE area 3 and 3 units in lower-division GE area 4 until after transfer.) Students pursuing an ADT are guaranteed admission to the CSU if minimum eligibility requirements are met, though not necessarily to the CSU campus of primary choice.\nUpon verification that the ADT has been awarded prior to matriculation at SF State, students are guaranteed B.A. or B.S. completion in 60 units if pursuing a “similar” major after transfer. Determinations about “similar” majors at SF State are made by faculty in the discipline.\nDegree completion in 60 units cannot be guaranteed when a student simultaneously pursues an additional major, a minor, certificate, or credential.\nA sample advising roadmap for students who have earned an ADT and continue in a \"similar\" major at SF State is available on the Roadmaps tab on the degree requirements page for the major. The roadmap displays:\nHow many lower-division units required for the major have been completed upon entry based on the award of a specific ADT;\nWhich lower-division requirements are considered complete upon entry based on the award of a specific ADT;\nHow to complete the remaining 60 units for the degree in four semesters.\nStudents who have earned an ADT should seek advising in the major department during the first semester of attendance.\nGeneral Advising Information for Transfer Students\nBefore transfer, complete as many lower-division requirements or electives for this major as possible.\nThe following courses are not required for admission but are required for graduation. Students are strongly encouraged to complete these units before transfer; doing so will provide more flexibility in course selection after transfer.\na course in U.S. History\na course in U.S. & California Government\nFor information about satisfying the requirements described in (1) and (2) above at a California Community College (CCC), please visit\nhttp://www.assist.org\n. Check any geographically accessible CCCs; sometimes, options include more than one college. Use ASSIST to determine:\nWhich courses at a CCC satisfy any lower-division major requirements for this major;\nWhich courses at a CCC satisfy CSU GE, US History, and US & CA Government requirements.\nRemedial courses are not transferable and do not apply to the minimum 60 semester units/90 quarter units required for admission.\nAdditional units for courses that are repeated do not apply to the minimum 60 units required for upper-division transfer (for example, if a course was not passed on the first attempt or was taken to earn a better grade).\nBefore leaving the last California Community College of attendance, obtain a summary of completion of lower-division General Education units (IGETC or CSU GE Breadth). This is often referred to as a GE certification worksheet. SF State does not require delivery of this certification to Admissions, but students should retain this document for verifying degree progress after transfer.\nCredit for Advanced Placement, International Baccalaureate, or College-Level Examination Program courses: AP/IB/CLEP credit is not automatically transferred from the previous institution. Units are transferred only when an official score report is delivered to SF State. Credit is based on the academic year during which exams were taken. Refer to the University Bulletin in effect during the year of AP/IB/CLEP examination(s) for details regarding the award of credit for AP/IB/CLEP.\nStudents pursuing majors in science, technology, engineering, and mathematics (STEM) disciplines often defer 6-9 units of lower-division General Education in Areas C and D until after transfer to focus on preparation courses for the major. This advice does not apply to students pursuing associate degree completion before transfer.\nTransferring From Institutions Other Than CCCs or CSUs\nReview SF State's lower-division General Education requirements. Note that, as described below, the four basic skills courses required for admission meet GE Areas 1A/A2, 1B/A3, 1C/A1, and 2/B4 in the SF State GE pattern. Courses that fulfill the remaining areas of SF State’s lower-division GE pattern are available at most two-year and four-year colleges and universities.\nOf the four required basic skills courses, a course in critical thinking (1B/A3) may not be widely offered outside the CCC and CSU systems. Students should attempt to identify and take an appropriate course no later than the term of application to the CSU. To review more information about the 1B/A3 requirement, please visit\nbulletin.sfsu.edu/undergraduate-education/general-education/lower-division/#AAEL\n.\nWaiting until after transfer to take a single course at SF State that meets both US and CA/local government requirements may be an appropriate option, particularly if transferring from outside of California.",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/ms-computer-science/",
    "category": "Course Catalog",
    "title": "Master of Science in Computer Science | San Francisco State University Bulletin",
    "content": "Master of Science in Computer Science\nProgram Description\nAll students share breadth requirements in the areas of computing foundations, computer systems, and software development. Students focusing on different areas then differ in the choice of courses that provide depth in the chosen area and the work done for the culminating experience. Students are expected to decide on a focus area prior to enrollment in the second semester. Integrated into the curriculum are significant team and project experiences. There are two options for the mandatory culminating experience, the master’s thesis or the applied research project.\nThe grading method CR/NC is allowed only for\nCSC 895\nor\nCSC 898\n. All other courses listed on the Advancement to Candidacy (ATC) form must be a letter grade.\nProgram Learning Outcomes\nStudents will demonstrate a breadth of knowledge in Computer Science, as exemplified in the areas of systems, theory, and software development.\nStudents will demonstrate the ability to conduct a research or applied Computer Science project, requiring writing and presentation skills which exemplify scholarly style in Computer Science.\nElective Requirements\nAll students are required to include elective credits in their program. Electives include:\nAll upper-division or graduate courses offered by the Computer Science Department, including breadth requirement courses and\nCSC 897\nand\nCSC 899\n.\nCSC 893\nmay not count as an elective course.\nCourses from other programs such as biology, engineering, business, or mathematics may be accepted with the approval of the graduate advisor and culminating experience supervisor.\nNote:\nA maximum of 6 units of upper-division courses (numbered below 700) may be applied to the degree with the consent of the course instructor and graduate advisor.\nGraduate Seminar Requirement\nIn addition to curricular requirements, prior to enrolling in\nCSC 895\n/\nCSC 898\n, all graduate students are required to attend the Department Graduate Seminar series during one semester of their studies. These weekly seminars explore current topics in computer science research and assist students with choosing a topic for the culminating experience. Details for meeting this requirement may be found in the\nGraduate Studies Policy section\n.\nPracticum\nThis 1-3 unit option is chosen by students who wish to enhance their master’s degree by completing an industrial practicum. After finding the job in the local industry, the student will submit a research proposal to the department’s supervisor (normally the department chair) that describes the expected work and learning outcome. The department’s supervisor must approve the proposal before the student begins the research. Once approved, the student will enroll in 1 unit of\nCSC 893\n. At the conclusion of the work experience, the student must file a written report outlining the research and work experience. The report is submitted to the department’s supervisor. Students may repeat\nCSC 893\nfor a maximum of 3 units. The total number of units for the degree for students who complete the\nCSC 893\npracticum option will be 33 units. It is recommended that this option be pursued only during the summer.\nNote:\nCSC 893\nallows international students to obtain permission to work off-campus for the duration of the course.\nAdmission to Program\nAdmission to the graduate program in Computer Science is a two-step process that should be completed simultaneously:\nApply to San Francisco State University:\nComplete the on-line CSU Mentor application. Follow all other requirements for admission to the University by accessing\nwww.sfsu.edu/~gradstdy/\n.\nApply to the Department of Computer Science graduate program:\nFull details can be found at\nhttps://cs.sfsu.edu/grads/prospective-graduates\nWe encourage students with four-year degrees other than Computer Science to apply to our program as conditional applicants. Please check the link in Step 2 above for details.\nFinancial Assistance\nGraduate assistantships are occasionally available for qualified master's students. These opportunities include participating in funded research projects, assisting with the management of departmental and university computer laboratories as well as lecturer positions for beginning undergraduate computer science courses. Frequently, there are internship opportunities available for work at local companies. International students should address all questions related to their visa status and eligibility for practical training (off-campus work) to the\nOffice of International Programs\n.\nWritten English Proficiency Requirement\nLevel One\nComputer science students admitted to the M.S. program are required to satisfy English Level One prior to the end of their first year of study at SF State. Level One is satisfied by obtaining either a score of 4 or better on the GRE Analytical Writing Exam or a passing grade in\nSCI 614\n.\nSCI 614\nis strongly recommended for all students who wish to develop their skills in professional writing.\nLevel Two\nThe second level of proficiency in written English must be demonstrated before graduation. At this time, the student must demonstrate writing skills that exemplify scholarly style in computer science. This is demonstrated by the master's thesis or the research project report.\nPolicy on Enrollment While Conducting Directed Research\nPursuant to Policy F89-165 adopted by the Academic Senate in 1989, the Computer Science Department has adopted the policy that all graduate students who are working with a research advisor (above and beyond general advising during office hours) and/or having his/her thesis or project reviewed, must enroll in at least 1 unit of\nCSC 895\n,\nCSC 897\n,\nCSC 898\n, or\nCSC 899\n. Registered students will have priority for departmental computing resources.\nComputer Science (M.S.)\n– 30 units minimum\nCore Requirements (9 units)\nComputing Foundations (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 810\nAnalysis of Algorithms II\n3\nCSC 825\nAdvanced Automata Theory\n3\nComputer Systems (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 720\nAdvanced Operating Systems\n3\nCSC 746\nHigh-Performance Computing\n3\nCSC 845\nAdvanced Computer Networks\n3\nSoftware Development (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 780\nApplication Development for Mobile Devices\n3\nCSC 831\nMultiplayer Game Development\n3\nCSC 848\nSoftware Engineering\n3\nCSC 868\nAdvanced Object Oriented Software Design and Development\n3\nGeneral Requirement (9 units)\nThree 3-unit courses drawn from any 700-800 level Computer Science courses not used to meet a core or elective requirement. 700-800 level courses paired with 600 level courses require an advisor’s approval.\nCSC 899\nmay not count towards this requirement.\nElectives (6 units)\nTwo upper-division/graduate 3-unit electives selected on advisement.\nPracticum Option (0-3 units)\nUp to 3 units of\nCSC 893\nSupervised Industrial Research\non advisement.\nCulminating Experience (6 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 897\nResearch\n3\nCSC 899\nIndependent Study\n3\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 895\nApplied Research Project\n3\nCSC 898\nMaster's Thesis\n3",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/ms-computer-science/"
  },
  {
    "source": "https://bulletin.sfsu.edu/courses/csc/",
    "category": "Course Catalog",
    "title": "Computer Science (CSC) | San Francisco State University Bulletin",
    "content": "Computer Science (CSC)\nExplanation of Course Descriptions, Symbols, and Terms\nCSC 101  Introduction to Computing (Units: 3)\nA comprehensive introduction to computing and programming. No prior programming experience is required. Explore the use of computing in everyday life and its impact on our society, and apply foundational ideas of computing to frame a problem and devise a solution using Java programming language.\nCSC 110  Computational Thinking and Quantitative Reasoning (Units: 3)\nPrerequisites: Category I or II placement for QR/Math, or satisfactory completion of ELM requirement, or MATH 70 or ESM 70 with a grade of C or better. Students with Category III or IV placement for QR/Math or students who have not passed MATH 70 or ESM 70 with a C or better must concurrently enroll in\nMATH 111\n.\nBasic building blocks of programming and computational thinking practices including analyzing the effects of computation, creating computational artifacts, using abstractions and models, analyzing problems and artifacts, communicating processes and results, and working effectively in teams. Mathematical models and information retrieval from real-world datasets will be used as vehicles to practice programming and computation thinking.\n(Note: For this course to satisfy General Education, students must earn a grade of C- or CR or higher.)\nCourse Attributes:\n2: MATH/Quantitative Reason\nB4: Math/QR\nCSC 215  Intermediate Computer Programming (Units: 4)\nPrerequisite:\nCSC 101\nwith a grade of C or better.\nDesign, implementation, testing, debugging, maintenance, and documentation of Java programs. Algorithms, programming concepts, and data types in Java. Concepts of object-oriented programming. Numerical and non-numerical problems. Hands-on exercises in programming, and the use of basic software development tools.\nCSC 220  Data Structures (Units: 3)\nPrerequisite: CSC 210 or\nCSC 215\nwith a grade of C or better.\nLinear and non-linear data structures in Java, including lists, stacks, queues, trees, tables, and graphs. Recursion, iteration over collections, Big O notation, and hash tables.\nCSC 221  Data Structure Lab (Unit: 1)\nPrerequisites: CSC 210 or\nCSC 215\n; concurrent enrollment in\nCSC 220\n.\nTraining on the principles of object-oriented programming, data structures (such as stacks, queues, lists, trees, sets, HashMaps, etc.), implementation, and usage in solving real-life problems, recursion, and algorithm analysis. Activity. (CR/NC grading only)\nCSC 230  Discrete Mathematical Structures for Computer Science (Units: 3)\nPrerequisites: CSC 210 or\nCSC 215\n, and\nMATH 227\n(may be taken concurrently) with grades of C or better.\nReview of set algebra, relations and functions, permutations, propositional logic, proof techniques, introduction to graph theory, and infinite sets, and their applications to computer science.\nCSC 256  Machine Structures (Units: 3)\nPrerequisite:\nCSC 230\nwith a grade of C or better.\nDigital logic circuits, data representation, assembly language programming, subroutine linkage, machine language encoding, interrupt and exception handling, memory system concepts, and CPU organization and performance.\nCSC 300GW  Ethics, Communication, and Tools for Software Development - GWAR (Units: 3)\nPrerequisites: Restricted to upper-division Computer Science majors and minors; GE Area 1A/A2; CSC 210 or\nCSC 215\n.\nPrivacy, security, legal, and ethical issues in Software development. Communication relevant to SW development (e.g., reports, contracts, requirements, documentation, collaboration, e-mail, presentations). Study and use of basic tools for SW development and collaboration. (ABC/NC grading only)\nCourse Attributes:\nGraduation Writing Assessment\nCSC 306  An Interdisciplinary Approach to Computer Programming (Units: 3)\nPrerequisites: Restricted to Biology, Chemistry, and Biochemistry majors and Certificate in Data Science and Machine Learning for Biotechnology Professionals students; upper-division standing; or permission of the instructor.\nBasics of programming for interdisciplinary problem-solving, using Python.Topics include basic building blocks of programming (variables, control statements, loops, function, abstraction, and more) and problem-solving approaches relevant to problems in the natural sciences.\nCSC 307  An Interdisciplinary Approach to Web Programming (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nBasics of WWW engineering relevant to studies in interdisciplinary problem-solving. Topics include the basics of developing web and database applications, HTML, PHP, Python, SQL, and MySQL database.\nCSC 309  Computer Programming (Units: 3)\nPrerequisite:\nMATH 226\nor permission of the instructor.\nProcedural programming for scientific applications.  Good programming practices and basic numerical and nonnumerical algorithms for scientists and engineers.\nCSC 310  Computer Programming Lab (Unit: 1)\nPrerequisite: Concurrent enrollment in\nCSC 309\nis recommended.\nExercises in Python programming and use of basic software development tools.\nCSC 311  Data Structures for Data Science Application Development (Units: 3)\nPrerequisite:\nCSC 306\n* or equivalent.\nFocuses on learning about and utilizing data structures and algorithms effectively for developing data science applications. Utilizes Python and Jupyter Notebook. [Formerly CSC 219]\nCSC 317  Introduction to Web Software Development (Units: 3)\nPrerequisite:\nCSC 220\nor permission of the instructor.\nIntroduction to topics in UNIX and creating web pages including reading and processing user input submitted through web pages, client side and server side programming, connecting a web page to a database, and building an e-commerce site or Internet Application.\nCSC 340  Programming Methodology (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\nwith grades of C or better.\nAdvanced data structures and algorithms for manipulation in C++ with an emphasis on design and implementation, practical applications, and algorithms for sorting, searching, and graphs.\nCSC 408  Machine Learning and Data Science for Personalized Medicine (Units: 3)\nPrerequisite:\nCSC 220\n* or\nCSC 311\n* or equivalent; a college-level biology course; or permission of the instructor.\nExploration of the concepts and tools needed to analyze, interpret, and reason from genomic datasets to help medical professionals better treat their patients. Diseases often affect patients differently depending on their genetic background. To make personalized medicine a reality, it is necessary to leverage the data from genomic datasets. Genomic data science applies machine learning and data science to the genome to better diagnose and treat patients. [Formerly CSC 508]\nCSC 411  Intermediate Machine Learning for Interdisciplinary Data Scientists (Units: 3)\nPrerequisite:\nCSC 220\nor\nCSC 311\nor equivalent; a college-level biology course; or permission of the instructor.\nIntermediate machine learning concepts and tools. Focus on application development, linear model, deep neural network and transfer learning using Python, Tensorflow, and Keras. [Formerly CSC 308]\nCSC 412  Advanced Software Lab (Unit: 1)\nPrerequisites:\nCSC 220\n; concurrent enrollment in\nCSC 340\nrecommended.\nHands-on exercises in advanced programming, software development tools, and web technologies. Students are encouraged to bring their laptops. Activity. May be repeated for a total of 2 units. (Plus-minus letter grade only)\nCSC 413  Software Development (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 317\nwith grades of C or better.\nModern software applications. Object-oriented techniques: encapsulation, inheritance, and polymorphism as a mechanism for data design and problem solution. Software design, debugging, testing, and UI design. Software maintenance. Software development tools. Extra fee required. (Plus-minus letter grade only)\nCSC 415  Operating System Principles (Units: 3)\nPrerequisites:\nCSC 256\n,\nCSC 340\n*,\nMATH 324\n, and\nPHYS 230\nwith grades of C or better or graduate standing*.\nOperating system concepts: concurrent processes, basic synchronization techniques, deadlock, memory management, file systems, security, networks, and distributed processing. Extra fee required.\nCSC 509  Data Science and Machine Learning for Medical Image Analysis (Units: 3)\nPrerequisite:\nCSC 411\n(may be taken concurrently).\nExploration of the application of state-of-the-art deep learning models to medical image analysis: the task of identifying objects such as tissue, bone within an image. Discussion of topics central to deep learning-based image analysis, and practical application of these concepts in three hands-on case studies.\nCSC 510  Analysis of Algorithms I (Units: 3)\nPrerequisites:\nCSC 340\n* and\nMATH 324\n* with grades of C or better.\nNotions of main algorithm design methods. Measures of algorithm complexity in space and time. Algorithms of classic problems including sorting and scheduling and complexity analysis of such algorithms. (Plus/minus ABC/NC, CR/NC allowed)\nCSC 520  Theory of Computing (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\n;\nMATH 225\nor\nMATH 325\nwith grades of C or better.\nExamination of automata, formal languages, and the notion of computability. Discussion of sequential machines as language acceptors and context-free and context-sensitive grammars. Exploration of recursive functions, universal Turing machines, and unsolvable problems.\nCSC 600  Programming Paradigms and Languages (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 510\n* with grades of C or better or graduate-level standing*.\nConcepts for high-level programming languages. Procedural, logic, functional, and object-oriented programming paradigms. Comparative study of several languages and an introduction to grammars and parsing techniques. Extra fee required.\nCSC 601  Data Science and Machine Learning for Biotechnology Seminar Series (Unit: 1)\nPrerequisite:\nCSC 408\n* or\nCSC 411\n* or\nCSC 509\n*.\nFeaturing scientists in related areas from Genentech or other biotechnology industry or academia, explore a broad view of the topics on Drug design, modeling to predict drug performance, or new drug approval processes. (CR/NC grading only)\nCSC 602  Interview Preparation for Data Science and Machine Learning for Biotechnology Opportunities (Units: 2)\nPrerequisite:\nCSC 408\nor\nCSC 411\nor\nCSC 509\n.\nPreparation for interviews for data science-related internships and full-time positions in industry. Emphasis on oral and written communication common in coding interviews for problem-solving. Development of interview skills such as how to communicate about technical aspects, describe a problem, and articulate issues. Practice of key problem-solving strategies specific to technical/coding interviews in Biotechnology. (CR/NC grading only)\nCSC 615  Embedded Linux Systems and Physical Computing (Units: 3)\nPrerequisite:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nExploration of embedded Linux programming in C, threads and synchronization, resource limits, working with sensors and motors, programming various communication protocols, and building a physical computing device. Extra fee required. (Plus-minus letter grade only)\nCSC 620  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 621  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 630  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students.\nPrerequisites for\nCSC 630\n:\nCSC 413\n* and either\nMATH 225\n* or\nMATH 325\n* with grades of C or better; a GPA of 3.0 or better; or permission of the instructor.\nGraphics system design and GPU pipeline architecture and Generative AI on graphics. Overview of device-independent graphic systems such as OpenGL, 2- & 3-dimensional viewing pipelines, hidden line and surface removal algorithms, raster graphics techniques, and color space models. Topics on generative AI for graphics such as StyleGAN are covered. Course fee required. (Plus-minus letter grade only)\n(\nCSC 830\n/\nCSC 630\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCourse Attributes:\nCSC 630\n/830\nCSC 631  Multiplayer Game Development (Units: 3)\nPrerequisite for\nCSC 831\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 631\n: Upper-division standing;\nCSC 413\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer graphics and network characteristics of multiplayer games.  Design and development of a game as a team project.\n(\nCSC 831\n/\nCSC 631\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 641  Computer Performance Evaluation (Units: 3)\nPrerequisite for\nCSC 841\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 641\n: Upper-division standing;\nCSC 415\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer performance analysis problems related to system design, selection, and tuning. Modeling using stochastic and operational queuing models. Workload characterization, design, and performance measurement methods. Design of simulation models for computer systems.  Extra fee required. (Plus-minus letter grade only)\n(\nCSC 841\n/\nCSC 641\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 642  Human-Computer Interaction (Units: 3)\nPrerequisite for\nCSC 842\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisite for\nCSC 642\n: Upper-division standing;\nCSC 413\n* with a grade of C or better or permission of the instructor.\nThe design, implementation, and evaluation of human-computer interfaces. Topics include interface devices, interface metaphors, interaction styles, user-centered design, testing, and quality assessment. Extra fee required.\n(\nCSC 842\n/\nCSC 642\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 645  Computer Networks (Units: 3)\nPrerequisites: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nComputer network design, evaluation, and testing. Computer network standards and implementation. Hardware and software design and compatibility issues. Extra fee required.\nCSC 647  Introduction to Quantum Computing and Quantum Information Science (Units: 3)\nPrerequisite for\nCSC 747\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 647\n: Upper-division standing;\nCSC 415\n* and either\nMATH 225\n* or\nMATH 325\n* with a grade of C or better; CSC 308,\nCSC 309\n, and\nCSC 656\nrecommended; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to quantum computing and quantum information science. Comparison of classical and quantum computing architectures and organization. Quantum algorithm design and implementation on circuit-based and annealing quantum platforms. Program execution and performance analysis on quantum platform simulators and actual quantum hardware, subject to availability. Survey of research topics in quantum computing ranging from algorithms (e.g., Grover's Search) and their application to problems in quantum cryptography, quantum machine learning, and hybrid classical/quantum algorithms.\n(\nCSC 647\n/\nCSC 747\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 648  Software Engineering (Units: 3)\nPrerequisites for\nCSC 848\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 648\n: Upper-division standing;\nCSC 317\n* and\nCSC 413\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nPractical methods and tools for SW engineering including organizational teamwork.\n(\nCSC 848\n/\nCSC 648\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 651  System Administration (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 415\n* with grades of C or better.\nUser administration. Operating system installation, tuning, and control. Network administration. Security management. Performance tuning and management. Extra fee required. (ABC/NC grading only)\nCSC 652  Introduction to Security and Data Privacy (Units: 3)\nPrerequisite for\nCSC 852\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 652\n:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nIntroduction to fundamental concepts in cybersecurity, cryptography, and data privacy. Practice different privacy mechanisms in databases and present applications to a wide range of data analysis tasks. Extra fee required.\n(\nCSC 852\n/\nCSC 652\n[formerly CSC 650] is a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 653  Network Security (Units: 3)\nPrerequisite for\nCSC 853\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 653\n: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nIntroduction to the fundamental concepts of computer network security as well as standard security mechanisms and protocols.\n(\nCSC 853\n/\nCSC 653\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 656  Computer Organization (Units: 3)\nPrerequisite:\nCSC 415\n* (may be taken concurrently) or permission of the instructor.\nInstruction set design. Pipelined datapath and control. Cache and memory system design. Input and output subsystems. Parallel processing. Software and hardware interactions. Extra fee required.\nCSC 657  Bioinformatics Computing (Units: 3)\nPrerequisite: Upper-division or graduate standing in a science program or permission of the instructor.\nA broad range of topics in computational biology as practiced in the life science industry and leading research organizations. Provides computational background required to participate in R&D. Extra fee required.\n(\nCSC 857\n/\nCSC 657\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 659  AI Explainability and Ethics (Units: 3)\nPrerequisites for\nCSC 659\n: Restricted to upper-division students;\nCSC 413\nwith C or better; GPA of 3.0 or better; or permission of the instructor.\nPrerequisite for\nCSC 859\n: Graduate standing  or permission of the instructor.\nOverview of AI and GenAI technologies, their usage (including prompt engineering), and methods for their accuracy evaluations and optimization. Analysis of AI/GenAI limitations like hallucinations, bias, and errors. Overview of AI/GenAI explainability. Definitions, best practices and tools for auditing AI/GenAI for ethics and trustworthiness. Implementation of full AI pipeline and trustworthiness audit of selected AI application. (Plus-minus letter grade RP only)\n(\nCSC 859\n/\nCSC 659\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 664  Multimedia Systems (Units: 3)\nPrerequisite for\nCSC 864\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 664\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nComprehensive topics in multimedia such as basics of image and video processing, compression, multimedia databases, standard, synchronization, formats in the perspective of systems, and algorithms. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 864\n/\nCSC 664\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 665  Artificial Intelligence (Units: 3)\nPrerequisite for\nCSC 865\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 665\n: Restricted to upper-division standing or\nCSC 413\n* with a grade of C or better or permission of the instructor.\nOverview of algorithms and approaches to artificial intelligence. Study of fundamental concepts needed to attain human-level intelligence in computer systems, and gain experience in working with these concepts through assignments and programming exercises. Topics include problem-solving methods, heuristic search, game playing, agent architectures, machine learning, and various topics selected from knowledge representation, symbolic reasoning, computational models of virtual humans, neural networks, and genetic algorithms. Extra fee required.\n(\nCSC 665\n/\nCSC 865\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 667  Internet Application Design and Development (Units: 3)\nPrerequisite for\nCSC 867\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 667\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nFundamental technologies on which the World Wide Web is based. Extra fee required.\n(\nCSC 867\n/\nCSC 667\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 668  Advanced Object Oriented Software Design and Development (Units: 3)\nPrerequisite for\nCSC 868\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 668\n: Senior standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nObject-oriented analysis and design utilizing UML, design patterns, frameworks, and toolkits. Agile software design processes. Development of a mid-size programming project working in teams. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 868\n/\nCSC 668\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 671  Deep Learning (Units: 3)\nPrerequisite for\nCSC 871\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 671\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\nor\nMATH 325\nwith a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nExploration of the major technology trends that drive Deep Learning. Discussion of concepts and technologies to build, train, and apply fully connected deep neural networks. Focus on understanding the key parameters in a neural network's architecture and learning how Deep Learning actually works. (Plus-minus letter grade only)\n(\nCSC 871\n/\nCSC 671\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 675  Introduction to Database Systems (Units: 3)\nPrerequisite for\nCSC 775\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 675\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nRelational query languages. Semantic data models. Logical and physical database design. Privacy issues. Implementation techniques (catalogs, query optimization, concurrency control, security, and integrity enforcement). Extra fee required.\n(\nCSC 775\n/\nCSC 675\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 676  Soft Computing and Decision Support Systems (Units: 3)\nPrerequisite for\nCSC 876\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 676\n: Upper-division standing; GPA of 3.0 or better; or permission of the instructor.\nDevelopment of software systems for decision support including applications of soft computing. Topics include fuzzy sets, fuzzy logic, fuzzy systems, fuzzy decision-making, fuzzy controllers, approximate reasoning, possibility theory, rough sets, graded evaluation logic, logic aggregation operators, information fusion models, decision engineering methods, computing with words, perceptual computing, granular computing, and the LSP method for evaluation and optimization of complex systems. (Plus-minus letter grade only)\n(\nCSC 876\n/\nCSC 676\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 680  Application Development for Mobile Devices (Units: 3)\nPrerequisite for\nCSC 780\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 680\n: Restricted to senior Computer Science majors;\nCSC 415\n* with a grade of C or better; 3.0 GPA or higher; or permission of the instructor.\nIntroduction to, and comparison of, different popular mobile application frameworks. Conceptual and hands-on experience in writing mobile applications using native and cross-platform tools. (Plus-minus letter grade only)\n(\nCSC 780\n/\nCSC 680\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 685  Instructional Methods in Computer Science Teaching (Unit: 1)\nPrerequisite:\nCSC 215\nwith a grade of C or better.\nResearch-based pedagogical strategies and principles of teaching and learning in STEM. Seminar for students in their first Learning Assistant (LA) position or other interest in STEM teaching and learning.\nCSC 686  Experiences in Computer Science Teaching (Unit: 1)\nPrerequisite:\nCSC 215\nwith a grade of C or better.\nActivity practicum for students who are Learning Assistants (LAs) in STEM courses. Under the supervision of a STEM course instructor, LAs participate in an active, inclusive learning community in a section of a STEM course. LAs meet with the course instructor to review upcoming activities. May be repeated for a total of 2 units.\nCSC 688  AI Entrepreneurship (Units: 3)\nPrerequisite:\nCSC 317\nor equivalent.\nExploration of practical methods and tools for AI entrepreneurship. Knowledge and skills to integrate artificial intelligence into business ventures. Basics of AI technologies, market research, product-market fit development.\nCSC 690  Interactive Multimedia Application Development (Units: 3)\nPrerequisite:\nCSC 340\n* with a grade of C or better or permission of the instructor.\nBasics of multimedia data formats and algorithms to build applications using non-standard interfaces such as game controllers and multi-touch surfaces. (Plus-minus letter grade only)\nCSC 694  Cooperative Education: Computer Science (Units: 1-3)\nPrerequisite: Permission of the instructor.\nProjects in a business, government, or industrial position of at least one semester's duration. May be repeated for a total of 3 units. (This course is not eligible for certification for enrollment with the VA.)\nCSC 697  Senior Project in Computer Science (Units: 3)\nPrerequisites:\nCSC 415\nand\nCSC 510\n, or\nCSC 648\n; or permission of the instructor.\nCulminating experience in individual design, implementation, and professional documentation of a software product under the close supervision of a faculty member. (Plus-minus letter grade only)\nCSC 698  Topics in Computing (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nCurrent topics in computer hardware and software technologies. Topics to be specified in the Class Schedule. May be repeated for a total of 9 units when topics vary.\nTopics:\nInteractive Multimedia Development\nAugmented Reality Software Systems\nResearch Topics in Computing Applications\nAdvanced Topics in Computing Applications\nApplications of Parallel Computations\nReal-Time Cross-Platform Application Development\nPrinciples of Information Security and Privacy\nSoftware Design, Development, and Pedagogy\nInformation Visualization: Tools and Techniques\nGenerative AI\nCSC 699  Independent Study (Units: 1-3)\nPrerequisites: Permission of the department and instructor. An approved study proposal must be on file by the time of registration.\nLibrary and laboratory research and development projects. A final report must be approved by the instructor and filed with the department. May be repeated for a total of 9 units. (Plus-minus letter grade only)\nCSC 720  Advanced Operating Systems (Units: 3)\nPrerequisite: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nAnalysis of scheduling and memory management algorithms and the use of concurrent languages for systems development and distributed systems. Design and implementation of major components of an operating system. Extra fee required.\nCSC 746  High-Performance Computing (Units: 3)\nPrerequisite: Restricted graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrinciples and current practices in high-performance computing. Basics of multiprocessor systems such as clusters and graphics processors. Message-passing and shared memory-based software development. Cloud computing.\nCSC 747  Introduction to Quantum Computing and Quantum Information Science (Units: 3)\nPrerequisite for\nCSC 747\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 647\n: Upper-division standing;\nCSC 415\n* and either\nMATH 225\n* or\nMATH 325\n* with a grade of C or better; CSC 308,\nCSC 309\n, and\nCSC 656\nrecommended; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to quantum computing and quantum information science. Comparison of classical and quantum computing architectures and organization. Quantum algorithm design and implementation on circuit-based and annealing quantum platforms. Program execution and performance analysis on quantum platform simulators and actual quantum hardware, subject to availability. Survey of research topics in quantum computing ranging from algorithms (e.g., Grover's Search) and their application to problems in quantum cryptography, quantum machine learning, and hybrid classical/quantum algorithms.\n(\nCSC 647\n/\nCSC 747\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 775  Introduction to Database Systems (Units: 3)\nPrerequisite for\nCSC 775\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 675\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nRelational query languages. Semantic data models. Logical and physical database design. Privacy issues. Implementation techniques (catalogs, query optimization, concurrency control, security, and integrity enforcement). Extra fee required.\n(\nCSC 775\n/\nCSC 675\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 780  Application Development for Mobile Devices (Units: 3)\nPrerequisite for\nCSC 780\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 680\n: Restricted to senior Computer Science majors;\nCSC 415\n* with a grade of C or better; 3.0 GPA or higher; or permission of the instructor.\nIntroduction to, and comparison of, different popular mobile application frameworks. Conceptual and hands-on experience in writing mobile applications using native and cross-platform tools. (Plus-minus letter grade only)\n(\nCSC 780\n/\nCSC 680\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 805  Data Visualization: Concepts, Tools, Techniques, and Paradigms (Units: 3)\nPrerequisites: Restricted to graduate Computer Science students. Senior undergraduate Computer Science majors may enroll with the permission of the instructor.\nConcepts, techniques, algorithms, and technologies for creating effective and efficient visual data representations and visual analytic tools based on principles from computer graphics, HCI, visual art, perceptual psychology, and cognitive science to enhance the understanding and communication of complex and multi-dimensional data. (Plus-minus letter grade only)\nCSC 810  Analysis of Algorithms II (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nReview major design strategies and theory of NP-Completeness. Approximation algorithms. Online Algorithms. Parallel and distributed algorithms. Algorithms for specific areas of interest. Extra fee required.\nCSC 820  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 821  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 825  Advanced Automata Theory (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nAdvanced topics in theoretical computer science and their application to a broad range of areas including bioinformatics, compilers, data and image compression, natural language processing, networking, and web applications. Extra fee required. (Plus-minus letter grade only)\nCSC 830  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students.\nPrerequisites for\nCSC 630\n:\nCSC 413\n* and either\nMATH 225\n* or\nMATH 325\n* with grades of C or better; a GPA of 3.0 or better; or permission of the instructor.\nGraphics system design and GPU pipeline architecture and Generative AI on graphics. Overview of device-independent graphic systems such as OpenGL, 2- & 3-dimensional viewing pipelines, hidden line and surface removal algorithms, raster graphics techniques, and color space models. Topics on generative AI for graphics such as StyleGAN are covered. Course fee required. (Plus-minus letter grade only)\n(\nCSC 830\n/\nCSC 630\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCourse Attributes:\nCSC 630\n/830\nCSC 831  Multiplayer Game Development (Units: 3)\nPrerequisite for\nCSC 831\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 631\n: Upper-division standing;\nCSC 413\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer graphics and network characteristics of multiplayer games.  Design and development of a game as a team project.\n(\nCSC 831\n/\nCSC 631\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 841  Computer Performance Evaluation (Units: 3)\nPrerequisite for\nCSC 841\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 641\n: Upper-division standing;\nCSC 415\n*; GPA of 3.0 or higher; or permission of the instructor.\nComputer performance analysis problems related to system design, selection, and tuning. Modeling using stochastic and operational queuing models. Workload characterization, design, and performance measurement methods. Design of simulation models for computer systems.  Extra fee required. (Plus-minus letter grade only)\n(\nCSC 841\n/\nCSC 641\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 842  Human-Computer Interaction (Units: 3)\nPrerequisite for\nCSC 842\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisite for\nCSC 642\n: Upper-division standing;\nCSC 413\n* with a grade of C or better or permission of the instructor.\nThe design, implementation, and evaluation of human-computer interfaces. Topics include interface devices, interface metaphors, interaction styles, user-centered design, testing, and quality assessment. Extra fee required.\n(\nCSC 842\n/\nCSC 642\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 845  Advanced Computer Networks (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nDesign and implementation of networking protocols and technologies in wireless and mobile networks. Introduction to emerging design, algorithms, protocols, and applications in wireless and mobile networks.  Extra fee required.\nCSC 847  Cloud and Distributed Computing: Concepts and Applications (Units: 3)\nPrerequisites: Restricted to senior and graduate Computer Science and Data Science, Artificial Intelligence, or graduate certificate in Software Engineering students; permission of the instructor.\nInfrastructure, platform, and software as a service. Includes enabling techniques behind cloud computing including virtualization, multi-tenancy, and service-oriented architecture. Cloud storage options such as NoSQL databases, emerging technologies such as containers and Kubernetes, parallel and distributed computing platforms including MapReduce and Apache Sparc, and hands-on experience on public clouds such as the Amazon Cloud and Google Cloud. (Plus-minus letter grade only)\nCSC 848  Software Engineering (Units: 3)\nPrerequisites for\nCSC 848\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 648\n: Upper-division standing;\nCSC 317\n* and\nCSC 413\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nPractical methods and tools for SW engineering including organizational teamwork.\n(\nCSC 848\n/\nCSC 648\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 852  Introduction to Security and Data Privacy (Units: 3)\nPrerequisite for\nCSC 852\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 652\n:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nIntroduction to fundamental concepts in cybersecurity, cryptography, and data privacy. Practice different privacy mechanisms in databases and present applications to a wide range of data analysis tasks. Extra fee required.\n(\nCSC 852\n/\nCSC 652\n[formerly CSC 650] is a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 853  Network Security (Units: 3)\nPrerequisite for\nCSC 853\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 653\n: Upper-division standing;\nCSC 415\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nIntroduction to the fundamental concepts of computer network security as well as standard security mechanisms and protocols.\n(\nCSC 853\n/\nCSC 653\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 857  Bioinformatics Computing (Units: 3)\nPrerequisite: Upper-division or graduate standing in a science program or permission of the instructor.\nA broad range of topics in computational biology as practiced in the life science industry and leading research organizations. Provides computational background required to participate in R&D. Extra fee required.\n(\nCSC 857\n/\nCSC 657\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 859  AI Explainability and Ethics (Units: 3)\nPrerequisites for\nCSC 659\n: Restricted to upper-division students;\nCSC 413\nwith C or better; GPA of 3.0 or better; or permission of the instructor.\nPrerequisite for\nCSC 859\n: Graduate standing  or permission of the instructor.\nOverview of AI and GenAI technologies, their usage (including prompt engineering), and methods for their accuracy evaluations and optimization. Analysis of AI/GenAI limitations like hallucinations, bias, and errors. Overview of AI/GenAI explainability. Definitions, best practices and tools for auditing AI/GenAI for ethics and trustworthiness. Implementation of full AI pipeline and trustworthiness audit of selected AI application. (Plus-minus letter grade RP only)\n(\nCSC 859\n/\nCSC 659\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 864  Multimedia Systems (Units: 3)\nPrerequisite for\nCSC 864\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 664\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nComprehensive topics in multimedia such as basics of image and video processing, compression, multimedia databases, standard, synchronization, formats in the perspective of systems, and algorithms. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 864\n/\nCSC 664\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 865  Artificial Intelligence (Units: 3)\nPrerequisite for\nCSC 865\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 665\n: Restricted to upper-division standing or\nCSC 413\n* with a grade of C or better or permission of the instructor.\nOverview of algorithms and approaches to artificial intelligence. Study of fundamental concepts needed to attain human-level intelligence in computer systems, and gain experience in working with these concepts through assignments and programming exercises. Topics include problem-solving methods, heuristic search, game playing, agent architectures, machine learning, and various topics selected from knowledge representation, symbolic reasoning, computational models of virtual humans, neural networks, and genetic algorithms. Extra fee required.\n(\nCSC 665\n/\nCSC 865\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 867  Internet Application Design and Development (Units: 3)\nPrerequisite for\nCSC 867\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students, or permission of the instructor.\nPrerequisites for\nCSC 667\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nFundamental technologies on which the World Wide Web is based. Extra fee required.\n(\nCSC 867\n/\nCSC 667\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 868  Advanced Object Oriented Software Design and Development (Units: 3)\nPrerequisite for\nCSC 868\n: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nPrerequisites for\nCSC 668\n: Senior standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or better; or permission of the instructor.\nObject-oriented analysis and design utilizing UML, design patterns, frameworks, and toolkits. Agile software design processes. Development of a mid-size programming project working in teams. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 868\n/\nCSC 668\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 869  Data Mining (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nKnowledge discovery process, basic data mining concepts, key mining algorithms, and data mining in practical domains such as bioinformatics. (Plus-minus letter grade only)\nCSC 871  Deep Learning (Units: 3)\nPrerequisite for\nCSC 871\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 671\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\nor\nMATH 325\nwith a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nExploration of the major technology trends that drive Deep Learning. Discussion of concepts and technologies to build, train, and apply fully connected deep neural networks. Focus on understanding the key parameters in a neural network's architecture and learning how Deep Learning actually works. (Plus-minus letter grade only)\n(\nCSC 871\n/\nCSC 671\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 872  Pattern Analysis and Machine Intelligence (Units: 3)\nPrerequisite: Graduate standing or permission of the instructor.\nFoundation of pattern analysis and machine intelligence. Artificial intelligence: agent, logic, and search. Machine learning: Bayesian classification. Neural network: simulated annealing. Imaging: image segmentation and object recognition. (Plus-minus letter grade only)\nCSC 874  Topics in Big Data Analysis (Units: 3)\nPrerequisite: Restricted to graduate Computer Science or graduate certificate in Software Engineering students or permission of the instructor.\nIntroduction to current topics in data sciences and big data analysis. (Plus-minus letter grade only)\nCSC 876  Soft Computing and Decision Support Systems (Units: 3)\nPrerequisite for\nCSC 876\n: Graduate standing or permission of the instructor.\nPrerequisite for\nCSC 676\n: Upper-division standing; GPA of 3.0 or better; or permission of the instructor.\nDevelopment of software systems for decision support including applications of soft computing. Topics include fuzzy sets, fuzzy logic, fuzzy systems, fuzzy decision-making, fuzzy controllers, approximate reasoning, possibility theory, rough sets, graded evaluation logic, logic aggregation operators, information fusion models, decision engineering methods, computing with words, perceptual computing, granular computing, and the LSP method for evaluation and optimization of complex systems. (Plus-minus letter grade only)\n(\nCSC 876\n/\nCSC 676\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 878  Big Data Platforms and Systems (Units: 3)\nPrerequisite: Restricted to graduate Computer Science students or permission of the instructor.\nExamination of Big Data's main characteristics. Introduction of and experimentation with common platforms and systems of the Big Data ecosystem on premises or in the cloud. Application of Big Data management systems such as NoSQL databases. Utilization of mainstream Big Data platforms such as Apache Hadoop and Apache Spark to address real-world big data problems. (Plus-minus letter grade only)\nCSC 890  Graduate Seminar (Units: 3)\nPrerequisite: Permission of the instructor or graduate advisor.\nExplore a variety of current advanced research trends in Computer Science. Topics to be specified in the Class Schedule. May be repeated for a total of 6 units when topics vary. (Plus-minus letter grade only)\nTopics:\nSelected Topics in Computing for Life Science\nHealth Informatics\nAdvanced Information Security and Privacy\nAdvanced Artificial Intelligence\nData Visualization\nBig Data and Cybersecurity\nSpecial Topics in Technology and Society\nSoftware Engineering and Industry Practices\nQuantum Computing\nTechnical Entrepreneurship\nMachine Learning fo",
    "url": "https://bulletin.sfsu.edu/courses/csc/"
  }
]