[
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/certificate-software-engineering/",
    "category": "bulletin_cs",
    "title": "Graduate Certificate in Software Engineering | San Francisco State University Bulletin",
    "content": "Graduate Certificate in Software Engineering\nFor more information, including advice on how to apply and obtain the certificate, please visit the\ndepartment's website\n.\nAdmissions Requirements and Procedure\nSelection for admission to the program will be based on applicants’ academic background, work experience, and personal recommendations. We have two distinctive admissions procedures: one for matriculated graduate students at SF State and another for area professionals and non-SF State students who have completed a minimum of a Bachelor’s degree from an accredited university or college with a 3.0 GPA or better.\nA continuing SF State graduate student wishing to be admitted to a graduate certificate program at San Francisco State University is expected to follow the University requirements and procedures outlined herein. Such requirements and procedures may include a supplementary application, a defined set of prerequisite courses, a designated GPA, written recommendations, etc., as may be appropriate for the program in question.\nTo start the admission process please compete the form\nCertificate Admissions Application for Continuing SF State Graduate Students\nand sign it with DocuSign application. Student will be then be contacted by graduate office and/or designated advisor.\nFor non-matriculated SF State students, the certificate is available through application to\nCalState Apply\nfor any student applicant who is eligible to take the required courses and has earned a Bachelor’s degree.\nProgram Learning Outcomes\n1. Learn modern software engineering technologies used to develop, test, deploy, and manage software (SW) applications.\n2. Learn best practices of modern software engineering processes and organization including those applicable to global (distributed) organization of SW projects.\n3. Learn to apply modern tools for team-based SW development.\n4. Learn to apply best practices of effective SE teamwork in locally and globally organized projects.\n5. Learn selected advanced SE technologies and topics via elective course offerings.\nGraduate Certificate in Software Engineering - 12 units\nCore Requirements (6 units)\nCourse List\nCode\nTitle\nUnits\nCSC 847\nCloud and Distributed Computing: Concepts and Applications\n3\nCSC 848\nSoftware Engineering\n3\nCore Options (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 780\nApplication Development for Mobile Devices\n3\nCSC 867\nInternet Application Design and Development\n3\nElective (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 720\nAdvanced Operating Systems\n3\nCSC 746\nHigh-Performance Computing\n3\nCSC 841\nComputer Performance Evaluation\n3\nCSC 842\nHuman-Computer Interaction\n3\nCSC 847\nCloud and Distributed Computing: Concepts and Applications\n3\nCSC 868\nAdvanced Object Oriented Software Design and Development\n3\nCSC 874\nTopics in Big Data Analysis\n3\nCSC 899\nIndependent Study\n3",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/certificate-software-engineering/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/",
    "category": "bulletin_cs",
    "title": "Bachelor of Science in Computer Science | San Francisco State University Bulletin",
    "content": "Bachelor of Science in Computer Science\nStudents intending to enter this program at the freshman level should have completed two years of algebra and one semester of trigonometry in high school. One year each of high school geometry and physics, as well as basic knowledge of computer organization and programming, are very desirable.\nAll lower division courses (course numbers below 300) included among the degree requirements are available at many community colleges in California; students intending to enter the program upon transferring to San Francisco State University from a community college should take as many of those courses there as possible.\nStudents should plan their program of study in the major with the help of a departmental advisor as soon as possible so that the correct sequence of courses is taken and a set of\nfour electives\nis chosen. It is also suggested that students consult with an advisor before selecting courses to meet the General Education requirements. (See program overview for acceptable science electives.)\nSeveral endowed scholarship funds offer\nannual\nawards\nto computer science\nmajors\nwho\nshow\nscholarly accomplishment and\ndemonstrate\nfinancial need. An Entrepreneurship Program and Developers Prize, funded by our alumni, encourage and support innovation and entrepreneurship among students.\nProgram Learning Outcomes\nStudents will be able to design, develop, document, and test software using current techniques.\nStudents will understand the fundamentals of computer architecture and computing theory.\nStudents will be able to solve problems working in group settings.\nStudents will demonstrate the ability to give presentations and write technical reports.\nStudents will demonstrate an understanding of the importance of social and ethical issues related to the profession.\nComputer Science (B.S.)\n74 units\nCR/NC grades are not accepted in courses for the Computer Science major.\nGrades of C or better are required for\nCSC 510\nand\nCSC 648\n.\nMathematics and Physics (22 units)\nCourse List\nCode\nTitle\nUnits\nMATH 225\nIntroduction to Linear Algebra\n3\nMATH 226\nCalculus I\n4\nMATH 227\nCalculus II\n4\nMATH 324\nProbability and Statistics with Computing\n3\nPHYS 220\nGeneral Physics with Calculus I\n3\nPHYS 222\nGeneral Physics with Calculus I Laboratory\n1\nPHYS 230\nGeneral Physics with Calculus II\n3\nPHYS 232\nGeneral Physics with Calculus II Laboratory\n1\nCore Computer Science Requirements (28 units)\nCourse List\nCode\nTitle\nUnits\nCSC 101\nIntroduction to Computing\n3\nCSC 215\nIntermediate Computer Programming\n4\nCSC 220\nData Structures\n3\nCSC 230\nDiscrete Mathematical Structures for Computer Science\n3\nCSC 256\nMachine Structures\n3\nCSC 300GW\nEthics, Communication, and Tools for Software Development - GWAR\n3\nCSC 317\nIntroduction to Web Software Development\n3\nCSC 340\nProgramming Methodology\n3\nCSC 413\nSoftware Development\n3\nAdvanced Computer Science Requirements (9 units)\nCourse List\nCode\nTitle\nUnits\nCSC 415\nOperating System Principles\n3\nCSC 510\nAnalysis of Algorithms I\n3\nCSC 648\nSoftware Engineering\n3\nElectives (15 units)\nAll students must complete five 3-unit senior electives.  At least 12 units must be CSC courses.  In addition to the courses listed below, any 600-level CSC course, with the exception of\nCSC 601\n,\nCSC 602\n,\nCSC 648\n, and\nCSC 694\ncan be used as an elective.  The department also allows one CSC graduate course to be used as a senior elective (700-level or higher, and non-paired excluding\nCSC 895\n,\nCSC 898\n,\nCSC 897\n,\nCSC 899\n).  Exceptions must be approved in advance by a senior advisor.\nCourse List\nCode\nTitle\nUnits\nCSC 520\nTheory of Computing\n3\nCSC 600\nProgramming Paradigms and Languages\n3\nCSC 615\nEmbedded Linux Systems and Physical Computing\n3\nCSC 620\nNatural Language Technologies\n3\nCSC 621\nBiomedical Imaging and Analysis\n3\nCSC 630\nComputer Graphics Systems Design\n3\nCSC 631\nMultiplayer Game Development\n3\nCSC 641\nComputer Performance Evaluation\n3\nCSC 642\nHuman-Computer Interaction\n3\nCSC 645\nComputer Networks\n3\nCSC 647\nIntroduction to Quantum Computing and Quantum Information Science\n3\nCSC 651\nSystem Administration\n3\nCSC 652\nIntroduction to Security and Data Privacy\n3\nCSC 656\nComputer Organization\n3\nCSC 657\nBioinformatics Computing\n3\nCSC 664\nMultimedia Systems\n3\nCSC 665\nArtificial Intelligence\n3\nCSC 667\nInternet Application Design and Development\n3\nCSC 668\nAdvanced Object Oriented Software Design and Development\n3\nCSC 671\nDeep Learning\n3\nCSC 675\nIntroduction to Database Systems\n3\nCSC 676\nSoft Computing and Decision Support Systems\n3\nCSC 680\nApplication Development for Mobile Devices\n3\nCSC 690\nInteractive Multimedia Application Development\n3\nCSC 698\nTopics in Computing\n3\nCSC 699\nIndependent Study\n1-3\nMATH 400\nNumerical Analysis\n3\nMATH 425\nApplied and Computational Linear Algebra\n3\nMATH 448\nIntroduction to Statistical Learning and Data Mining\n3\nGeneral Education Requirements\nRequirement\nCourse Level\nUnits\nArea Designation\nEnglish Composition\nLD\n3\n1A\nCritical Thinking\nLD\n3\n1B\nOral Communication\nLD\n3\n1C\nMathematical Concepts and Quantitative Reasoning\nLD\n3\n2\nArts\nLD\n3\n3A\nHumanities\nLD\n3\n3B\nSocial and Behavioral Sciences\nLD\n6\n4\nPhysical Science\nLD\n3\n5A\nBiological Science\nLD\n3\n5B\nLaboratory\nLD\n1\n5C\nEthnic Studies\nLD or UD\n3\n6\nScience\nor\nMath/Quantitative Reasoning\nUD\n3\n5UD\nor\n2UD\nArts or Humanities\nUD\n3\n3UD\nSocial and Behavioral Sciences\nUD\n3\n4UD\nSF State Studies\nCourses certified as meeting the SF State Studies requirements may be upper or lower division in General Education (GE), a major or minor, or an elective.\nAmerican Ethnic and Racial Minorities\nLD or UD\n3\nAERM\nEnvironmental Sustainability and Climate Action\nLD or UD\n3\nES\nGlobal Perspectives\nLD or UD\n3\nGP\nSocial Justice\nLD or UD\n3\nSJ\nNote: LD = Lower-Division; UD = Upper-Division.\nFirst-Time Student Roadmap (4 Year)\nThe roadmaps presented in this Bulletin are intended as suggested plans of study and do not replace meeting with an advisor. For a more personalized roadmap, please use the\nDegree Planner\ntool found in your\nStudent Center\n.\nStudents should use their\nPathway/Category\nto determine which roadmap to follow. For directions on how to view your Pathway/Category, visit\nhow to find your pathway\n. Questions? Contact\nGator Smart Start.\nFirst-Time Student Roadmap – QR Pathway 1/2\nFirst-Time Student Roadmap – QR Pathway 3/4\nTransfer Student Roadmap (2 Year)\nFor students with an AS-T in\nComputer Science\n.\nCOMP ADT Roadmap\nThis degree program is an approved pathway (“similar” major) for students earning the ADT in Computer Science\nCalifornia legislation SB 1440 (2009) mandated the creation of the Associate Degree for Transfer (ADT) to be awarded by the California Community Colleges. Two types of ADTs are awarded: Associate in Arts for Transfer (AA-T) and Associate in Science for Transfer (AS-T).\nNote: no specific degree is required for admission as an upper-division student. However, the ADT includes specific guarantees related to admission and graduation and is designed to clarify the transfer process and strengthen lower-division preparation for the major.\nAn ADT totals 60 units and in most cases includes completion of all lower-division General Education requirements and at least 18 units in a specific major. (The Biology, Chemistry, and Environmental Science AS-T degrees defer 3 units in lower-division GE area 3 and 3 units in lower-division GE area 4 until after transfer.) Students pursuing an ADT are guaranteed admission to the CSU if minimum eligibility requirements are met, though not necessarily to the CSU campus of primary choice.\nUpon verification that the ADT has been awarded prior to matriculation at SF State, students are guaranteed B.A. or B.S. completion in 60 units if pursuing a “similar” major after transfer. Determinations about “similar” majors at SF State are made by faculty in the discipline.\nDegree completion in 60 units cannot be guaranteed when a student simultaneously pursues an additional major, a minor, certificate, or credential.\nA sample advising roadmap for students who have earned an ADT and continue in a \"similar\" major at SF State is available on the Roadmaps tab on the degree requirements page for the major. The roadmap displays:\nHow many lower-division units required for the major have been completed upon entry based on the award of a specific ADT;\nWhich lower-division requirements are considered complete upon entry based on the award of a specific ADT;\nHow to complete the remaining 60 units for the degree in four semesters.\nStudents who have earned an ADT should seek advising in the major department during the first semester of attendance.\nGeneral Advising Information for Transfer Students\nBefore transfer, complete as many lower-division requirements or electives for this major as possible.\nThe following courses are not required for admission but are required for graduation. Students are strongly encouraged to complete these units before transfer; doing so will provide more flexibility in course selection after transfer.\na course in U.S. History\na course in U.S. & California Government\nFor information about satisfying the requirements described in (1) and (2) above at a California Community College (CCC), please visit\nhttp://www.assist.org\n. Check any geographically accessible CCCs; sometimes, options include more than one college. Use ASSIST to determine:\nWhich courses at a CCC satisfy any lower-division major requirements for this major;\nWhich courses at a CCC satisfy CSU GE, US History, and US & CA Government requirements.\nRemedial courses are not transferable and do not apply to the minimum 60 semester units/90 quarter units required for admission.\nAdditional units for courses that are repeated do not apply to the minimum 60 units required for upper-division transfer (for example, if a course was not passed on the first attempt or was taken to earn a better grade).\nBefore leaving the last California Community College of attendance, obtain a summary of completion of lower-division General Education units (IGETC or CSU GE Breadth). This is often referred to as a GE certification worksheet. SF State does not require delivery of this certification to Admissions, but students should retain this document for verifying degree progress after transfer.\nCredit for Advanced Placement, International Baccalaureate, or College-Level Examination Program courses: AP/IB/CLEP credit is not automatically transferred from the previous institution. Units are transferred only when an official score report is delivered to SF State. Credit is based on the academic year during which exams were taken. Refer to the University Bulletin in effect during the year of AP/IB/CLEP examination(s) for details regarding the award of credit for AP/IB/CLEP.\nStudents pursuing majors in science, technology, engineering, and mathematics (STEM) disciplines often defer 6-9 units of lower-division General Education in Areas C and D until after transfer to focus on preparation courses for the major. This advice does not apply to students pursuing associate degree completion before transfer.\nTransferring From Institutions Other Than CCCs or CSUs\nReview SF State's lower-division General Education requirements. Note that, as described below, the four basic skills courses required for admission meet GE Areas 1A/A2, 1B/A3, 1C/A1, and 2/B4 in the SF State GE pattern. Courses that fulfill the remaining areas of SF State’s lower-division GE pattern are available at most two-year and four-year colleges and universities.\nOf the four required basic skills courses, a course in critical thinking (1B/A3) may not be widely offered outside the CCC and CSU systems. Students should attempt to identify and take an appropriate course no later than the term of application to the CSU. To review more information about the 1B/A3 requirement, please visit\nbulletin.sfsu.edu/undergraduate-education/general-education/lower-division/#AAEL\n.\nWaiting until after transfer to take a single course at SF State that meets both US and CA/local government requirements may be an appropriate option, particularly if transferring from outside of California.",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/adt-roadmap/",
    "category": "bulletin_cs",
    "title": "Bachelor of Science in Computer Science – COMP Associate Degree for Transfer (ADT) Roadmap | San Francisco State University Bulletin",
    "content": "Bachelor of Science in Computer Science – COMP Associate Degree for Transfer (ADT) Roadmap\nThis is a sample pathway for students who transfer to San Francisco State University in the current Bulletin year with an AS-T in Computer Science. 35 units in the major (\nMATH 225\n,\nMATH 226\n,\nMATH 227\n,\nPHYS 220\n/\nPHYS 222\n,\nPHYS 230\n/\nPHYS 232\n,\nCSC 101\n,\nCSC 215\n,\nCSC 220\n,\nCSC 230\n,\nCSC 256\n) and all lower-division GE requirements have been satisfied. Additional units in the major may have been satisfied. Check with a major advisor about the most appropriate course sequence.\nDegree completion guaranteed in 60 units;\nsee the Associate Degree for Transfer (ADT) section for more information\n.\nTo Do at SF State:\nEnough total units to reach 120 minimum for graduation; 30 units minimum at the upper division level; to include the following:\nUniversity-Wide Requirements: 9-15 Units\nAmerican Institutions (0-6 units): US History, US Government, CA Government. If not met in transfer, see next bullet.\nUpper-division GE (9 units): Courses may satisfy the US History or US/CA Government requirements and UD-C or UD-D at the same time if approved for multiple areas.\nStudents entering the major with the AS-T in Computer Science are not required to fulfill SF State Studies and Complementary Studies requirements.\nComputer Science Major:  39 Units\nMATH 225\n,\nMATH 226\n,\nMATH 227\n,\nPHYS 220\n,\nPHYS 222\n,\nPHYS 230\n,\nPHYS 232\n,\nCSC 101\n,\nCSC 215\n,\nCSC 220\n,\nCSC 230\n, and\nCSC 256\nmet in transfer.\nMathematics: 3 units\nCore Computer Science Requirements: 12 units\nAdvanced Computer Science requirements: 9 units\nMajor Electives: 15 units\nUniversity Electives: 6 or More Units\nDepends on course choices made at the community college, how transferred units are applied to the requirements above, and course choices at SF State. Some courses may meet more than one requirement, e.g., in both UD GE and in the major.\nPlan of Study Grid\nFirst Semester\nUnits\nCSC 300GW\nEthics, Communication, and Tools for Software Development - GWAR (\nCore Computer Science Requirement\n)\n3\nCSC 317\nIntroduction to Web Software Development (\nCore Computer Science Requirement\n)\n3\nCSC 340\nProgramming Methodology (\nCore Computer Science Requirement\n)\n3\nMATH 324\nProbability and Statistics with Computing (\nMajor Mathematics and Physics\n)\n3\nUS History\n3\nor University Elective if US History met in transfer\nUnits\n15\nSecond Semester\nCSC 413\nSoftware Development (\nCore Computer Science Requirement\n)\n3\nCSC 415\nOperating System Principles (\nAdvanced Computer Science Requirement\n)\n3\nCSC 510\nAnalysis of Algorithms I (\nAdvanced Computer Science Requirement\n)\n3\nGE Area 3UD: Upper-Division Arts or Humanities\n3\nU.S. and California Government\n3\nor University Elective if US/CA Government met in transfer\nUnits\n15\nThird Semester\nMajor Electives (15 Units Total) - Take Three\n1\n9\nGE Area 5UD or 2UD: Upper-Division Sciences or Upper-Division Mathematical Concepts\n3\nUniversity Elective\n3\nUnits\n15\nFourth Semester\nCSC 648\nSoftware Engineering\n3\nMajor Electives (15 Units Total) – Take Two\n1\n6\nGE Area 4UD: Upper-Division Social and Behavioral Sciences\n3\nUniversity Elective\n3\nUnits\n15\nTotal Units\n60\n1\nMajor Electives (15 units)\nA full list of courses that can fulfill this requirement can be found in the\nDegree Requirements\n.",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/adt-roadmap/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/minor-computing-applications/",
    "category": "bulletin_cs",
    "title": "Minor in Computing Applications | San Francisco State University Bulletin",
    "content": "Minor in Computing Applications\nApplications of computing have become all-pervasive, impacting every aspect of our lives and our society. As a result, the demand for computational skills has skyrocketed in non-computational fields ranging from agriculture to biology. To meet this demand, the Computing Application Minor offers a curriculum specifically designed for non-CS majors. Through this minor, students will learn the fundamentals of computer programming and receive hands-on experience in applying computing skills to real-life problems from diverse fields.\nPlease review course descriptions for prerequisite courses and consult a computer science department advisor for further information.\nAdmission to the minor is open to all students with upper-division standing. Courses are three units unless otherwise indicated.\nCSC 408\n,\nCSC 411\n, and\nCSC 509\nmust be completed with a letter grade.\nCredit/No Credit (CR/NC) grading option is not acceptable for these courses to complete the minor.\nProgram Learning Outcomes\nStudents will demonstrate foundational knowledge of computational skills and their application to multidisciplinary problems.\nStudents will demonstrate functional knowledge of machine learning concepts, tools, and techniques.\nStudents will demonstrate the ability to synthesize computational and machine learning basic skills around the big questions in diverse fields (e.g. biotechnology) to develop solutions to real-life problems.\nComputing Applications Minor – 15 units minimum\nA minimum of 6 upper-division units are required to complete the minor.\nAll coursework used to satisfy the requirements of the minor must be completed with a minimum grade point average of 2.0.\nCSC 408\n,\nCSC 411\n, and\nCSC 509\nmust be taken for a letter grade.\nCourse List\nCode\nTitle\nUnits\nSelect One:\n3-6\nCSC 101\n&\nCSC 215\nIntroduction to Computing\nand Intermediate Computer Programming\n1\nCSC 306\nAn Interdisciplinary Approach to Computer Programming\n2\nSelect One:\n3\nCSC 220\nData Structures\n1\nCSC 311\nData Structures for Data Science Application Development\n2\nCSC 408\nMachine Learning and Data Science for Personalized Medicine\n3\nCSC 411\nIntermediate Machine Learning for Interdisciplinary Data Scientists\n3\nCSC 509\nData Science and Machine Learning for Medical Image Analysis\n3\n1\nRecommended for non-life science majors.\n2\nRecommended for life science majors.",
    "url": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/minor-computing-applications/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/roadmap-math-pathway",
    "category": "bulletin_cs",
    "title": "Bachelor of Science in Computer Science Roadmap Quantitative Reasoning Category 3/4 | San Francisco State University Bulletin",
    "content": "Bachelor of Science in Computer Science Roadmap Quantitative Reasoning Category 3/4\n120 Total Units Required\nMinimum Number of Units in the Major: 74\nThis roadmap is a suggested plan of study and does not replace meeting with an advisor. Please note that students may need to adjust the actual sequence of courses based on course availability. Please consult your\nDegree Planner\nand an advisor for further guidance.\nTo avoid taking additional units, it is recommended that you meet the\nSF State Studies\n(AERM, GP, ESCA, SJ) requirements within your GE or major.\nPlan of Study Grid\nFirst Semester\nUnits\nCSC 101\nIntroduction to Computing (\nCore Computer Science Requirement\n)\n3\nMATH 197\nPrelude to Calculus I (\nPrerequisite for\nMATH 198\nand\nMATH 226\n)\n1\n3\nGE Area 1: English Communication - Take Two\n6\nGE Area 4: Social and Behavioral Sciences\n2\n3\nUnits\n15\nSecond Semester\nCSC 215\nIntermediate Computer Programming (\nCore Computer Science Requirement\n)\n4\nMATH 198\nPrelude to Calculus II (\nPrerequisite for\nMATH 226\n, GE 2\n)\n1\n3\nGE Area 1A: English Composition\n3\nGE Area 3: Arts and Humanities\n3\nGE Area 5B: Biological Science\n3\nUnits\n16\nThird Semester\nCSC 220\nData Structures (\nCore Computer Science Requirement\n)\n3\nMATH 225\nIntroduction to Linear Algebra (\nMajor Mathematics and Physics\n)\n3\nMATH 226\nCalculus I (\nMajor Mathematics and Physics, GE 2\n)\n1\n4\nGE Area 3: Arts and Humanities\n3\nGE Area 4: Social and Behavioral Sciences\n2\n3\nUnits\n16\nFourth Semester\nCSC 230\nDiscrete Mathematical Structures for Computer Science (\nCore Computer Science Requirement\n)\n3\nMATH 227\nCalculus II (\nMajor Mathematics and Physics\n)\n4\nPHYS 220\nGeneral Physics with Calculus I (\nMajor Mathematics and Physics, GE 5A, GE 5C\n)\n3\nGE Area 6: Ethnic Studies\n3\nU.S. and California Government\n3\nUnits\n16\nFifth Semester\nCSC 256\nMachine Structures (\nCore Computer Science Requirement\n)\n3\nCSC 300GW\nEthics, Communication, and Tools for Software Development - GWAR (\nCore Computer Science Requirement\n)\n3\nCSC 340\nProgramming Methodology (\nCore Computer Science Requirement\n)\n3\nMATH 324\nProbability and Statistics with Computing (\nMajor Mathematics and Physics\n)\n3\nPHYS 230\n&\nPHYS 232\nGeneral Physics with Calculus II\nand General Physics with Calculus II Laboratory\n(\nMajor Mathematics and Physics\n)\n4\nUnits\n16\nSixth Semester\nCSC 317\nIntroduction to Web Software Development\n3\nCSC 415\nOperating System Principles (\nAdvanced Computer Science Requirement\n)\n3\nCSC 510\nAnalysis of Algorithms I\n3\nGE Area 5UD or 2UD: Upper-Division Sciences or Upper-Division Mathematical Concepts\n3\nGE Area 3UD: Upper-Division Arts or Humanities\n3\nUnits\n15\nSeventh Semester\nCSC 413\nSoftware Development (\nCore Computer Science Requirement\n)\n3\nMajor Elective (15 Units Total) - Take Two\n4\n6\nGE Area 4UD: Upper-Division Social and Behavioral Sciences\n3\nSF State Studies or University Elective\n2\nUnits\n14\nEighth Semester\nCSC 648\nSoftware Engineering (\nAdvanced Computer Science Requirement\n)\n5\n3\nMajor Elective (15 Units Total) - Take Three\n4\n9\nUnits\n12\nTotal Units\n120\n1\nStudents should use their\nPathway/Category\nto determine the appropriate GE 2 course option. For directions on how to view your Pathway/Category, visit\nhow to find your pathway\n. Questions? Contact\nGator Smart Start.\n2\nFirst-time freshmen must take one lower-division Area 4 course that meets US History (USH).\n3\nStudents should use their\nPathway/Category\nto determine the appropriate GE 1A course option. For directions on how to view your Pathway/Category, visit\nhow to find your pathway\n. Questions? Contact\nGator Smart Start.\n4\nMajor Electives (15 units)\nA full list of courses that can fulfill this requirement can be found in the\nDegree Requirements\n.\n5\nCSC 648\nserves as the major capstone course.",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/roadmap-math-pathway",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/",
    "category": "bulletin_cs",
    "title": "Computer Science | San Francisco State University Bulletin",
    "content": "Computer Science\nCollege of Science and Engineering\nDean: Dr. Carmen Domingo\nDepartment of Computer Science\nTH 906\nPhone: (415) 338-1008\nEmail:\ncsgrad@sfsu.edu\nWebsite:\nhttp://cs.sfsu.edu\nChair: Arno Puder\nGraduate Coordinator: Yang\nGraduate Admissions: Okada\nUndergraduate Advisors: AlJarrah, Dujmovic, Fazli, Humayoun, Kulkarni, Singh, Song, Yue\nProgram Scope\nThe primary mission of the Department of Computer Science is to prepare students for careers as software professionals and graduate studies in computer science and related fields. The department offers a broad curriculum covering the major areas of the computing discipline, integrated with soft skills such as teamwork and written/oral communication; students also gain experience working on group projects. Students are exposed to the fundamentals of computing architecture and computing theory, and focus their studies on the areas of software and systems development. Faculty work directly with students to help them develop the skills and knowledge of computing professionals.\nDepartment faculty are committed to teaching excellence. They remain current in the rapidly changing field of computing technology through continuing research and publications, direct consultation with local industries, and seminar programs that bring top researchers and industry leaders to campus to speak on current developments in the field. The Supervised Industrial Research Program, Practicum option, and other mechanisms provide opportunities for graduate students to complement their academic learning with real-world experience.\nThe department has an additional commitment to sharing its knowledge and skills with the rest of the University community, with local schools, and with community-based organizations in the Bay Area.\nThe Bachelor of Science program stresses a basic foundation in mathematics and physics, and a thorough study of the fundamentals of the discipline: software development, computer architecture, operating systems, programming languages, algorithms, and the theoretical foundations of computer science. A wide variety of elective courses such as mobile development, web/internet applications, bioinformatics, database systems, artificial intelligence, computer graphics, game development, and software engineering allow students to specialize in selected areas. Ethical and social issues of computing are discussed throughout the curriculum. Senior courses include group projects to better prepare students for future job markets. Courses are updated or added regularly to provide necessary training in the latest software technologies.\nThe Master of Science in Computer Science prepares students for a wide variety of careers in computing or related industries as well as for advanced study toward Ph.D. degrees. Our program combines a solid and practical curriculum with high-quality research and project-based activities. In addition to a general core covering the breadth of the computing discipline, students may focus on software engineering in globally distributed environments, computing applications for biotechnology and the life sciences, data mining/big data, and business applications.\nOur faculty maintain active publication records, with significant funding from government agencies (NSF, NIH, Department of Labor, etc.) and industry (Genentech, Microsoft, IBM, Arista Networks, Mozilla, etc.). Students actively engage in research projects, write papers, attend conferences, and participate in funding proposals. SF State’s Center for Computing for Life Sciences and several specialized laboratories provide research and project focus, as well as opportunities to collaborate with faculty and students from other SF State departments and industry. A new Entrepreneurship Program and Developers Prize supports the development of student projects into business or non-profit ventures.\nComputing Facilities\nCentral Facilities\nA network of Mac, Linux, and PC servers supported by SF State Information Technology Services\nA Linux server (unixlab) supported by SF State Information Technology Services, used for Computer Science courses\nWorkstation labs in the SF State J. Paul Leonard Library and around campus\nGeneral Undergraduate Computing Facilities\nIntel servers (Windows and Linux)\nWorkstation laboratories with Mac, Windows, and Linux desktops\nSpecialized Centers, Laboratories, and Computing Resources\nCenter for Computing for Life Sciences (including Amazon cloud servers and 40-node DELL cluster)\nMultimedia and Visualization Laboratory\nBiocomputing and Media Research Group\nBiomedical Image and Data Analysis Lab\nVirtual Computing: VMware GSX Server, Microsoft VirtualPC Server\nHigh-Performance Computing server with NVIDIA Tesla and Titan GPUs\nCareer Alternatives\nMobile application developer\nWeb and internet application developer\nGame developer\nBioinformatics Developer\nData science/data mining developer\nSoftware Engineer\nQuality assurance engineer\nManager of software development teams\nSystems programmer/administrator\nComputer network specialist\nSystem security and/or performance manager\nApplication software designer\nDatabase designer/programmer/administrator\nProgrammer in scientific or business applications\nProfessor\nJozo J. Dujmović (1994),\nProfessor in Computer Science\n. Ph.D. University of Belgrade.\nAnagha K. Kulkarni (2013),\nProfessor in Computer Science\n. Ph.D. Carnegie Mellon University.\nKazunori Okada (2006),\nProfessor in Computer Science\n. Ph.D. University Southern California.\nDragutin Petkovic (2003),\nProfessor in Computer Science\n. Ph.D. University of California, Irvine.\nArno Puder (2008),\nProfessor in Computer Science\n. Ph.D. University of Frankfurt, Germany.\nHui Yang (2006),\nProfessor in Computer Science\n. Ph.D. Ohio State University.\nIlmi  Yoon (2000),\nProfessor in Computer Science\n. Ph.D. University of Southern California.\nAssistant Professor\nAbeer Aljarrah (2018),\nAssistant Professor in Computer Science\n. Ph.D. University of North Carolina at Charlotte.\nSanika  Doolani (2024),\nAssistant Professor in Computer Science\n. Ph.D. University of Texas at Arlington.\nSara El Alaoui (2024),\nAssistant Professor in Computer Science\n. Ph.D. University of Nebraska-Lincoln.\nDaniel E. Huang (2021),\nAssistant Professor in Computer Science\n. Ph.D. Harvard University.\nShahrukh Humayoun (2019),\nAssistant Professor in Computer Science\n. Ph.D. Sapienza University of Rome.\nTimothy Sun (2020),\nAssistant Professor in Computer Science\n. Ph.D. Columbia University.\nJingyi Wang (2019),\nAssistant Professor in Computer Science\n. Ph.D. University of Houston.\nLecturers\nBhaskar, Erwin, Esselmann, Gibson, Hasan, Jones, Kalinin, Kang, Kriese, Mehta, Mogos, Ortiz-Costa, Parra, Phyo, Pico, Pinera, Roberts, Scott, Sikder, Souza, Ta, Tomasevich, Tuttle, Wall\nMajor\nBachelor of Science in Computer Science\nMinor\nMinor in Computer Science\nMinor in Computing Applications\nCertificate\nCertificate in Data Science and Machine Learning for Biotechnology\nMasters\nMaster of Science in Computer Science\nMaster of Science in Data Science and Artificial Intelligence\nCertificates\nGraduate Certificate in Software Engineering\nGraduate Certificate in Ethical Artificial Intelligence\nExplanation of Course Descriptions, Symbols, and Terms\nCSC 101  Introduction to Computing (Units: 3)\nA comprehensive introduction to computing and programming. No prior programming experience is required. Explore the use of computing in everyday life and its impact on our society, and apply foundational ideas of computing to frame a problem and devise a solution using Java programming language.\nCSC 110  Computational Thinking and Quantitative Reasoning (Units: 3)\nPrerequisites: Category I or II placement for QR/Math, or satisfactory completion of ELM requirement, or MATH 70 or ESM 70 with a grade of C or better. Students with Category III or IV placement for QR/Math or students who have not passed MATH 70 or ESM 70 with a C or better must concurrently enroll in\nMATH 111\n.\nBasic building blocks of programming and computational thinking practices including analyzing the effects of computation, creating computational artifacts, using abstractions and models, analyzing problems and artifacts, communicating processes and results, and working effectively in teams. Mathematical models and information retrieval from real-world datasets will be used as vehicles to practice programming and computation thinking.\n(Note: For this course to satisfy General Education, students must earn a grade of C- or CR or higher.)\nCourse Attributes:\n2: MATH/Quantitative Reason\nB4: Math/QR\nCSC 215  Intermediate Computer Programming (Units: 4)\nPrerequisite:\nCSC 101\nwith a grade of C or better.\nDesign, implementation, testing, debugging, maintenance, and documentation of Java programs. Algorithms, programming concepts, and data types in Java. Concepts of object-oriented programming. Numerical and non-numerical problems. Hands-on exercises in programming, and the use of basic software development tools.\nCSC 220  Data Structures (Units: 3)\nPrerequisite: CSC 210 or\nCSC 215\nwith a grade of C or better.\nLinear and non-linear data structures in Java, including lists, stacks, queues, trees, tables, and graphs. Recursion, iteration over collections, Big O notation, and hash tables.\nCSC 221  Data Structure Lab (Unit: 1)\nPrerequisites: CSC 210 or\nCSC 215\n; concurrent enrollment in\nCSC 220\n.\nTraining on the principles of object-oriented programming, data structures (such as stacks, queues, lists, trees, sets, HashMaps, etc.), implementation, and usage in solving real-life problems, recursion, and algorithm analysis. Activity. (CR/NC grading only)\nCSC 230  Discrete Mathematical Structures for Computer Science (Units: 3)\nPrerequisites: CSC 210 or\nCSC 215\n, and\nMATH 227\n(may be taken concurrently) with grades of C or better.\nReview of set algebra, relations and functions, permutations, propositional logic, proof techniques, introduction to graph theory, and infinite sets, and their applications to computer science.\nCSC 256  Machine Structures (Units: 3)\nPrerequisite:\nCSC 230\nwith a grade of C or better.\nDigital logic circuits, data representation, assembly language programming, subroutine linkage, machine language encoding, interrupt and exception handling, memory system concepts, and CPU organization and performance.\nCSC 300GW  Ethics, Communication, and Tools for Software Development - GWAR (Units: 3)\nPrerequisites: Restricted to upper-division Computer Science majors and minors; GE Area 1A/A2; CSC 210 or\nCSC 215\n.\nPrivacy, security, legal, and ethical issues in Software development. Communication relevant to SW development (e.g., reports, contracts, requirements, documentation, collaboration, e-mail, presentations). Study and use of basic tools for SW development and collaboration. (ABC/NC grading only)\nCourse Attributes:\nGraduation Writing Assessment\nCSC 306  An Interdisciplinary Approach to Computer Programming (Units: 3)\nPrerequisites: Restricted to Biology, Chemistry, and Biochemistry majors and Certificate in Data Science and Machine Learning for Biotechnology Professionals students; upper-division standing; or permission of the instructor.\nBasics of programming for interdisciplinary problem-solving, using Python.Topics include basic building blocks of programming (variables, control statements, loops, function, abstraction, and more) and problem-solving approaches relevant to problems in the natural sciences.\nCSC 307  An Interdisciplinary Approach to Web Programming (Units: 3)\nPrerequisite: Upper-division standing or permission of the instructor.\nBasics of WWW engineering relevant to studies in interdisciplinary problem-solving. Topics include the basics of developing web and database applications, HTML, PHP, Python, SQL, and MySQL database.\nCSC 309  Computer Programming (Units: 3)\nPrerequisite:\nMATH 226\nor permission of the instructor.\nProcedural programming for scientific applications.  Good programming practices and basic numerical and nonnumerical algorithms for scientists and engineers.\nCSC 310  Computer Programming Lab (Unit: 1)\nPrerequisite: Concurrent enrollment in\nCSC 309\nis recommended.\nExercises in Python programming and use of basic software development tools.\nCSC 311  Data Structures for Data Science Application Development (Units: 3)\nPrerequisite:\nCSC 306\n* or equivalent.\nFocuses on learning about and utilizing data structures and algorithms effectively for developing data science applications. Utilizes Python and Jupyter Notebook. [Formerly CSC 219]\nCSC 317  Introduction to Web Software Development (Units: 3)\nPrerequisite:\nCSC 220\nor permission of the instructor.\nIntroduction to topics in UNIX and creating web pages including reading and processing user input submitted through web pages, client side and server side programming, connecting a web page to a database, and building an e-commerce site or Internet Application.\nCSC 340  Programming Methodology (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\nwith grades of C or better.\nAdvanced data structures and algorithms for manipulation in C++ with an emphasis on design and implementation, practical applications, and algorithms for sorting, searching, and graphs.\nCSC 408  Machine Learning and Data Science for Personalized Medicine (Units: 3)\nPrerequisite:\nCSC 220\n* or\nCSC 311\n* or equivalent; a college-level biology course; or permission of the instructor.\nExploration of the concepts and tools needed to analyze, interpret, and reason from genomic datasets to help medical professionals better treat their patients. Diseases often affect patients differently depending on their genetic background. To make personalized medicine a reality, it is necessary to leverage the data from genomic datasets. Genomic data science applies machine learning and data science to the genome to better diagnose and treat patients. [Formerly CSC 508]\nCSC 411  Intermediate Machine Learning for Interdisciplinary Data Scientists (Units: 3)\nPrerequisite:\nCSC 220\nor\nCSC 311\nor equivalent; a college-level biology course; or permission of the instructor.\nIntermediate machine learning concepts and tools. Focus on application development, linear model, deep neural network and transfer learning using Python, Tensorflow, and Keras. [Formerly CSC 308]\nCSC 412  Advanced Software Lab (Unit: 1)\nPrerequisites:\nCSC 220\n; concurrent enrollment in\nCSC 340\nrecommended.\nHands-on exercises in advanced programming, software development tools, and web technologies. Students are encouraged to bring their laptops. Activity. May be repeated for a total of 2 units. (Plus-minus letter grade only)\nCSC 413  Software Development (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 317\nwith grades of C or better.\nModern software applications. Object-oriented techniques: encapsulation, inheritance, and polymorphism as a mechanism for data design and problem solution. Software design, debugging, testing, and UI design. Software maintenance. Software development tools. Extra fee required. (Plus-minus letter grade only)\nCSC 415  Operating System Principles (Units: 3)\nPrerequisites:\nCSC 256\n,\nCSC 340\n*,\nMATH 324\n, and\nPHYS 230\nwith grades of C or better or graduate standing*.\nOperating system concepts: concurrent processes, basic synchronization techniques, deadlock, memory management, file systems, security, networks, and distributed processing. Extra fee required.\nCSC 509  Data Science and Machine Learning for Medical Image Analysis (Units: 3)\nPrerequisite:\nCSC 411\n(may be taken concurrently).\nExploration of the application of state-of-the-art deep learning models to medical image analysis: the task of identifying objects such as tissue, bone within an image. Discussion of topics central to deep learning-based image analysis, and practical application of these concepts in three hands-on case studies.\nCSC 510  Analysis of Algorithms I (Units: 3)\nPrerequisites:\nCSC 340\n* and\nMATH 324\n* with grades of C or better.\nNotions of main algorithm design methods. Measures of algorithm complexity in space and time. Algorithms of classic problems including sorting and scheduling and complexity analysis of such algorithms. (Plus/minus ABC/NC, CR/NC allowed)\nCSC 520  Theory of Computing (Units: 3)\nPrerequisites:\nCSC 220\nand\nCSC 230\n;\nMATH 225\nor\nMATH 325\nwith grades of C or better.\nExamination of automata, formal languages, and the notion of computability. Discussion of sequential machines as language acceptors and context-free and context-sensitive grammars. Exploration of recursive functions, universal Turing machines, and unsolvable problems.\nCSC 600  Programming Paradigms and Languages (Units: 3)\nPrerequisites:\nCSC 413\n* and\nCSC 510\n* with grades of C or better or graduate-level standing*.\nConcepts for high-level programming languages. Procedural, logic, functional, and object-oriented programming paradigms. Comparative study of several languages and an introduction to grammars and parsing techniques. Extra fee required.\nCSC 601  Data Science and Machine Learning for Biotechnology Seminar Series (Unit: 1)\nPrerequisite:\nCSC 408\n* or\nCSC 411\n* or\nCSC 509\n*.\nFeaturing scientists in related areas from Genentech or other biotechnology industry or academia, explore a broad view of the topics on Drug design, modeling to predict drug performance, or new drug approval processes. (CR/NC grading only)\nCSC 602  Interview Preparation for Data Science and Machine Learning for Biotechnology Opportunities (Units: 2)\nPrerequisite:\nCSC 408\nor\nCSC 411\nor\nCSC 509\n.\nPreparation for interviews for data science-related internships and full-time positions in industry. Emphasis on oral and written communication common in coding interviews for problem-solving. Development of interview skills such as how to communicate about technical aspects, describe a problem, and articulate issues. Practice of key problem-solving strategies specific to technical/coding interviews in Biotechnology. (CR/NC grading only)\nCSC 615  Embedded Linux Systems and Physical Computing (Units: 3)\nPrerequisite:\nCSC 415\n* with a grade of C or better or permission of the instructor.\nExploration of embedded Linux programming in C, threads and synchronization, resource limits, working with sensors and motors, programming various communication protocols, and building a physical computing device. Extra fee required. (Plus-minus letter grade only)\nCSC 620  Natural Language Technologies (Units: 3)\nPrerequisite for\nCSC 820\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 620\n: Upper-division standing;\nCSC 413\n* with a grade of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to the fundamental concepts and techniques of Natural Language Processing (NLP). In-depth understanding of the computational properties of natural language and the commonly used algorithms for processing language data. Illustration of the pervasiveness of natural language technologies through real-world applications. Practical experience in NLP through hands-on exercises. Extra fee required. (Plus-minus letter grade only)\n(\nCSC 820\n/\nCSC 620\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 621  Biomedical Imaging and Analysis (Units: 3)\nPrerequisite for\nCSC 821\n: Graduate standing or permission of the instructor.\nPrerequisites for\nCSC 621\n: Upper-division standing;\nCSC 510\n*;\nMATH 225\n* or\nMATH 325\n* with grades of C or better; GPA of 3.0 or higher; or permission of the instructor.\nIntroduction to medical and biological imaging, imaging physics, 3D image formats, and visualization. Basic digital image processing and analysis, filtering, registration, segmentation, quantification, and performance evaluation. (Plus-minus letter grade only)\n(\nCSC 821\n/\nCSC 621\nis a paired course offering. Students who complete the course at one level may not repeat the course at the other level.)\nCSC 630  Computer Graphics Systems Design (Units: 3)\nPrerequisite for\nCSC 830\n: MS in Computer Science students",
    "url": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/ms-computer-science/",
    "category": "bulletin_cs",
    "title": "Master of Science in Computer Science | San Francisco State University Bulletin",
    "content": "Master of Science in Computer Science\nProgram Description\nAll students share breadth requirements in the areas of computing foundations, computer systems, and software development. Students focusing on different areas then differ in the choice of courses that provide depth in the chosen area and the work done for the culminating experience. Students are expected to decide on a focus area prior to enrollment in the second semester. Integrated into the curriculum are significant team and project experiences. There are two options for the mandatory culminating experience, the master’s thesis or the applied research project.\nThe grading method CR/NC is allowed only for\nCSC 895\nor\nCSC 898\n. All other courses listed on the Advancement to Candidacy (ATC) form must be a letter grade.\nProgram Learning Outcomes\nStudents will demonstrate a breadth of knowledge in Computer Science, as exemplified in the areas of systems, theory, and software development.\nStudents will demonstrate the ability to conduct a research or applied Computer Science project, requiring writing and presentation skills which exemplify scholarly style in Computer Science.\nElective Requirements\nAll students are required to include elective credits in their program. Electives include:\nAll upper-division or graduate courses offered by the Computer Science Department, including breadth requirement courses and\nCSC 897\nand\nCSC 899\n.\nCSC 893\nmay not count as an elective course.\nCourses from other programs such as biology, engineering, business, or mathematics may be accepted with the approval of the graduate advisor and culminating experience supervisor.\nNote:\nA maximum of 6 units of upper-division courses (numbered below 700) may be applied to the degree with the consent of the course instructor and graduate advisor.\nGraduate Seminar Requirement\nIn addition to curricular requirements, prior to enrolling in\nCSC 895\n/\nCSC 898\n, all graduate students are required to attend the Department Graduate Seminar series during one semester of their studies. These weekly seminars explore current topics in computer science research and assist students with choosing a topic for the culminating experience. Details for meeting this requirement may be found in the\nGraduate Studies Policy section\n.\nPracticum\nThis 1-3 unit option is chosen by students who wish to enhance their master’s degree by completing an industrial practicum. After finding the job in the local industry, the student will submit a research proposal to the department’s supervisor (normally the department chair) that describes the expected work and learning outcome. The department’s supervisor must approve the proposal before the student begins the research. Once approved, the student will enroll in 1 unit of\nCSC 893\n. At the conclusion of the work experience, the student must file a written report outlining the research and work experience. The report is submitted to the department’s supervisor. Students may repeat\nCSC 893\nfor a maximum of 3 units. The total number of units for the degree for students who complete the\nCSC 893\npracticum option will be 33 units. It is recommended that this option be pursued only during the summer.\nNote:\nCSC 893\nallows international students to obtain permission to work off-campus for the duration of the course.\nAdmission to Program\nAdmission to the graduate program in Computer Science is a two-step process that should be completed simultaneously:\nApply to San Francisco State University:\nComplete the on-line CSU Mentor application. Follow all other requirements for admission to the University by accessing\nwww.sfsu.edu/~gradstdy/\n.\nApply to the Department of Computer Science graduate program:\nFull details can be found at\nhttps://cs.sfsu.edu/grads/prospective-graduates\nWe encourage students with four-year degrees other than Computer Science to apply to our program as conditional applicants. Please check the link in Step 2 above for details.\nFinancial Assistance\nGraduate assistantships are occasionally available for qualified master's students. These opportunities include participating in funded research projects, assisting with the management of departmental and university computer laboratories as well as lecturer positions for beginning undergraduate computer science courses. Frequently, there are internship opportunities available for work at local companies. International students should address all questions related to their visa status and eligibility for practical training (off-campus work) to the\nOffice of International Programs\n.\nWritten English Proficiency Requirement\nLevel One\nComputer science students admitted to the M.S. program are required to satisfy English Level One prior to the end of their first year of study at SF State. Level One is satisfied by obtaining either a score of 4 or better on the GRE Analytical Writing Exam or a passing grade in\nSCI 614\n.\nSCI 614\nis strongly recommended for all students who wish to develop their skills in professional writing.\nLevel Two\nThe second level of proficiency in written English must be demonstrated before graduation. At this time, the student must demonstrate writing skills that exemplify scholarly style in computer science. This is demonstrated by the master's thesis or the research project report.\nPolicy on Enrollment While Conducting Directed Research\nPursuant to Policy F89-165 adopted by the Academic Senate in 1989, the Computer Science Department has adopted the policy that all graduate students who are working with a research advisor (above and beyond general advising during office hours) and/or having his/her thesis or project reviewed, must enroll in at least 1 unit of\nCSC 895\n,\nCSC 897\n,\nCSC 898\n, or\nCSC 899\n. Registered students will have priority for departmental computing resources.\nComputer Science (M.S.)\n– 30 units minimum\nCore Requirements (9 units)\nComputing Foundations (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 810\nAnalysis of Algorithms II\n3\nCSC 825\nAdvanced Automata Theory\n3\nComputer Systems (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 720\nAdvanced Operating Systems\n3\nCSC 746\nHigh-Performance Computing\n3\nCSC 845\nAdvanced Computer Networks\n3\nSoftware Development (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 780\nApplication Development for Mobile Devices\n3\nCSC 831\nMultiplayer Game Development\n3\nCSC 848\nSoftware Engineering\n3\nCSC 868\nAdvanced Object Oriented Software Design and Development\n3\nGeneral Requirement (9 units)\nThree 3-unit courses drawn from any 700-800 level Computer Science courses not used to meet a core or elective requirement. 700-800 level courses paired with 600 level courses require an advisor’s approval.\nCSC 899\nmay not count towards this requirement.\nElectives (6 units)\nTwo upper-division/graduate 3-unit electives selected on advisement.\nPracticum Option (0-3 units)\nUp to 3 units of\nCSC 893\nSupervised Industrial Research\non advisement.\nCulminating Experience (6 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 897\nResearch\n3\nCSC 899\nIndependent Study\n3\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 895\nApplied Research Project\n3\nCSC 898\nMaster's Thesis\n3",
    "url": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/ms-computer-science/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/minor-computer-science/",
    "category": "bulletin_cs",
    "title": "Minor in Computer Science | San Francisco State University Bulletin",
    "content": "Minor in Computer Science\nMany university students wish to acquire sufficient background in computer science to enable them to use computers effectively in their major areas or to provide an alternative source of income after graduation, but do not want to study computer science at the depth required for the B.S. degree. For such students, a minor consisting of the most central courses in the B.S. program, and some electives, is ideal.\nProgram Learning Outcomes\nStudents will be able to design, develop, document, and test software using current techniques.\nStudents will be able to solve problems working in group settings. This translates to the following outcomes.\nStudents will demonstrate the ability to give presentations and write technical reports.\nComputer Science Minor\n— 22 units\nA minimum of 6 upper-division units are required to complete the minor.\nAll coursework used to satisfy the requirements of the minor must be completed with a minimum grade point average of 2.0.\nStudents are advised that CR/NC grades are not acceptable in courses to be counted for the Computer Science Minor.\nRequirements (16 units)\nCourse List\nCode\nTitle\nUnits\nCSC 101\nIntroduction to Computing\n3\nCSC 215\nIntermediate Computer Programming\n4\nCSC 220\nData Structures\n3\nCSC 317\nIntroduction to Web Software Development\n3\nCSC 413\nSoftware Development\n3\nElectives (6 units)\nUpper-division computer-related electives by approval of the minor advisor.",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/minor-computer-science/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/",
    "category": "bulletin_cs",
    "title": "Bachelor of Science in Computer Science | San Francisco State University Bulletin",
    "content": "Bachelor of Science in Computer Science\nStudents intending to enter this program at the freshman level should have completed two years of algebra and one semester of trigonometry in high school. One year each of high school geometry and physics, as well as basic knowledge of computer organization and programming, are very desirable.\nAll lower division courses (course numbers below 300) included among the degree requirements are available at many community colleges in California; students intending to enter the program upon transferring to San Francisco State University from a community college should take as many of those courses there as possible.\nStudents should plan their program of study in the major with the help of a departmental advisor as soon as possible so that the correct sequence of courses is taken and a set of\nfour electives\nis chosen. It is also suggested that students consult with an advisor before selecting courses to meet the General Education requirements. (See program overview for acceptable science electives.)\nSeveral endowed scholarship funds offer\nannual\nawards\nto computer science\nmajors\nwho\nshow\nscholarly accomplishment and\ndemonstrate\nfinancial need. An Entrepreneurship Program and Developers Prize, funded by our alumni, encourage and support innovation and entrepreneurship among students.\nProgram Learning Outcomes\nStudents will be able to design, develop, document, and test software using current techniques.\nStudents will understand the fundamentals of computer architecture and computing theory.\nStudents will be able to solve problems working in group settings.\nStudents will demonstrate the ability to give presentations and write technical reports.\nStudents will demonstrate an understanding of the importance of social and ethical issues related to the profession.\nComputer Science (B.S.)\n74 units\nCR/NC grades are not accepted in courses for the Computer Science major.\nGrades of C or better are required for\nCSC 510\nand\nCSC 648\n.\nMathematics and Physics (22 units)\nCourse List\nCode\nTitle\nUnits\nMATH 225\nIntroduction to Linear Algebra\n3\nMATH 226\nCalculus I\n4\nMATH 227\nCalculus II\n4\nMATH 324\nProbability and Statistics with Computing\n3\nPHYS 220\nGeneral Physics with Calculus I\n3\nPHYS 222\nGeneral Physics with Calculus I Laboratory\n1\nPHYS 230\nGeneral Physics with Calculus II\n3\nPHYS 232\nGeneral Physics with Calculus II Laboratory\n1\nCore Computer Science Requirements (28 units)\nCourse List\nCode\nTitle\nUnits\nCSC 101\nIntroduction to Computing\n3\nCSC 215\nIntermediate Computer Programming\n4\nCSC 220\nData Structures\n3\nCSC 230\nDiscrete Mathematical Structures for Computer Science\n3\nCSC 256\nMachine Structures\n3\nCSC 300GW\nEthics, Communication, and Tools for Software Development - GWAR\n3\nCSC 317\nIntroduction to Web Software Development\n3\nCSC 340\nProgramming Methodology\n3\nCSC 413\nSoftware Development\n3\nAdvanced Computer Science Requirements (9 units)\nCourse List\nCode\nTitle\nUnits\nCSC 415\nOperating System Principles\n3\nCSC 510\nAnalysis of Algorithms I\n3\nCSC 648\nSoftware Engineering\n3\nElectives (15 units)\nAll students must complete five 3-unit senior electives.  At least 12 units must be CSC courses.  In addition to the courses listed below, any 600-level CSC course, with the exception of\nCSC 601\n,\nCSC 602\n,\nCSC 648\n, and\nCSC 694\ncan be used as an elective.  The department also allows one CSC graduate course to be used as a senior elective (700-level or higher, and non-paired excluding\nCSC 895\n,\nCSC 898\n,\nCSC 897\n,\nCSC 899\n).  Exceptions must be approved in advance by a senior advisor.\nCourse List\nCode\nTitle\nUnits\nCSC 520\nTheory of Computing\n3\nCSC 600\nProgramming Paradigms and Languages\n3\nCSC 615\nEmbedded Linux Systems and Physical Computing\n3\nCSC 620\nNatural Language Technologies\n3\nCSC 621\nBiomedical Imaging and Analysis\n3\nCSC 630\nComputer Graphics Systems Design\n3\nCSC 631\nMultiplayer Game Development\n3\nCSC 641\nComputer Performance Evaluation\n3\nCSC 642\nHuman-Computer Interaction\n3\nCSC 645\nComputer Networks\n3\nCSC 647\nIntroduction to Quantum Computing and Quantum Information Science\n3\nCSC 651\nSystem Administration\n3\nCSC 652\nIntroduction to Security and Data Privacy\n3\nCSC 656\nComputer Organization\n3\nCSC 657\nBioinformatics Computing\n3\nCSC 664\nMultimedia Systems\n3\nCSC 665\nArtificial Intelligence\n3\nCSC 667\nInternet Application Design and Development\n3\nCSC 668\nAdvanced Object Oriented Software Design and Development\n3\nCSC 671\nDeep Learning\n3\nCSC 675\nIntroduction to Database Systems\n3\nCSC 676\nSoft Computing and Decision Support Systems\n3\nCSC 680\nApplication Development for Mobile Devices\n3\nCSC 690\nInteractive Multimedia Application Development\n3\nCSC 698\nTopics in Computing\n3\nCSC 699\nIndependent Study\n1-3\nMATH 400\nNumerical Analysis\n3\nMATH 425\nApplied and Computational Linear Algebra\n3\nMATH 448\nIntroduction to Statistical Learning and Data Mining\n3\nGeneral Education Requirements\nRequirement\nCourse Level\nUnits\nArea Designation\nEnglish Composition\nLD\n3\n1A\nCritical Thinking\nLD\n3\n1B\nOral Communication\nLD\n3\n1C\nMathematical Concepts and Quantitative Reasoning\nLD\n3\n2\nArts\nLD\n3\n3A\nHumanities\nLD\n3\n3B\nSocial and Behavioral Sciences\nLD\n6\n4\nPhysical Science\nLD\n3\n5A\nBiological Science\nLD\n3\n5B\nLaboratory\nLD\n1\n5C\nEthnic Studies\nLD or UD\n3\n6\nScience\nor\nMath/Quantitative Reasoning\nUD\n3\n5UD\nor\n2UD\nArts or Humanities\nUD\n3\n3UD\nSocial and Behavioral Sciences\nUD\n3\n4UD\nSF State Studies\nCourses certified as meeting the SF State Studies requirements may be upper or lower division in General Education (GE), a major or minor, or an elective.\nAmerican Ethnic and Racial Minorities\nLD or UD\n3\nAERM\nEnvironmental Sustainability and Climate Action\nLD or UD\n3\nES\nGlobal Perspectives\nLD or UD\n3\nGP\nSocial Justice\nLD or UD\n3\nSJ\nNote: LD = Lower-Division; UD = Upper-Division.\nFirst-Time Student Roadmap (4 Year)\nThe roadmaps presented in this Bulletin are intended as suggested plans of study and do not replace meeting with an advisor. For a more personalized roadmap, please use the\nDegree Planner\ntool found in your\nStudent Center\n.\nStudents should use their\nPathway/Category\nto determine which roadmap to follow. For directions on how to view your Pathway/Category, visit\nhow to find your pathway\n. Questions? Contact\nGator Smart Start.\nFirst-Time Student Roadmap – QR Pathway 1/2\nFirst-Time Student Roadmap – QR Pathway 3/4\nTransfer Student Roadmap (2 Year)\nFor students with an AS-T in\nComputer Science\n.\nCOMP ADT Roadmap\nThis degree program is an approved pathway (“similar” major) for students earning the ADT in Computer Science\nCalifornia legislation SB 1440 (2009) mandated the creation of the Associate Degree for Transfer (ADT) to be awarded by the California Community Colleges. Two types of ADTs are awarded: Associate in Arts for Transfer (AA-T) and Associate in Science for Transfer (AS-T).\nNote: no specific degree is required for admission as an upper-division student. However, the ADT includes specific guarantees related to admission and graduation and is designed to clarify the transfer process and strengthen lower-division preparation for the major.\nAn ADT totals 60 units and in most cases includes completion of all lower-division General Education requirements and at least 18 units in a specific major. (The Biology, Chemistry, and Environmental Science AS-T degrees defer 3 units in lower-division GE area 3 and 3 units in lower-division GE area 4 until after transfer.) Students pursuing an ADT are guaranteed admission to the CSU if minimum eligibility requirements are met, though not necessarily to the CSU campus of primary choice.\nUpon verification that the ADT has been awarded prior to matriculation at SF State, students are guaranteed B.A. or B.S. completion in 60 units if pursuing a “similar” major after transfer. Determinations about “similar” majors at SF State are made by faculty in the discipline.\nDegree completion in 60 units cannot be guaranteed when a student simultaneously pursues an additional major, a minor, certificate, or credential.\nA sample advising roadmap for students who have earned an ADT and continue in a \"similar\" major at SF State is available on the Roadmaps tab on the degree requirements page for the major. The roadmap displays:\nHow many lower-division units required for the major have been completed upon entry based on the award of a specific ADT;\nWhich lower-division requirements are considered complete upon entry based on the award of a specific ADT;\nHow to complete the remaining 60 units for the degree in four semesters.\nStudents who have earned an ADT should seek advising in the major department during the first semester of attendance.\nGeneral Advising Information for Transfer Students\nBefore transfer, complete as many lower-division requirements or electives for this major as possible.\nThe following courses are not required for admission but are required for graduation. Students are strongly encouraged to complete these units before transfer; doing so will provide more flexibility in course selection after transfer.\na course in U.S. History\na course in U.S. & California Government\nFor information about satisfying the requirements described in (1) and (2) above at a California Community College (CCC), please visit\nhttp://www.assist.org\n. Check any geographically accessible CCCs; sometimes, options include more than one college. Use ASSIST to determine:\nWhich courses at a CCC satisfy any lower-division major requirements for this major;\nWhich courses at a CCC satisfy CSU GE, US History, and US & CA Government requirements.\nRemedial courses are not transferable and do not apply to the minimum 60 semester units/90 quarter units required for admission.\nAdditional units for courses that are repeated do not apply to the minimum 60 units required for upper-division transfer (for example, if a course was not passed on the first attempt or was taken to earn a better grade).\nBefore leaving the last California Community College of attendance, obtain a summary of completion of lower-division General Education units (IGETC or CSU GE Breadth). This is often referred to as a GE certification worksheet. SF State does not require delivery of this certification to Admissions, but students should retain this document for verifying degree progress after transfer.\nCredit for Advanced Placement, International Baccalaureate, or College-Level Examination Program courses: AP/IB/CLEP credit is not automatically transferred from the previous institution. Units are transferred only when an official score report is delivered to SF State. Credit is based on the academic year during which exams were taken. Refer to the University Bulletin in effect during the year of AP/IB/CLEP examination(s) for details regarding the award of credit for AP/IB/CLEP.\nStudents pursuing majors in science, technology, engineering, and mathematics (STEM) disciplines often defer 6-9 units of lower-division General Education in Areas C and D until after transfer to focus on preparation courses for the major. This advice does not apply to students pursuing associate degree completion before transfer.\nTransferring From Institutions Other Than CCCs or CSUs\nReview SF State's lower-division General Education requirements. Note that, as described below, the four basic skills courses required for admission meet GE Areas 1A/A2, 1B/A3, 1C/A1, and 2/B4 in the SF State GE pattern. Courses that fulfill the remaining areas of SF State’s lower-division GE pattern are available at most two-year and four-year colleges and universities.\nOf the four required basic skills courses, a course in critical thinking (1B/A3) may not be widely offered outside the CCC and CSU systems. Students should attempt to identify and take an appropriate course no later than the term of application to the CSU. To review more information about the 1B/A3 requirement, please visit\nbulletin.sfsu.edu/undergraduate-education/general-education/lower-division/#AAEL\n.\nWaiting until after transfer to take a single course at SF State that meets both US and CA/local government requirements may be an appropriate option, particularly if transferring from outside of California.",
    "url": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/bs-computer-science/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/ms-data-science-artificial-intelligence/",
    "category": "bulletin_cs",
    "title": "Master of Science in Data Science and Artificial Intelligence | San Francisco State University Bulletin",
    "content": "Master of Science in Data Science and Artificial Intelligence\nThe Master of Science in Data Science and Artificial Intelligence (DS&AI) program prepares students for high-demand industry positions in DS&AI and for doctoral programs that require a solid knowledge base in computer science, statistics, machine learning, and artificial intelligence. The program combines a broad and in-depth core curriculum in theory and applications. Students will receive rigorous and hands-on training through high-quality research activities to gain software system-building experiences in interdisciplinary settings. Through this program students with and without a Computer Science background will advance their careers by acquiring computational, statistical and system-building skills in this increasingly data-driven society.\nAdmission requirements\nSuccessful applicants to the program must\nHold a baccalaureate degree from a regionally accredited 4-year institution or shall have completed equivalent academic preparation as determined by the appropriate campus authority in a quantitative/computing field, including but not limited to computer science, mathematics, physics, statistics, engineering or relevant fields. Successful applicants are expected to demonstrate knowledge by having satisfactorily completed courses or worked in the information technology industry in the following areas: data structures, programming, analysis of algorithms, database systems, software engineering,  calculus, probability, and/or statistics. However, an applicant who is deficient in these areas may be admitted conditionally on passing a set of undergraduate courses during the first calendar year of study.\nHave a 3.0 GPA or higher in their earned undergraduate degree or have earned a post-baccalaureate degree.\nSubmit a general GRE score that has been taken within the last 3 years.\nSubmit a TOEFL score (minimum 550/80) or IELTS score (minimum 7.0) obtained within the past two years if their undergraduate degree is from a country where the official language is not English.\nFurnish 2 Letters of Recommendation.\nSubmit a Statement of Purpose\nSubmit a copy of CV or resume.\nCulminating Experience Requirements\nEach student in this program is required to complete a culminating experience project/thesis by enrolling in either\nCSC 895\nApplied Research Project\nor\nCSC 898\nMaster's Thesis\n. Under the supervision of a tenured/tenure-track faculty member, a student employs concepts and methods learned in this program to solve a problem of significant importance from a practical or research standpoint. Through this culminating experience project, a student will synthesize and apply concepts and methods learned in more than one course, analyze and compare existing work in the area of study, create a software solution, evaluate this software, and present the major findings in the forms of an oral defense and written thesis/report.\nCSC 895\nand\nCSC 898\nare equivalent options. The project or thesis will also add a prominent component to a student's portfolio and lay the foundation for a future career in data science and AI, be it a Ph.D. program or a leadership position in the industry.\nEach student will work with a tenured/tenure-track faculty member to decide whether to register for\nCSC 895\nor\nCSC 898\n. Before enrolling in\nCSC 895\nor\nCSC 898\n, the student and his/her faculty advisor will be required to assemble a committee of multiple faculty members to maximize a student’s learning outcomes through working on his/her culminating experience project.\nA culminating experience project in this program will produce the following three major deliverables: (1) a software system that utilizes relevant data to address an important problem; (2) a written report or Master’s thesis; and (3) an oral presentation to argue/explain/demonstrate the software solution and convince the committee of the solution’s efficacy and effectiveness.\nWritten English Proficiency Requirement\nLevel One\nA candidate is considered to have fulfilled the Level 1 Writing Proficiency requirement if this candidate has earned a score of 4.0 or above in their recent GRE’s analytic writing assessment.  In the case a candidate scored below 4.0, this candidate may be conditionally admitted. In such a case, this student is required to successfully finish SCI 614: Graduate Writing Skills (3 units) within one year after starting their studies in this program.\nLevel Two\nThe written report or the Master's thesis resulted from a student's culminating experience project will be utilized to determine a student's Level 2 writing proficiency. Each student in this Master's program is required to carry out a culminating experience (CE) project by enrolling in either\nCSC 895\nor\nCSC 898\n. To successfully complete one's CE project, each student is in turn required, among several other mandatory requirements, to write a written project report for\nCSC 895\nor a written Master's thesis for\nCSC 898\n.\nProgram Learning Outcomes\nDesign and develop software systems to tackle problems throughout the life cycle of data science and Artificial Intelligence. Major components in this life cycle include: data collection/acquisition, data storage/management, data preprocessing, data modeling and machine learning, and visualization.\nObtain an in-depth understanding of a host of machine learning/data mining algorithms; apply, implement, and evaluate such algorithms to extract knowledge from both structured and unstructured data.\nUtilize distributed and parallel computing platforms that are capable of managing and processing big data using computing facilities on premise or in the cloud.\nAnalyze potentially unethical practices in data science and AI and adopt best practices to become a socially and ethically responsible professional.\nCommunicate the data systems effectively with multidisciplinary audiences using verbal, written, and visual forms.\nMaster of Science in Data Science and Artificial Intelligence – 30 units minimum\nStudents may count a maximum of three paired courses (9 units) towards these degree requirements. A paired course is a graduate course paired with an undergraduate course covering similar content and are identified in the course description, e.g., \"CSC 865/665 is a paired course offering.\"\nAlgorithms, AI & Machine Learning\n(6-9 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 865\nArtificial Intelligence\n3\nCSC 869\nData Mining\n3\nCSC 872\nPattern Analysis and Machine Intelligence\n3\nSelect one or two:\nCourse List\nCode\nTitle\nUnits\nCSC 810\nAnalysis of Algorithms II\n3\nCSC 865\nArtificial Intelligence\n3\nCSC 869\nData Mining\n3\nCSC 871\nDeep Learning\n3\nCSC 872\nPattern Analysis and Machine Intelligence\n3\nCSC 876\nSoft Computing and Decision Support Systems\n3\nBig Data Platforms & Systems (3 units)\nSelect one\n:\nCourse List\nCode\nTitle\nUnits\nCSC 848\nSoftware Engineering\n3\nCSC 864\nMultimedia Systems\n3\nCSC 874\nTopics in Big Data Analysis\n3\nCSC 878\nBig Data Platforms and Systems\n3\nProbability, Statistics, and Statistical Learning (6 units)\nCourse List\nCode\nTitle\nUnits\nMATH 440\nProbability and Statistics I\n3\nMATH 448\nIntroduction to Statistical Learning and Data Mining\n3\nData Visualization and Visual Data Analytics (3 units)\nCourse List\nCode\nTitle\nUnits\nCSC 805\nData Visualization: Concepts, Tools, Techniques, and Paradigms\n3\nApplications and Best Practices (3-6 units)\nSelect one or two:\nCourse List\nCode\nTitle\nUnits\nCSC 820\nNatural Language Technologies\n3\nCSC 821\nBiomedical Imaging and Analysis\n3\nCSC 842\nHuman-Computer Interaction\n3\nCSC 847\nCloud and Distributed Computing: Concepts and Applications\n3\nCSC 852\nIntroduction to Security and Data Privacy\n3\nCSC 857\nBioinformatics Computing\n3\nCSC 859\nAI Explainability and Ethics\n3\nCSC 890\nGraduate Seminar\n3\nCSC 897\nResearch\n3-6\nCSC 899\nIndependent Study\n1-3\nISYS 850\nSeminar in Business Intelligence\n3\nMATH 741\nProbability and Statistics II\n3\nMGMT 850\nEthics and Compliance in Business\n3\nMKTG 886\nSeminar in Marketing Analytics\n3\nSupervised Research and Culminating Experience (\n6 units)\nCourse List\nCode\nTitle\nUnits\nSelect One:\n3\nCSC 895\nApplied Research Project\nCSC 898\nMaster's Thesis\nSelect One:\n3\nCSC 897\nResearch\nCSC 899\nIndependent Study\nOptional:\nSupervised Industrial Research (1-3 units)\nCourse List\nCode\nTitle\nUnits\nCSC 893\nSupervised Industrial Research\n1",
    "url": "https://bulletin.sfsu.edu/colleges/science-engineering/computer-science/ms-data-science-artificial-intelligence/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/certificate-software-engineering/",
    "category": "bulletin_cs",
    "title": "Graduate Certificate in Software Engineering | San Francisco State University Bulletin",
    "content": "Graduate Certificate in Software Engineering\nFor more information, including advice on how to apply and obtain the certificate, please visit the\ndepartment's website\n.\nAdmissions Requirements and Procedure\nSelection for admission to the program will be based on applicants’ academic background, work experience, and personal recommendations. We have two distinctive admissions procedures: one for matriculated graduate students at SF State and another for area professionals and non-SF State students who have completed a minimum of a Bachelor’s degree from an accredited university or college with a 3.0 GPA or better.\nA continuing SF State graduate student wishing to be admitted to a graduate certificate program at San Francisco State University is expected to follow the University requirements and procedures outlined herein. Such requirements and procedures may include a supplementary application, a defined set of prerequisite courses, a designated GPA, written recommendations, etc., as may be appropriate for the program in question.\nTo start the admission process please compete the form\nCertificate Admissions Application for Continuing SF State Graduate Students\nand sign it with DocuSign application. Student will be then be contacted by graduate office and/or designated advisor.\nFor non-matriculated SF State students, the certificate is available through application to\nCalState Apply\nfor any student applicant who is eligible to take the required courses and has earned a Bachelor’s degree.\nProgram Learning Outcomes\n1. Learn modern software engineering technologies used to develop, test, deploy, and manage software (SW) applications.\n2. Learn best practices of modern software engineering processes and organization including those applicable to global (distributed) organization of SW projects.\n3. Learn to apply modern tools for team-based SW development.\n4. Learn to apply best practices of effective SE teamwork in locally and globally organized projects.\n5. Learn selected advanced SE technologies and topics via elective course offerings.\nGraduate Certificate in Software Engineering - 12 units\nCore Requirements (6 units)\nCourse List\nCode\nTitle\nUnits\nCSC 847\nCloud and Distributed Computing: Concepts and Applications\n3\nCSC 848\nSoftware Engineering\n3\nCore Options (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 780\nApplication Development for Mobile Devices\n3\nCSC 867\nInternet Application Design and Development\n3\nElective (3 units)\nSelect one:\nCourse List\nCode\nTitle\nUnits\nCSC 720\nAdvanced Operating Systems\n3\nCSC 746\nHigh-Performance Computing\n3\nCSC 841\nComputer Performance Evaluation\n3\nCSC 842\nHuman-Computer Interaction\n3\nCSC 847\nCloud and Distributed Computing: Concepts and Applications\n3\nCSC 868\nAdvanced Object Oriented Software Design and Development\n3\nCSC 874\nTopics in Big Data Analysis\n3\nCSC 899\nIndependent Study\n3",
    "url": "http://bulletin.sfsu.edu/colleges/science-engineering/computer-science/certificate-software-engineering/",
    "domain": "bulletin.sfsu.edu"
  },
  {
    "source": "https://bulletin.sfsu.edu/past-bulletin-archive/2022-2023/colleges/science-engineering/computer-science/bs-computer-science/adt-roadmap/",
    "category": "bulletin_cs",
    "title": "Bachelor of Science in Computer Science – COMP Associate Degree for Transfer (ADT) Roadmap < San Francisco State University",
    "content": "Bachelor of Science in Computer Science – COMP Associate Degree for Transfer (ADT) Roadmap\nThis is an archived copy of the 2022-2023 catalog. To access the most recent version of the catalog, please visit\nhttp://bulletin.sfsu.edu\n.\nThis is a sample pathway for students who transfer to San Francisco State University in the current Bulletin year with an AS-T in Computer Science. 29 units in the major (\nMATH 226\n,\nMATH 227\n,\nPHYS 220\n/\nPHYS 222\n,\nPHYS 230\n/\nPHYS 232\n,\nCSC 210\n,\nCSC 211\n,\nCSC 220\n,\nCSC 230\n,\nCSC 256\n) and all lower division GE requirements have been satisfied. Additional units in the major may have been satisfied. Check with a major advisor about the most appropriate course sequence.\nDegree completion guaranteed in 60 units;\nsee the Associate Degree for Transfer (ADT) section for more information\n.\nTo Do at SF State:\nEnough total units to reach 120 minimum for graduation; 30 units minimum at the upper division level; to include the following:\nUniversity-Wide Requirements: 9-15 Units\nAmerican Institutions (0-6 units): US History, US Government, CA Government. If not met in transfer, see next bullet.\nUpper division GE (9 units): Courses may satisfy the US History or US/CA Government requirements, and UD-C or UD-D at the same time, if approved for multiple areas. Check Note 1.\nStudents entering the major with the AS-T in Computer Science are not required to fulfill SF State Studies and Complementary Studies requirements.\nComputer Science Major:  42 Units\nMATH 226\n/\nMATH 227\n,\nPHYS 220\n/\nPHYS 222\n/\nPHYS 230\n/\nPHYS 232\n, and\nCSC 210\n/\nCSC 211\n/\nCSC 220\n/\nCSC 230\n/\nCSC 256\nmet in transfer.\nMathematics: 6 units\nCore/GWAR: 12 units\nAdvanced CSC requirements: 24 units, including electives.\nSenior Presentation: required oral presentation during senior year (0 units)\nUniversity Electives: 3 or More Units\nDepends on course choices made at the community college, how transferred units are applied to the requirements above, and course choices at SF State. Some courses may meet more than one requirement, e.g. in both UD GE and in the major.\nPlan of Study Grid\nFirst Semester\nUnits\nCSC 300GW\nEthics, Communication, and Tools for Software Development - GWAR\n3\nCSC 340\nProgramming Methodology\n3\nMATH 324\nProbability and Statistics with Computing\n3\nMATH 325\nLinear Algebra\n4\nUS History\n3\nor University Elective if US History met in transfer\nUnits\n16\nSecond Semester\nCSC 317\nIntroduction to Web Software Development\n3\nCSC 413\nSoftware Development\n3\nCSC 510\nAnalysis of Algorithms I\n3\nGE Area UD–C: Upper-Division Arts and/or Humanities\n3\nU.S. and California Government\n3\nor University Elective if US/CA Government met in transfer\nUnits\n15\nThird Semester\nCSC 415\nOperating System Principles\n3\nCSC 600\nProgramming Paradigms and Languages\n3\nMajor Elective - Take Two\n1\n6\nGE Area UD-B: Upper-Division Physical and/or Life Sciences\n3\nUnits\n15\nFourth Semester\nCSC 648\nSoftware Engineering\n3\nMajor Elective – Take Two\n1\n6\nGE Area UD-D: Upper-Division Social Sciences\n3\nUniversity Elective\n2\nUnits\n14\nTotal Units\n60\n1\nMajor Electives (12 units)\nAll students must complete four 3-unit senior electives. At least 9 units must be CSC courses. In addition to the courses listed below, any 600-level CSC course, with the exception of the advanced requirements courses\nCSC 600\nand\nCSC 648\n, can be used as an elective.  The department also allows one CSC graduate course to be used as a senior elective (700-level or higher, and non-paired excluding\nCSC 895\n,\nCSC 898\n,\nCSC 897\n, and\nCSC 899\n).  Exceptions must be approved in advance by a senior advisor.\nCSC 508\nMachine Learning and Data Science for Personalized Medicine (3 units)\nCSC 520\nTheory of Computing (3 units)\nCSC 615\nUNIX Programming (3 units)\nCSC 620\nNatural Language Technologies (3 units)\nCSC 621\nBiomedical Imaging and Analysis (3 units)\nCSC 630  ( units)\nCSC 631\nMultiplayer Game Development (3 units)\nCSC 637  ( units)\nCSC 641\nComputer Performance Evaluation (3 units)\nCSC 642\nHuman-Computer Interaction (3 units)\nCSC 645\nComputer Networks (3 units)\nCSC 651\nSystem Administration (3 units)\nCSC 652\nIntroduction to Security and Data Privacy (3 units)\nCSC 656\nComputer Organization (3 units)\nCSC 658\nProgramming Cafe (3 units)\nCSC 664\nMultimedia Systems (3 units)\nCSC 665\nArtificial Intelligence (3 units)\nCSC 667\nInternet Application Design and Development (3 units)\nCSC 668\nAdvanced Object Oriented Software Design and Development (3 units)\nCSC 675\nIntroduction to Database Systems (3 units)\nCSC 690\nInteractive Multimedia Application Development (3 units)\nCSC 698\nTopics in Computing (3 units)\nCSC 699\nIndependent Study (1-3 units)\nMATH 400\nNumerical Analysis (3 units)\nMATH 425\nApplied and Computational Linear Algebra (3 units)",
    "url": "https://bulletin.sfsu.edu/past-bulletin-archive/2022-2023/colleges/science-engineering/computer-science/bs-computer-science/adt-roadmap/",
    "domain": "bulletin.sfsu.edu"
  }
]