[
  {
    "source": "https://cs.sfsu.edu/event/graduate-seminar-swig-modern-applications",
    "category": "cs_graduate",
    "title": "Graduate Seminar: SWIG: Modern Applications | Department of Computer Science",
    "content": "Graduate Seminar: SWIG: Modern Applications\nWednesday, November 29, 2023\nEvent Time\n06:00 p.m.   -  07:00 p.m.\nPT\nCost\nLocation\nThornton Hall 326\nContact Email\ncs-dept@sfsu.edu\nOverview\nAbstract\nSWIG is widely used in the embedded world because of the conveniences, tool support and debug capabilities that can be leveraged by having a Python interface for C/C++ library. We’ll talk about some of the applications along with a brief overview of how SWIG works.\nSpeaker Biography\nAaron Cruz is a Senior Software Engineer at Cisco Systems who focuses on embedded software development with 8 years of industry experience. Cruz has focused his career on physical middleware software for communication devices like Software Defined Radios and Networking Routers.\nUpcoming Events\nMore events coming soon!",
    "url": "https://cs.sfsu.edu/event/graduate-seminar-swig-modern-applications",
    "domain": "cs.sfsu.edu"
  },
  {
    "source": "https://cs.sfsu.edu/grads/student-policies",
    "category": "cs_graduate",
    "title": "Student Policies | Department of Computer Science",
    "content": "Student Policies\nThe university is committed to maintaining a safe and healthy living and learning environment for students, faculty, and staff. Each campus community member should choose behaviors that contribute toward this end. Therefore, students are expected to be good citizens and to engage in responsible behaviors that reflect well upon their university, be civil to one another and others in the campus community, and contribute positively to student and university life.\nPrerequisite Policy\nCS Department strictly enforces prerequisites for all courses.\nPrerequisites are checked by CS faculty at the beginning of each course.\nA grade of\nC or better is required\nto be accepted as a prerequisite.\nThe final decision about whether a student is ready to take a course is made by the instructor who teaches the course.\nCheating and Plagiarism Policy\nBy academic cheating and plagiarism we mean presenting, as your own work, material produced by or in collaboration with others, or permitting or assisting others to present your work as their own without proper acknowledgment.\nThe policies of San Francisco State University, with respect to cheating and plagiarism, are stated in SF State's Bulletin. Courses involving computer programming require special consideration because use of the computer permits easy copying and trivial modification of programs. In addition, our polices also address availability of content and services on the Internet which can be used for plagiarism and cheating. The following guidelines are provided to help in determining if an incident of cheating or plagiarism has occurred.\nThe instructor may suspect a student of program plagiarism if the student submits a program that is so similar to the program submitted by a present or past student in the course that the solutions may be converted to one another by a simple mechanical transformation.\nThe instructor may suspect a student of cheating, whether on a program or an examination, if the student cannot explain both the intricacies of his or her solution and the techniques and principles used to generate that solution.\nIt should be clear that there is latitude for difference among individual instructors, particularly on the matter of when working with other students or adapting material from a textbook is permissible. The following general policy on cooperation on homework assignments holds:\nIn all circumstances it is acceptable to discuss the meaning of assignments and general approaches and strategies for handling those assignments with other members of the Academic Community. Any cooperation beyond that point, including shared pseudocode or flowcharts, shared code, or shared documentation, is only acceptable if specifically so permitted by the class instructor in written guidelines distributed to the entire class.\nThe Penalty\nIn cases of academic cheating or plagiarism, no credit will be given for the assignment in question and a record will be kept in the Computer Science department office. If a second or further incident is reported for an individual, or if the circumstances of a first incident so warrant, a letter describing the incident(s) will be forwarded to the Student Discipline Officer for possible disciplinary action, which may include expulsion, suspension, or probation; as well as lesser sanctions. Please refer to the Supplemental Regulations and Procedures section of SF State's Bulletin for details.\nAny student using Rentacoder or similar WWW service in any relation to schoolwork will be dealt with most seriously, including possible expulsion from the university.\nExamples\nWhen a student turns in the work of another student and represents it as his or her own work.\nWhen a student knowingly permits another to turn in his or her work.\nWhen a student copies code from the work of another student.\nWhen a student deliberately transforms borrowed sections of code in order to disguise their origin.\nWhen several students collaborate on a project and fail to inform the instructor of this.\nWhen a student steals or obtains examinations, answer keys, or program samples from the instructors files or computer directories.\nWhen a student modifies or deletes another student's or an instructor's computer files.\nWhen a student uses content from other sources like Internet and includes it in his/her work or projects without proper attribution.\nWhen a student uses Internet or other services to post assignments and seek solutions.\nWhen Internet resources are used verbatim and/or \"cut and pasted\" into students work regardless whether they are acknowledged or not.\nWhen Does It Not Occur?\nWhen students have permission to collaborate on a project, and list all collaborators.\nWhen students receive advice from instructors, teaching assistants, or staff members involved in the course.\nWhen students share knowledge about syntax errors, coding tricks, or other language-specific information that makes programming easier.\nWhen students engage in a general discussion of the nature of an assignment, the requirements for an assignment, or general implementation strategies.\nWhen students compare independent solutions to an assignment in order to better understand the nature of the assignment.\nWhen students engage in discussion of course concepts or programming strategies in preparation for an assignment or examination.\nWhen students copy code and cite its source on assignments for which the instructor allows inclusion of code other than the student's own.\nHow to Check for Plagiarism\nPlease consult with your course instructor if you have any questions regarding whether or not your work with other students and/or materials prepared for submission are appropriate. The following examples illustrate situations when Academic Cheating and/or Plagiarism has and has not occurred. Please note these lists are not comprehensive!\nSee also the reference materials posted by SF State's Center for Teaching and Faculty Development on Academic Integrity & Plagiarism:\n(SF State's Plagirarism Policy Page)\nDistribution of this Policy\nCopies of this policy will be available in the department office and posted on bulletin boards within the department. The policy will also be attached to, or included, in the undergraduate and graduate information bulletins.\nAn announcement of the existence of the policy will be made by the instructor at the first meeting each semester of every Computer Science class, at which time any course specific guidelines on cooperation and use of published programs can also be stated. For lower division courses, reference to this policy and statement of any course specific guidelines will be included in the course syllabus distributed to all students.\nPolicy on Observance of Religious Holidays\nThe San Francisco State University faculty shall make reasonable accommodations for students to observe religious holidays when such observances require students to be absent from class activities.\nIt is the responsibility of the student to inform the instructor, in writing, about such holidays during the first two weeks of the class each semester. If such holidays occur during the first two weeks of the semester, the student must notify the instructor, in writing, at least three days before the date that they will be absent.\nIt is the instructor's responsibility to make every reasonable effort to honor the student's request without penalty and for the student to make up the work missed.\nStudent Disclosures on Sexual Violence\nSF State fosters a campus free of sexual violence including sexual harassment, domestic violence, dating violence, stalking, and/or any form of sex or gender discrimination.\nIf you disclose a personal experience as an SF State student, the course instructor is required to notify the Dean of Students.\nTo disclose any such violence confidentially, please contact:\nThe SAFE Place:\n(415) 338-2208\nhttp://www.sfsu.edu/~safe_plc/\nCounseling and Psychological Services Center:\n(415) 338-2208\nhttp://psyservs.sfsu.edu/\nFor more information on your rights and available resources:\nhttp://titleix.sfsu.edu\nDisability Access\nStudents with disabilities who need reasonable accommodations are encouraged to contact the instructor.\nThe Disability Programs and Resource Center (DPRC) is available to facilitate the reasonable accommodations process. The DPRC is located in the Student Services Building and can be reached by telephone (voice/TTY 415-338-2472) or by email\ndprc@sfsu.edu\n.\nFor more information, please visit their homepage:\nhttp://www.sfsu.edu/~dprc",
    "url": "https://cs.sfsu.edu/grads/student-policies",
    "domain": "cs.sfsu.edu"
  },
  {
    "source": "https://cs.sfsu.edu/event/graduate-seminar-making-physical-models-maps-surfaces",
    "category": "cs_graduate",
    "title": "Graduate Seminar: Making Physical Models of Maps on Surfaces | Department of Computer Science",
    "content": "Graduate Seminar: Making Physical Models of Maps on Surfaces\nWednesday, November 01, 2023\nEvent Time\n06:30 p.m.   -  07:30 p.m.\nPT\nCost\nLocation\nThornton Hall 331\nContact Email\ncs-dept@sfsu.edu\nOverview\nAbstract\nGiven a map of countries, cartographers color the map so that bordering countries are colored differently. A classic problem in graph theory asks for the minimum number of colors needed for any map. For maps drawn on the plane or the sphere, this is the well-known Four Color Theorem, but there is also a generalization to arbitrary closed surfaces, like the torus or the Klein bottle. Recently, mathematical artists have been interested in making physical models of those maps that need the most number of colors. In this talk, I will discuss the various approaches people have taken for making these models. In particular, I will cover my own attempts using a 3D printer, and the challenges and workarounds I found while making my \"Neighborly Nine\" sculpture.\nBiography of Speaker\nTimothy Sun is an Assistant Professor in the Computer Science department at SFSU. His research is primarily in topological graph theory, but he sometimes dabbles in computer science education and recreational mathematics.\"\nUpcoming Events\nMore events coming soon!",
    "url": "https://cs.sfsu.edu/event/graduate-seminar-making-physical-models-maps-surfaces",
    "domain": "cs.sfsu.edu"
  },
  {
    "source": "https://cs.sfsu.edu/event/graduate-seminar-secure-distributed-machine-learning-multi-aggregators-edge-computing",
    "category": "cs_graduate",
    "title": "Graduate Seminar: Secure Distributed Machine Learning with Multi Aggregators in Edge Computing | Department of Computer Science",
    "content": "Graduate Seminar: Secure Distributed Machine Learning with Multi Aggregators in Edge Computing\nThursday, February 22, 2024\nEvent Time\n01:00 p.m.   -  02:00 p.m.\nPT\nCost\nLocation\nZOOM\nContact Email\ncs-dept@sfsu.edu\nOverview\nAbstract\nFederated learning (FL) is a sought-after distributed machine learning architecture and has been seamlessly integrated into edge computing. However, the limited resources on edge devices introduce security vulnerabilities to FL. While blockchain technology promises to bolster security, edge devices cannot afford the cost of off-the-shelf blockchain systems. Moreover, the Blockchain-FL with multiple aggregators is still under-explored. In this talk, I introduce a novel Blockchain-empowered Heterogeneous Multi-Aggregator Federated Learning Architecture (BMA-FL). We design a performance-based Byzantine consensus mechanism to enable secure and fast model aggregation. I will also discuss the model damaging problem in BMA-FL due to the heterogeneity of aggregators. We propose a multi-agent deep reinforcement learning algorithm to help aggregators decide the best training strategies to mitigate the damage. The experiments on real-word datasets demonstrate the efficiency of BMA-FL to achieve better model performance faster than baselines.\nSpeaker Biography\nXiao Li is a Ph.D. Candidate in Computer Science at The University of Texas at Dallas advised by Prof. Weili Wu. His research focuses on blockchain technology and its applications in distributed systems. He is also interested in applied data science for problem solving with application of machine learning, deep learning and reinforcement Learning. Xiao has published 10 papers in related fields at refereed conferences and journals such as IEEE ICDCS, IEEE TCSS, Theoretical Computer Science, and Journal of Combinatorial Optimization. Xiao was awarded the prestigious Jan Van der Ziel Fellowship at UT Dallas in 2023. Xiao is also a member of IEEE, ACM and AAAI. Xiao has served as peer reviewers in various reputable conferences and journals including KDD, ICDCS, IJCAI and Information Sciences.\nUpcoming Events\nMore events coming soon!",
    "url": "https://cs.sfsu.edu/event/graduate-seminar-secure-distributed-machine-learning-multi-aggregators-edge-computing",
    "domain": "cs.sfsu.edu"
  },
  {
    "source": "https://cs.sfsu.edu/event/graduate-seminar-application-mathematical-modeling-and-machine-learning-optimizing-network",
    "category": "cs_graduate",
    "title": "Graduate Seminar: Application of Mathematical Modeling and Machine Learning for Optimizing Network Design and Operation | Department of Computer Science",
    "content": "Graduate Seminar: Application of Mathematical Modeling and Machine Learning for Optimizing Network Design and Operation\nTuesday, October 31, 2023\nEvent Time\n01:00 p.m.   -  02:00 p.m.\nPT\nCost\nLocation\nZoom\nContact Email\ncs-dept@sfsu.edu\nOverview\nAbstract\nNetwork architectures can be found in many structures ranging from natural phenomena to computer systems. My research centers on the study and design of algorithms for the simulation and optimization of network structures using various methods including mathematical modeling, graph theory and machine learning. In this talk, I present selected findings from our research on routing optimization in heterogeneous wireless communication networks deployed in challenged environment, such as the deep space. I also present the ongoing work on the simulation of metabolic networks to build a deep mechanistic understanding of the interplay between key environmental growth conditions and the ability of plants’ metabolism to manage the flow of energy, carbon, and nitrogen.\nBiography of Speaker\nSara El Alaoui is a postdoctoral researcher at Argonne National Lab conducting research in the field of computational biology. She received her Ph. D. in Computer Engineering and her Master’s in Computer Science from the University of Nebraska-Lincoln (UNL). Her current research focuses on building a deep mechanistic understanding of plants’ metabolism ability to manage the flow of energy, carbon, and nitrogen through simulation. She has designed and built analytical processes and simulators for metabolic networks using state of the art tools. Her work has been presented and published in multiple flagship conferences and peer-reviewed journals. In recognition of her research contributions, she has received multiple awards, including UNL's Othmer Fellowship for exceptional scholars seeking a terminal degree, the Dean's Fellowship, and CSE Outstanding Master’s Thesis Award. Along with her research, Sara has served as a Teaching Assistant and lab instructor in a number of Computer Science courses. She has also received the Center for the Integration of Research, Teaching and Learning (CIRTL) Certificate from UNL.\nUpcoming Events\nMore events coming soon!",
    "url": "https://cs.sfsu.edu/event/graduate-seminar-application-mathematical-modeling-and-machine-learning-optimizing-network",
    "domain": "cs.sfsu.edu"
  }
]