[
  {
    "source": "https://cs.sfsu.edu/undergrads/student-policies",
    "category": "cs_undergraduate",
    "title": "Student Policies | Department of Computer Science",
    "content": "Student Policies\nThe university is committed to maintaining a safe and healthy living and learning environment for students, faculty, and staff. Each campus community member should choose behaviors that contribute toward this end. Therefore, students are expected to be good citizens and to engage in responsible behaviors that reflect well upon their university, be civil to one another and others in the campus community, and contribute positively to student and university life.\nPrerequisite Policy\nCS Department strictly enforces prerequisites for all courses.\nPrerequisites are checked by CS faculty at the beginning of each course.\nA grade of\nC or better is required\nto be accepted as a prerequisite.\nThe final decision about whether a student is ready to take a course is made by the instructor who teaches the course.\nCheating and Plagiarism Policy\nBy academic cheating and plagiarism we mean presenting, as your own work, material produced by or in collaboration with others, or permitting or assisting others to present your work as their own without proper acknowledgment.\nThe policies of San Francisco State University, with respect to cheating and plagiarism, are stated in SF State's Bulletin. Courses involving computer programming require special consideration because use of the computer permits easy copying and trivial modification of programs. In addition, our polices also address availability of content and services on the Internet which can be used for plagiarism and cheating. The following guidelines are provided to help in determining if an incident of cheating or plagiarism has occurred.\nThe instructor may suspect a student of program plagiarism if the student submits a program that is so similar to the program submitted by a present or past student in the course that the solutions may be converted to one another by a simple mechanical transformation.\nThe instructor may suspect a student of cheating, whether on a program or an examination, if the student cannot explain both the intricacies of his or her solution and the techniques and principles used to generate that solution.\nIt should be clear that there is latitude for difference among individual instructors, particularly on the matter of when working with other students or adapting material from a textbook is permissible. The following general policy on cooperation on homework assignments holds:\nIn all circumstances it is acceptable to discuss the meaning of assignments and general approaches and strategies for handling those assignments with other members of the Academic Community. Any cooperation beyond that point, including shared pseudocode or flowcharts, shared code, or shared documentation, is only acceptable if specifically so permitted by the class instructor in written guidelines distributed to the entire class.\nThe Penalty\nIn cases of academic cheating or plagiarism, no credit will be given for the assignment in question and a record will be kept in the Computer Science department office. If a second or further incident is reported for an individual, or if the circumstances of a first incident so warrant, a letter describing the incident(s) will be forwarded to the Student Discipline Officer for possible disciplinary action, which may include expulsion, suspension, or probation; as well as lesser sanctions. Please refer to the Supplemental Regulations and Procedures section of SF State's Bulletin for details.\nAny student using Rentacoder or similar WWW service in any relation to schoolwork will be dealt with most seriously, including possible expulsion from the university.\nExamples\nWhen a student turns in the work of another student and represents it as his or her own work.\nWhen a student knowingly permits another to turn in his or her work.\nWhen a student copies code from the work of another student.\nWhen a student deliberately transforms borrowed sections of code in order to disguise their origin.\nWhen several students collaborate on a project and fail to inform the instructor of this.\nWhen a student steals or obtains examinations, answer keys, or program samples from the instructors files or computer directories.\nWhen a student modifies or deletes another student's or an instructor's computer files.\nWhen a student uses content from other sources like Internet and includes it in his/her work or projects without proper attribution.\nWhen a student uses Internet or other services to post assignments and seek solutions.\nWhen Internet resources are used verbatim and/or \"cut and pasted\" into students work regardless whether they are acknowledged or not.\nWhen Does It Not Occur?\nWhen students have permission to collaborate on a project, and list all collaborators.\nWhen students receive advice from instructors, teaching assistants, or staff members involved in the course.\nWhen students share knowledge about syntax errors, coding tricks, or other language-specific information that makes programming easier.\nWhen students engage in a general discussion of the nature of an assignment, the requirements for an assignment, or general implementation strategies.\nWhen students compare independent solutions to an assignment in order to better understand the nature of the assignment.\nWhen students engage in discussion of course concepts or programming strategies in preparation for an assignment or examination.\nWhen students copy code and cite its source on assignments for which the instructor allows inclusion of code other than the student's own.\nHow to Check for Plagiarism\nPlease consult with your course instructor if you have any questions regarding whether or not your work with other students and/or materials prepared for submission are appropriate. The following examples illustrate situations when Academic Cheating and/or Plagiarism has and has not occurred. Please note these lists are not comprehensive!\nSee also the reference materials posted by SF State's Center for Teaching and Faculty Development on Academic Integrity & Plagiarism:\n(SF State's Plagirarism Policy Page)\nDistribution of this Policy\nCopies of this policy will be available in the department office and posted on bulletin boards within the department. The policy will also be attached to, or included, in the undergraduate and graduate information bulletins.\nAn announcement of the existence of the policy will be made by the instructor at the first meeting each semester of every Computer Science class, at which time any course specific guidelines on cooperation and use of published programs can also be stated. For lower division courses, reference to this policy and statement of any course specific guidelines will be included in the course syllabus distributed to all students.\nPolicy on Observance of Religious Holidays\nThe San Francisco State University faculty shall make reasonable accommodations for students to observe religious holidays when such observances require students to be absent from class activities.\nIt is the responsibility of the student to inform the instructor, in writing, about such holidays during the first two weeks of the class each semester. If such holidays occur during the first two weeks of the semester, the student must notify the instructor, in writing, at least three days before the date that they will be absent.\nIt is the instructor's responsibility to make every reasonable effort to honor the student's request without penalty and for the student to make up the work missed.\nStudent Disclosures on Sexual Violence\nSF State fosters a campus free of sexual violence including sexual harassment, domestic violence, dating violence, stalking, and/or any form of sex or gender discrimination.\nIf you disclose a personal experience as an SF State student, the course instructor is required to notify the Dean of Students.\nTo disclose any such violence confidentially, please contact:\nThe SAFE Place:\n(415) 338-2208\nhttp://www.sfsu.edu/~safe_plc/\nCounseling and Psychological Services Center:\n(415) 338-2208\nhttp://psyservs.sfsu.edu/\nFor more information on your rights and available resources:\nhttp://titleix.sfsu.edu\nDisability Access\nStudents with disabilities who need reasonable accommodations are encouraged to contact the instructor.\nThe Disability Programs and Resource Center (DPRC) is available to facilitate the reasonable accommodations process. The DPRC is located in the Student Services Building and can be reached by telephone (voice/TTY 415-338-2472) or by email\ndprc@sfsu.edu\n.\nFor more information, please visit their homepage:\nhttp://www.sfsu.edu/~dprc",
    "url": "https://cs.sfsu.edu/undergrads/student-policies",
    "domain": "cs.sfsu.edu"
  },
  {
    "source": "https://cs.sfsu.edu/undergrads/prerequisite-chart",
    "category": "cs_undergraduate",
    "title": "Prerequisite Chart | Department of Computer Science",
    "content": "Prerequisite Chart\nEnforcement\nCS Department\nstrictly\nenforces prerequisites for all courses. Prerequisites are checked by CS faculty at the beginning of each course. The final decision about whether a student is ready to take a course is made by the instructor who teaches the course.\nBulletin Rights\nStudents who start the study of CS under a program that is published in the Bulletin have the right to graduate with the same program in a specific time interval. However, this right\ndoes not\nhold for course prerequisites. The CS Department regularly improves its curriculum and as a result the prerequisites may change. Because the Bulletin is printed early (before the start of the academic year), it may not completely reflect the most recent changes to prerequisites.",
    "url": "https://cs.sfsu.edu/undergrads/prerequisite-chart",
    "domain": "cs.sfsu.edu"
  },
  {
    "source": "https://cs.sfsu.edu/undergrads/advising",
    "category": "cs_undergraduate",
    "title": "Undergraduate Advising | Department of Computer Science",
    "content": "Undergraduate Advising\nProper and timely advising has been shown to significantly improve students' success and graduation rate. We summarize here our advising process and mandatory advising checkpoints. Please refer to the advising process described under these undergraduate, graduate and transfer advising section.\nAdvising\nStudent Advising Guidance\nComputer science students are strongly encouraged to adhere to the following student responsibilities:\nFollowing the appropriate advising process to their standing, as described under these Undergraduate and Graduate sections.\nReading\nall emails\nsent from the computer science office and faculty.\nSeeking advising for any mandatory advising checkpoints.\nSeeking advising whenever a need arises, in a timely manner with respect to any deadlines.\nUndergraduate Advising\nIt is important and beneficial to take the opportunity to schedule timely advising for assistance and achieving success. Students should plan their program of study in the major with the help of a departmental advisor as soon as possible in order that the correct sequence of courses is taken and a proper set of electives is chosen. Students are advised that CR/NC grades are\nnot\nacceptable in courses to be counted for the Computer Science major or minor programs. It is also suggested that students consult with an advisor before selecting courses to meet the General Education requirements.\nUse Navigator to Schedule your appointment.\nWilliam Hsu can be reached via email only until 10/5/2025 for advising needs:\nwhsu@sfsu.edu\n.\nSee Navigator Appointment Guide for Computer Science on how to schedule your appointment.\nPlease email\ncs-dept@sfsu.edu\nif you are unable to access Navigator.\nTransfer Advising\nAdvising Tips\nFor your appointment with your advisor, please bring the following documents (if available, online documents are ok):\nTranscripts\nList of all major related courses with course title, semester taken, college taken at, and grades obtained.\nIf possible, please bring course descriptions, syllabus, text book title, and any other related course materials.\nUse Navigator to Schedule your appointment.\nWilliam Hsu can be reached via email only until 10/5/2025 for advising needs:\nwhsu@sfsu.edu\n.\nSee Navigator Appointment Scheduler Quick Reference Guide on how to schedule your appointment.\nPlease email\ncs-dept@sfsu.edu\nif you are unable to access Navigator.\nGraduation Advising\nGraduation\nSee the\nRegistrar's Office's web page\nfor details on the graduation process. If your DPR shows something missing, please schedule an appointment with an Advisor. Make sure to complete your Senior Electives.\nSenior Electives\nAll CSC majors must complete five 3-unit senior electives. Students may choose 15 units from among the following courses:\nCSC 520: Theory of Computing\nCSC 600: Programming Paradigms and Languages\nCSC 615: UNIX Programming\nCSC 620: Natural Language Technologies\nCSC 621: Biomedical Imaging and Analysis\nCSC 630: Computer Graphics Systems Design\nCSC 631: Multiplayer Game Development\nCSC 641: Computer Performance Evaluation\nCSC 642: Human-Computer Interaction\nCSC 645: Computer Networks\nCSC 647: Introduction to Quantum Computing and Quantum Information Science\nCSC 649: Search Engines\nCSC 651: System Administration\nCSC 652: Introduction to Security and Data Privacy\nCSC 656: Computer Organization\nCSC 657: Bioinformatics Computing\nCSC 658: Programming Cafe\nCSC 664: Multimedia Systems\nCSC 665: Artificial Intelligence\nCSC 667: Internet Application Design and Development\nCSC 668: Advanced Object Oriented Software Design and Development\nCSC 671: Deep Learning\nCSC 675: Introduction to Database Systems\nCSC 676: Soft Computing and Decision Support Systems\nCSC 680: Application Development for Mobile Devices\nCSC 690: Interactive Multimedia Application Development\nCSC 698: Topics in Computing\nCSC 699: Independent Study\nMATH 400: Numerical Analysis\nMATH 425: Applied and Computational Linear Algebra\nMATH 448: Introduction to Statistical Learning and Data Mining\n*Most graduate CSC courses may also be used as senior electives.\n**You may only choose one of the listed MATH courses as a senior elective.\nStudents are advised to check their university and college regulations regarding academic standing requirements. It is occasionally possible to use a course taken in a different department or at another university to satisfy elective requirements. Any course substitutions must be approved in advance by a Senior Advisor.\nOutside of SF State Transfer Students\nOur program has been recently revised to streamline the course articulation for transfer, allowing more courses taken at community colleges or other schools to count towards your Computer Science Degree at SF State.\nTransferable Courses\nAll lower division courses (course numbers below 300) included among the degree requirements are available at many community colleges in California. Students intending to enter the program upon transferring to San Francisco State University from a community college should take as many of those courses there as possible.\nThe equivalents for the following Computer Science courses may be taken from approved universities and applied to your SF State CS Degree:\nCSC 101: Introduction to Computing\nCSC 215: Intermediate Computer Programming\nCSC 220: Data Structures\nCSC 230: Discrete Mathematics\nCSC 256: Machine Structures\nAdditionally, the following non-CS courses, required for completion of the program, may also be transferred from other institutions depending on their respective department's policies:\nMATH 226: Calculus I\nMATH 227: Calculus II\nPHYS 220/222: Physics I\nPHYS 230/232: Physics II\nBIOL 100: Introduction to Biology\nTo verify course equivalencies, please consult\nassist.org\n.\nQuickly look up articulation agreements for CS courses\nusing this tool\n.\nIf all lower-division major and GE requirements are satisfied, check out the\nSF State Bulletin's Roadmap for Transfer Students\n.\nExpected Programming Knowledge\nStudents who transfer to our program should have adequate Java experience. Students can attain adequate Java background by taking a course which should include topics as specified in the resources below:\nThe main Java tutorials website:\nOracle Java Tutorial Documentation web page.\nTopics Include:\nOracle Java Tutorial Documentation: Getting Started\n(Study All Topics)\nOracle Java Tutorial Documentation: Learning the Java Language\n(Study All Topics)\nOracle Java Tutorial Documentation: Essential Java Classes\n(Study Exceptions and Basic I/O)\nOracle Java Tutorial Documentation: Collections\n(Study Introduction and Interfaces)\nForms\nUndergraduate Forms\nIf you are submitting a\nWaiver of College Regulations Petition form\n, please follow the instructions below:\nSTEP 1: Student fills out the petition form electronically:\nhttps://registrar.sfsu.edu/sites/default/files/documents/collegewaiver_1.pdf\nMake sure Course information is correct\n.\n(ex. Term/Year: Fall 2023, Prefix: CSC, Number: 510, Section: 02, Class No. 3216, Units: 3). Check Class No. on\nhttps://webapps.sfsu.edu/public/classservices/classsearch\nCheck only 1 box. If you need to submit multiple petitions, use different forms.\nSend form from your SFSU email to Instructor’s SFSU email for approval\nNote: you DO NOT have to sign the form if it is being sent from your official SFSU email account.\nPLEASE USE THIS PATTERN AS THE SUBJECT LINE FOR YOUR EMAIL:\nNAME – SFSU ID#\n(ex. John Doe - 912345678)\nSTEP 2: Instructor receives form and forwards approval to the CS Office\nForward approval with an “I approve” from the instructor’s official SFSU email to\ncs-dept@sfsu.edu\nNote: instructors DO NOT need to sign the form if it is being sent from their official SFSU email account.\nSTEP 3: Office checks if all the above is correct and then forwards to Department Chair\nPut * after ID# in email title for everything except “Repeat a course after maximum attempts or in excess of unit repeat limits”\nForward to Dept. Chair and cc student\nSTEP 4: Department Chair will forward approval to Registrar’s to process\nIf you do not complete all instructions in Step 1 correctly, the CS Office will reroute your petition form back to your email for you to correct.\nHas my petition been approved/processed?\nIf you have been cc'd in the email with approval from the Dept. Chair to the Registrar's, your form has been sent to the Registrar's to process your petition. If you have not, the office is most likely waiting on the Instructor to send their approval. The Registrars Office will provide updates to your petition to your SFSU email.\nWaiver of College Regulations Petition.pdf\n532.62 KB\nComputer Science Department Transfer Equivalency Evaluation.pdf\n429.15 KB\nAcademic Bulletin Quick Links\nPrerequisite Courses\nRoadmap\nTransfer",
    "url": "https://cs.sfsu.edu/undergrads/advising",
    "domain": "cs.sfsu.edu"
  }
]